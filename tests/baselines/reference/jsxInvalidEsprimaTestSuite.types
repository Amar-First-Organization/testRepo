=== tests/cases/conformance/jsx/1.tsx ===
declare var React: any;
>React : any

</>;
>> : boolean
> : any (error)
> : any (error)

=== tests/cases/conformance/jsx/2.tsx ===
<a: />;
><a: /> : any (error)
>a : any (error)

=== tests/cases/conformance/jsx/3.tsx ===
<:a />;
>< : boolean
> : any (error)
> : any (error)
>a /> : boolean
>a / : number
>a : any (error)
> : any (error)
> : any (error)

=== tests/cases/conformance/jsx/4.tsx ===
<a b=d />;
><a b=d /> : any (error)
>a : any (error)
>b : true
>d : true

=== tests/cases/conformance/jsx/5.tsx ===
<a>;
><a>; : any (error)
>a : any (error)
> : any (error)

=== tests/cases/conformance/jsx/6.tsx ===
<a></b>;
><a></b> : any (error)
>a : any (error)
>b : any (error)

=== tests/cases/conformance/jsx/7.tsx ===
<a foo="bar;
><a foo="bar; : any (error)
>a : any (error)
>foo : string

=== tests/cases/conformance/jsx/8.tsx ===
<a:b></b>;
><a:b></b> : any (error)
>a : any (error)
>b : true
>b : any (error)

=== tests/cases/conformance/jsx/9.tsx ===
<a:b.c></a:b.c>;
><a:b.c></a : any (error)
>a : any (error)
>b : true
>c : true
>a : any (error)
>b.c> : boolean
>b.c : any (error)
>b : any (error)
>c : any (error)
> : any (error)

=== tests/cases/conformance/jsx/10.tsx ===
<a.b:c></a.b:c>;
><a.b:c></a.b : any (error)
>a.b : any (error)
>a : any (error)
>b : any (error)
>c : true
>a.b : any (error)
>a : any (error)
>b : any (error)
>c> : boolean
>c : any (error)
> : any (error)

=== tests/cases/conformance/jsx/11.tsx ===
<a.b.c></a>;
><a.b.c></a> : any (error)
>a.b.c : any (error)
>a.b : any (error)
>a : any (error)
>b : any (error)
>c : any (error)
>a : any (error)

=== tests/cases/conformance/jsx/12.tsx ===
<.a></.a>;
><.a> : boolean
><.a : boolean
> : any (error)
>.a : any (error)
> : any (error)
>a : any (error)
> : any (error)
>a> : boolean
>a : any (error)
> : any (error)

=== tests/cases/conformance/jsx/13.tsx ===
<a.></a.>;
><a.></a.> : any (error)
>a. : any (error)
>a : any (error)
> : any (error)
>a. : any (error)
>a : any (error)
> : any (error)

=== tests/cases/conformance/jsx/14.tsx ===
<a[foo]></a[foo]>;
><a : any (error)
>a : any (error)
>[foo]> : boolean
>[foo] : any (error)[]
>foo : any (error)
> : any (error)
>a[foo]> : boolean
>a[foo] : any (error)
>a : any (error)
>foo : any (error)
> : any (error)

=== tests/cases/conformance/jsx/15.tsx ===
<a['foo']></a['foo']>;
><a : any (error)
>a : any (error)
>['foo']> : boolean
>['foo'] : string[]
>'foo' : "foo"
> : any (error)
>a['foo']> : boolean
>a['foo'] : any (error)
>a : any (error)
>'foo' : "foo"
> : any (error)

=== tests/cases/conformance/jsx/16.tsx ===
<a><a />;
><a><a />; : any (error)
>a : any (error)
><a /> : any (error)
>a : any (error)
> : any (error)

=== tests/cases/conformance/jsx/17.tsx ===
<a b={}>;
><a b={}>; : any (error)
>a : any (error)
>b : any (error)
> : any (error)

=== tests/cases/conformance/jsx/18.tsx ===
var x = <div>one</div><div>two</div>;;
>x : any (error)
><div>one</div><div>two</div> : any (error)
><div>one</div> : any (error)
>div : any (error)
>div : any (error)
><div>two</div> : any (error)
>div : any (error)
>div : any (error)

=== tests/cases/conformance/jsx/19.tsx ===
var x = <div>one</div> /* intervening comment */ <div>two</div>;;
>x : any (error)
><div>one</div> /* intervening comment */ <div>two</div> : any (error)
><div>one</div> : any (error)
>div : any (error)
>div : any (error)
><div>two</div> : any (error)
>div : any (error)
>div : any (error)

=== tests/cases/conformance/jsx/20.tsx ===
<a>{"str";}</a>;
><a>{"str";}</a> : any (error)
>a : any (error)
>"str" : "str"
>a : any (error)

=== tests/cases/conformance/jsx/21.tsx ===
<span className="a", id="b" />;
><span className="a", id="b" /> : any (error)
>span : any (error)
>className : string
>id : string

=== tests/cases/conformance/jsx/22.tsx ===
<div className"app">;
><div className : any (error)
>div : any (error)
>className : true
>"app"> : boolean
>"app" : "app"
> : any (error)

=== tests/cases/conformance/jsx/23.tsx ===
<div {props} />;
><div {props} /> : any (error)
>div : any (error)
>props : any (error)

=== tests/cases/conformance/jsx/24.tsx ===
<div>stuff</div {...props}>;
><div>stuff</div : any (error)
>div : any (error)
>div : any (error)
>props : any (error)
>> : boolean
> : any (error)
> : any (error)

=== tests/cases/conformance/jsx/25.tsx ===
<div {...props}>stuff</div {...props}>;
><div {...props}>stuff</div : any (error)
>div : any (error)
>props : any (error)
>div : any (error)
>props : any (error)
>> : boolean
> : any (error)
> : any (error)


=== tests/cases/conformance/jsx/26.tsx ===
<a>></a>;
><a>></a> : any (error)
>a : any (error)
>a : any (error)

=== tests/cases/conformance/jsx/27.tsx ===
<a> ></a>;
><a> ></a> : any (error)
>a : any (error)
>a : any (error)

=== tests/cases/conformance/jsx/28.tsx ===
<a b=}>;
><a b=}>; : any (error)
>a : any (error)
>b : true

> : any (error)

=== tests/cases/conformance/jsx/29.tsx ===
<a b=<}>;
><a b=<}>; : any (error)
><a b= : any (error)
>a : any (error)
>b : true
><}>; : any (error)
> : any (error)

> : any (error)

=== tests/cases/conformance/jsx/30.tsx ===
<a>}</a>;
><a>}</a> : any (error)
>a : any (error)
>a : any (error)

=== tests/cases/conformance/jsx/31.tsx ===
<a .../*hai*/asdf/>;
><a .../*hai*/asdf/> : any (error)
>a : any (error)
>asdf : true

