===================================================================
JsFile: commentsOnClassExpressionWithStaticPropertiesCapturingBlockScoped.js
mapUrl: commentsOnClassExpressionWithStaticPropertiesCapturingBlockScoped.js.map
sourceRoot: 
sources: commentsOnClassExpressionWithStaticPropertiesCapturingBlockScoped.ts
===================================================================
-------------------------------------------------------------------
emittedFile:tests/cases/compiler/commentsOnClassExpressionWithStaticPropertiesCapturingBlockScoped.js
sourceFile:commentsOnClassExpressionWithStaticPropertiesCapturingBlockScoped.ts
-------------------------------------------------------------------
>>>"use strict";
1 >
2 >^^^^^^^^^^^^
3 >            ^
4 >             ^->
1 >
2 >"use strict"
3 >            
1 >Emitted(1, 1) Source(1, 1) + SourceIndex(0)
2 >Emitted(1, 13) Source(1, 13) + SourceIndex(0)
3 >Emitted(1, 14) Source(1, 13) + SourceIndex(0)
---
>>>var arr = [];
1->
2 >^^^^
3 >    ^^^
4 >       ^^^
5 >          ^^
6 >            ^
7 >             ^^^^^^^^^^^^^^^^->
1->
  >declare var console: any;
  >
2 >const 
3 >    arr
4 >       : any[] = 
5 >          []
6 >            ;
1->Emitted(2, 1) Source(3, 1) + SourceIndex(0)
2 >Emitted(2, 5) Source(3, 7) + SourceIndex(0)
3 >Emitted(2, 8) Source(3, 10) + SourceIndex(0)
4 >Emitted(2, 11) Source(3, 20) + SourceIndex(0)
5 >Emitted(2, 13) Source(3, 22) + SourceIndex(0)
6 >Emitted(2, 14) Source(3, 23) + SourceIndex(0)
---
>>>var _loop_1 = function (i) {
1->^^^^^^^^^^^^^^^^^^^^^^^^
2 >                        ^
1->
  >for (let 
2 >                        i
1->Emitted(3, 25) Source(4, 10) + SourceIndex(0)
2 >Emitted(3, 26) Source(4, 11) + SourceIndex(0)
---
>>>    /* comment1 */
1 >^^^^
2 >    ^^^^^^^^^^^^^^
3 >                  ^^^^^^^^^^->
1 > = 0; i < 3; i++) {
  >    
2 >    /* comment1 */
1 >Emitted(4, 5) Source(5, 5) + SourceIndex(0)
2 >Emitted(4, 19) Source(5, 19) + SourceIndex(0)
---
>>>    arr.push((function () {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^^^^
5 >            ^^^^^^^^^^^^^^^^^^^^->
1->
  >    
2 >    arr
3 >       .
4 >        push
1->Emitted(5, 5) Source(6, 5) + SourceIndex(0)
2 >Emitted(5, 8) Source(6, 8) + SourceIndex(0)
3 >Emitted(5, 9) Source(6, 9) + SourceIndex(0)
4 >Emitted(5, 13) Source(6, 13) + SourceIndex(0)
---
>>>        var _a = (function () {
>>>                function C() {
1->^^^^^^^^^^^^^^^^
2 >                ^^->
1->(/* comment2 */ 
1->Emitted(7, 17) Source(6, 29) + SourceIndex(0)
---
>>>                }
1->^^^^^^^^^^^^^^^^
2 >                ^
3 >                 ^^^^^^^^^->
1->class C {
  >        /* static-comment1 */ static x = i;
  >        /* static-comment2 */ static y = () => C.x * 2;
  >    
2 >                }
1->Emitted(8, 17) Source(9, 5) + SourceIndex(0)
2 >Emitted(8, 18) Source(9, 6) + SourceIndex(0)
---
>>>                return C;
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^^^^
1->
2 >                }
1->Emitted(9, 17) Source(9, 5) + SourceIndex(0)
2 >Emitted(9, 25) Source(9, 6) + SourceIndex(0)
---
>>>            }());
1 >^^^^^^^^^^^^
2 >            ^
3 >             
4 >             ^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
2 >            }
3 >             
1 >Emitted(10, 13) Source(9, 5) + SourceIndex(0)
2 >Emitted(10, 14) Source(9, 6) + SourceIndex(0)
3 >Emitted(10, 14) Source(6, 29) + SourceIndex(0)
---
>>>        /* static-comment1 */ _a.x = i;
1->^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^
3 >                             ^
4 >                              ^^^^
5 >                                  ^^^
6 >                                     ^
7 >                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->class C {
  >        
2 >        /* static-comment1 */
3 >                              static 
4 >                              x
5 >                                   = 
6 >                                     i;
1->Emitted(11, 9) Source(7, 9) + SourceIndex(0)
2 >Emitted(11, 30) Source(7, 30) + SourceIndex(0)
3 >Emitted(11, 31) Source(7, 38) + SourceIndex(0)
4 >Emitted(11, 35) Source(7, 39) + SourceIndex(0)
5 >Emitted(11, 38) Source(7, 42) + SourceIndex(0)
6 >Emitted(11, 39) Source(7, 44) + SourceIndex(0)
---
>>>        /* static-comment2 */ _a.y = function () { return C.x * 2; };
1->^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^
3 >                             ^
4 >                              ^^^^
5 >                                  ^^^
6 >                                     ^^^^^^^^^^^^^^
7 >                                                   ^^^^^^^
8 >                                                          ^
9 >                                                           ^
10>                                                            ^
11>                                                             ^^^
12>                                                                ^
13>                                                                 ^^
14>                                                                   ^
1->
  >        
2 >        /* static-comment2 */
3 >                              static 
4 >                              y
5 >                                   = 
6 >                                     () => 
7 >                                                   
8 >                                                          C
9 >                                                           .
10>                                                            x
11>                                                              * 
12>                                                                2
13>                                                                 
14>                                                                   C.x * 2;
1->Emitted(12, 9) Source(8, 9) + SourceIndex(0)
2 >Emitted(12, 30) Source(8, 30) + SourceIndex(0)
3 >Emitted(12, 31) Source(8, 38) + SourceIndex(0)
4 >Emitted(12, 35) Source(8, 39) + SourceIndex(0)
5 >Emitted(12, 38) Source(8, 42) + SourceIndex(0)
6 >Emitted(12, 52) Source(8, 48) + SourceIndex(0)
7 >Emitted(12, 59) Source(8, 48) + SourceIndex(0)
8 >Emitted(12, 60) Source(8, 49) + SourceIndex(0)
9 >Emitted(12, 61) Source(8, 50) + SourceIndex(0)
10>Emitted(12, 62) Source(8, 51) + SourceIndex(0)
11>Emitted(12, 65) Source(8, 54) + SourceIndex(0)
12>Emitted(12, 66) Source(8, 55) + SourceIndex(0)
13>Emitted(12, 68) Source(8, 48) + SourceIndex(0)
14>Emitted(12, 69) Source(8, 56) + SourceIndex(0)
---
>>>        return _a;
>>>    })());
1 >^^^^^^^^^
2 >         ^
3 >          ^^^^^^^^^^^^^^^^^^->
1 >
  >    })
2 >         ;
1 >Emitted(14, 10) Source(9, 7) + SourceIndex(0)
2 >Emitted(14, 11) Source(9, 8) + SourceIndex(0)
---
>>>    arr.push((function () {
1->^^^^
2 >    ^^^
3 >       ^
4 >        ^^^^
5 >            ^^^^^^^^^^^^^^^^^^^^->
1->
  >    
2 >    arr
3 >       .
4 >        push
1->Emitted(15, 5) Source(10, 5) + SourceIndex(0)
2 >Emitted(15, 8) Source(10, 8) + SourceIndex(0)
3 >Emitted(15, 9) Source(10, 9) + SourceIndex(0)
4 >Emitted(15, 13) Source(10, 13) + SourceIndex(0)
---
>>>        var _a = (function () {
>>>                /* comment3 */
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^^^^^^^^^^
3 >                              ^->
1->(
  >        
2 >                /* comment3 */
1->Emitted(17, 17) Source(11, 9) + SourceIndex(0)
2 >Emitted(17, 31) Source(11, 23) + SourceIndex(0)
---
>>>                function C() {
1->^^^^^^^^^^^^^^^^
2 >                ^^->
1->
  >        
1->Emitted(18, 17) Source(12, 9) + SourceIndex(0)
---
>>>                }
1->^^^^^^^^^^^^^^^^
2 >                ^
3 >                 ^^^^^^^^^->
1->class C {
  >            /* static-comment3 */ 
  >            static x = i;
  >            /* static-comment4 */ 
  >            static y = () => C.x * 2;
  >        
2 >                }
1->Emitted(19, 17) Source(17, 9) + SourceIndex(0)
2 >Emitted(19, 18) Source(17, 10) + SourceIndex(0)
---
>>>                return C;
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^^^^
1->
2 >                }
1->Emitted(20, 17) Source(17, 9) + SourceIndex(0)
2 >Emitted(20, 25) Source(17, 10) + SourceIndex(0)
---
>>>            }());
1 >^^^^^^^^^^^^
2 >            ^
3 >             
4 >             ^^^^^^^^^^^^^^^^^->
1 >
2 >            }
3 >             
1 >Emitted(21, 13) Source(17, 9) + SourceIndex(0)
2 >Emitted(21, 14) Source(17, 10) + SourceIndex(0)
3 >Emitted(21, 14) Source(12, 9) + SourceIndex(0)
---
>>>        /* static-comment3 */
1->^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^
1->class C {
  >            
2 >        /* static-comment3 */
1->Emitted(22, 9) Source(13, 13) + SourceIndex(0)
2 >Emitted(22, 30) Source(13, 34) + SourceIndex(0)
---
>>>        _a.x = i;
1 >^^^^^^^^
2 >        ^^^^
3 >            ^^^
4 >               ^
5 >                ^^^^^^^^^^^^^^->
1 > 
  >            static 
2 >        x
3 >             = 
4 >               i;
1 >Emitted(23, 9) Source(14, 20) + SourceIndex(0)
2 >Emitted(23, 13) Source(14, 21) + SourceIndex(0)
3 >Emitted(23, 16) Source(14, 24) + SourceIndex(0)
4 >Emitted(23, 17) Source(14, 26) + SourceIndex(0)
---
>>>        /* static-comment4 */
1->^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^^^^
3 >                             ^^^^^^^^^^^^^^^^^^^->
1->
  >            
2 >        /* static-comment4 */
1->Emitted(24, 9) Source(15, 13) + SourceIndex(0)
2 >Emitted(24, 30) Source(15, 34) + SourceIndex(0)
---
>>>        _a.y = function () { return C.x * 2; };
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^
4 >               ^^^^^^^^^^^^^^
5 >                             ^^^^^^^
6 >                                    ^
7 >                                     ^
8 >                                      ^
9 >                                       ^^^
10>                                          ^
11>                                           ^^
12>                                             ^
1-> 
  >            static 
2 >        y
3 >             = 
4 >               () => 
5 >                             
6 >                                    C
7 >                                     .
8 >                                      x
9 >                                        * 
10>                                          2
11>                                           
12>                                             C.x * 2;
1->Emitted(25, 9) Source(16, 20) + SourceIndex(0)
2 >Emitted(25, 13) Source(16, 21) + SourceIndex(0)
3 >Emitted(25, 16) Source(16, 24) + SourceIndex(0)
4 >Emitted(25, 30) Source(16, 30) + SourceIndex(0)
5 >Emitted(25, 37) Source(16, 30) + SourceIndex(0)
6 >Emitted(25, 38) Source(16, 31) + SourceIndex(0)
7 >Emitted(25, 39) Source(16, 32) + SourceIndex(0)
8 >Emitted(25, 40) Source(16, 33) + SourceIndex(0)
9 >Emitted(25, 43) Source(16, 36) + SourceIndex(0)
10>Emitted(25, 44) Source(16, 37) + SourceIndex(0)
11>Emitted(25, 46) Source(16, 30) + SourceIndex(0)
12>Emitted(25, 47) Source(16, 38) + SourceIndex(0)
---
>>>        return _a;
>>>    })());
1 >^^^^^^^^^
2 >         ^
1 >
  >        }
  >    )
2 >         ;
1 >Emitted(27, 10) Source(18, 6) + SourceIndex(0)
2 >Emitted(27, 11) Source(18, 7) + SourceIndex(0)
---
>>>};
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(28, 1) Source(19, 1) + SourceIndex(0)
2 >Emitted(28, 2) Source(19, 2) + SourceIndex(0)
---
>>>for (var i = 0; i < 3; i++) {
1->
2 >^^^
3 >   ^
4 >    ^
5 >     ^^^^
6 >         ^
7 >          ^^^
8 >             ^
9 >              ^^
10>                ^
11>                 ^^^
12>                    ^
13>                     ^^
14>                       ^
15>                        ^^
1->
2 >for
3 >    
4 >    (
5 >     let 
6 >         i
7 >           = 
8 >             0
9 >              ; 
10>                i
11>                  < 
12>                    3
13>                     ; 
14>                       i
15>                        ++
1->Emitted(29, 1) Source(4, 1) + SourceIndex(0)
2 >Emitted(29, 4) Source(4, 4) + SourceIndex(0)
3 >Emitted(29, 5) Source(4, 5) + SourceIndex(0)
4 >Emitted(29, 6) Source(4, 6) + SourceIndex(0)
5 >Emitted(29, 10) Source(4, 10) + SourceIndex(0)
6 >Emitted(29, 11) Source(4, 11) + SourceIndex(0)
7 >Emitted(29, 14) Source(4, 14) + SourceIndex(0)
8 >Emitted(29, 15) Source(4, 15) + SourceIndex(0)
9 >Emitted(29, 17) Source(4, 17) + SourceIndex(0)
10>Emitted(29, 18) Source(4, 18) + SourceIndex(0)
11>Emitted(29, 21) Source(4, 21) + SourceIndex(0)
12>Emitted(29, 22) Source(4, 22) + SourceIndex(0)
13>Emitted(29, 24) Source(4, 24) + SourceIndex(0)
14>Emitted(29, 25) Source(4, 25) + SourceIndex(0)
15>Emitted(29, 27) Source(4, 27) + SourceIndex(0)
---
>>>    _loop_1(i);
1 >^^^^^^^^^^^^
2 >            ^
1 >
2 >            i
1 >Emitted(30, 13) Source(4, 10) + SourceIndex(0)
2 >Emitted(30, 14) Source(4, 11) + SourceIndex(0)
---
>>>}
1 >^
2 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 > = 0; i < 3; i++) {
  >    /* comment1 */
  >    arr.push(/* comment2 */ class C {
  >        /* static-comment1 */ static x = i;
  >        /* static-comment2 */ static y = () => C.x * 2;
  >    });
  >    arr.push(
  >        /* comment3 */
  >        class C {
  >            /* static-comment3 */ 
  >            static x = i;
  >            /* static-comment4 */ 
  >            static y = () => C.x * 2;
  >        }
  >    );
  >}
1 >Emitted(31, 2) Source(19, 2) + SourceIndex(0)
---
>>>arr.forEach(function (C) { return console.log(C.y()); });
1->
2 >^^^
3 >   ^
4 >    ^^^^^^^
5 >           ^
6 >            ^^^^^^^^^^
7 >                      ^
8 >                       ^^^^
9 >                           ^^^^^^^
10>                                  ^^^^^^^
11>                                         ^
12>                                          ^^^
13>                                             ^
14>                                              ^
15>                                               ^
16>                                                ^
17>                                                 ^^
18>                                                   ^
19>                                                    ^^
20>                                                      ^
21>                                                       ^
22>                                                        ^
23>                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >arr
3 >   .
4 >    forEach
5 >           (
6 >            
7 >                      C
8 >                        => 
9 >                           
10>                                  console
11>                                         .
12>                                          log
13>                                             (
14>                                              C
15>                                               .
16>                                                y
17>                                                 ()
18>                                                   )
19>                                                    
20>                                                      console.log(C.y())
21>                                                       )
22>                                                        ;
1->Emitted(32, 1) Source(20, 1) + SourceIndex(0)
2 >Emitted(32, 4) Source(20, 4) + SourceIndex(0)
3 >Emitted(32, 5) Source(20, 5) + SourceIndex(0)
4 >Emitted(32, 12) Source(20, 12) + SourceIndex(0)
5 >Emitted(32, 13) Source(20, 13) + SourceIndex(0)
6 >Emitted(32, 23) Source(20, 13) + SourceIndex(0)
7 >Emitted(32, 24) Source(20, 14) + SourceIndex(0)
8 >Emitted(32, 28) Source(20, 18) + SourceIndex(0)
9 >Emitted(32, 35) Source(20, 18) + SourceIndex(0)
10>Emitted(32, 42) Source(20, 25) + SourceIndex(0)
11>Emitted(32, 43) Source(20, 26) + SourceIndex(0)
12>Emitted(32, 46) Source(20, 29) + SourceIndex(0)
13>Emitted(32, 47) Source(20, 30) + SourceIndex(0)
14>Emitted(32, 48) Source(20, 31) + SourceIndex(0)
15>Emitted(32, 49) Source(20, 32) + SourceIndex(0)
16>Emitted(32, 50) Source(20, 33) + SourceIndex(0)
17>Emitted(32, 52) Source(20, 35) + SourceIndex(0)
18>Emitted(32, 53) Source(20, 36) + SourceIndex(0)
19>Emitted(32, 55) Source(20, 18) + SourceIndex(0)
20>Emitted(32, 56) Source(20, 36) + SourceIndex(0)
21>Emitted(32, 57) Source(20, 37) + SourceIndex(0)
22>Emitted(32, 58) Source(20, 38) + SourceIndex(0)
---
>>>//# sourceMappingURL=commentsOnClassExpressionWithStaticPropertiesCapturingBlockScoped.js.map