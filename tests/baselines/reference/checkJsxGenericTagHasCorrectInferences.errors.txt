tests/cases/conformance/jsx/file.tsx(13,54): error TS2322: Type '(a: { x: string; }) => string' is not assignable to type '((a: { x: string; }) => string) & ((cur: { x: string; }) => { x: string; })'.
  Type '(a: { x: string; }) => string' is not assignable to type '(cur: { x: string; }) => { x: string; }'.
    Type 'string' is not assignable to type '{ x: string; }'.


==== tests/cases/conformance/jsx/file.tsx (1 errors) ====
    import * as React from "react";
    interface BaseProps<T> {
      initialValues: T;
      nextValues: (cur: T) => T;
    }
    declare class GenericComponent<Props = {}, Values = object> extends React.Component<Props & BaseProps<Values>, {}> {
      iv: Values;
    }
    
    let a = <GenericComponent initialValues={{ x: "y" }} nextValues={a => a} />; // No error
    let b = <GenericComponent initialValues={12} nextValues={a => a} />; // No error - Values should be reinstantiated with `number` (since `object` is a default, not a constraint)
    let c = <GenericComponent initialValues={{ x: "y" }} nextValues={a => ({ x: a.x })} />; // No Error
    let d = <GenericComponent initialValues={{ x: "y" }} nextValues={a => a.x} />; // Error - `string` is not assignable to `{x: string}`
                                                         ~~~~~~~~~~
!!! error TS2322: Type '(a: { {|x|0|}: string; }) => string' is not assignable to type '((a: { {|x|1|}: string; }) => string) & ((cur: { {|x|2|}: string; }) => { {|x|3|}: string; })'.
!!! error TS2322:   Type '(a: { {|x|4|}: string; }) => string' is not assignable to type '(cur: { {|x|5|}: string; }) => { {|x|6|}: string; }'.
!!! error TS2322:     Type 'string' is not assignable to type '{ {|x|7|}: string; }'.
!!! related TS6500 tests/cases/conformance/jsx/file.tsx:13:54: The expected type comes from property 'nextValues' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<GenericComponent<{ initialValues: { x: string; }; nextValues: (a: { x: string; }) => string; }, { x: string; }>> & { initialValues: { x: string; }; nextValues: (a: { x: string; }) => string; } & BaseProps<{ x: string; }> & { children?: ReactNode; }'
!!! annotated symbol 0 tests/cases/conformance/jsx/file.tsx:13:44
!!! annotated symbol 1 tests/cases/conformance/jsx/file.tsx:13:44
!!! annotated symbol 2 tests/cases/conformance/jsx/file.tsx:13:44
!!! annotated symbol 3 tests/cases/conformance/jsx/file.tsx:13:44
!!! annotated symbol 4 tests/cases/conformance/jsx/file.tsx:13:44
!!! annotated symbol 5 tests/cases/conformance/jsx/file.tsx:13:44
!!! annotated symbol 6 tests/cases/conformance/jsx/file.tsx:13:44
!!! annotated symbol 7 tests/cases/conformance/jsx/file.tsx:13:44