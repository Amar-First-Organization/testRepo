tests/cases/compiler/circularResolvedSignature.ts(11,9): error TS2322: Type 'string' is not assignable to type 'number'.
tests/cases/compiler/circularResolvedSignature.ts(12,32): error TS2345: Argument of type '(prev: any) => any' is not assignable to parameter of type 'Readonly<{ value: number; foo: (arg: any) => void; bar: (arg: any) => void; }>'.
tests/cases/compiler/circularResolvedSignature.ts(13,32): error TS2345: Argument of type '(prev: any) => any' is not assignable to parameter of type 'Readonly<{ value: number; foo: (arg: any) => void; bar: (arg: any) => void; }>'.


==== tests/cases/compiler/circularResolvedSignature.ts (3 errors) ====
    declare function useState<S>(initialState: (() => S)): [S, (s: S) => void];
    
    type Data = Readonly<{
        value: number;
        foo: (arg: any) => void;
        bar: (arg: any) => void;
    }>;
    
    export function Component() {
        const [state, setState] = useState<Data>(() => ({
            value: "string", // this should be a number
            ~~~~~
!!! error TS2322: Type 'string' is not assignable to type 'number'.
!!! related TS6500 tests/cases/compiler/circularResolvedSignature.ts:4:5: The expected type comes from property 'value' which is declared here on type 'Readonly<{ value: number; foo: (arg: any) => void; bar: (arg: any) => void; }>'
            foo: (arg) => setState((prev) => ({ ...prev, arg })),
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(prev: any) => any' is not assignable to parameter of type 'Readonly<{ value: number; foo: (arg: any) => void; bar: (arg: any) => void; }>'.
            bar: (arg) => setState((prev) => ({ ...prev, arg })),
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(prev: any) => any' is not assignable to parameter of type 'Readonly<{ value: number; foo: (arg: any) => void; bar: (arg: any) => void; }>'.
        }));
    }
    