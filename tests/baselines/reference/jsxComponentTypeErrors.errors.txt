tests/cases/compiler/jsxComponentTypeErrors.tsx(20,16): error TS2774: This expression cannot be used as a JSX component.
  Its return type '{ type: string; }' is not a valid JSX element.
    Types of property 'type' are incompatible.
      Type 'string' is not assignable to type '"element"'.
tests/cases/compiler/jsxComponentTypeErrors.tsx(21,16): error TS2774: This expression cannot be used as a JSX component.
  Its instance type 'ClassComponent' is not a valid JSX element.
    Types of property 'type' are incompatible.
      Type 'string' is not assignable to type '"element-class"'.
tests/cases/compiler/jsxComponentTypeErrors.tsx(22,16): error TS2774: This expression cannot be used as a JSX component.
  Its element type 'ClassComponent' is not a valid JSX element.
    Type 'ClassComponent' is not assignable to type 'ElementClass'.
tests/cases/compiler/jsxComponentTypeErrors.tsx(31,16): error TS2774: This expression cannot be used as a JSX component.
  Its return type '{}' is not a valid JSX element.
    Property 'type' is missing in type '{}' but required in type 'Element'.
tests/cases/compiler/jsxComponentTypeErrors.tsx(32,16): error TS2774: This expression cannot be used as a JSX component.
  Its instance type 'MemberClassComponent' is not a valid JSX element.
    Property 'type' is missing in type 'MemberClassComponent' but required in type 'ElementClass'.


==== tests/cases/compiler/jsxComponentTypeErrors.tsx (5 errors) ====
    namespace JSX {
      export interface Element {
        type: 'element';
      }
      export interface ElementClass {
        type: 'element-class';
      }
    }
    
    const FunctionComponent = () => ({
      type: 'string',
    });
    
    class ClassComponent {
      type = 'string';
    }
    
    const MixedComponent = Math.random() ? FunctionComponent : ClassComponent;
    
    const elem1 = <FunctionComponent />;
                   ~~~~~~~~~~~~~~~~~
!!! error TS2774: This expression cannot be used as a JSX component.
!!! error TS2774:   Its return type '{ type: string; }' is not a valid JSX element.
!!! error TS2774:     Types of property 'type' are incompatible.
!!! error TS2774:       Type 'string' is not assignable to type '"element"'.
    const elem2 = <ClassComponent />;
                   ~~~~~~~~~~~~~~
!!! error TS2774: This expression cannot be used as a JSX component.
!!! error TS2774:   Its instance type 'ClassComponent' is not a valid JSX element.
!!! error TS2774:     Types of property 'type' are incompatible.
!!! error TS2774:       Type 'string' is not assignable to type '"element-class"'.
    const elem3 = <MixedComponent />;
                   ~~~~~~~~~~~~~~
!!! error TS2774: This expression cannot be used as a JSX component.
!!! error TS2774:   Its element type 'ClassComponent' is not a valid JSX element.
!!! error TS2774:     Type 'ClassComponent' is not assignable to type 'ElementClass'.
    
    const obj = {
      MemberFunctionComponent() {
        return {};
      },
      MemberClassComponent: class {},
    };
    
    const elem4 = <obj.MemberFunctionComponent />;
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2774: This expression cannot be used as a JSX component.
!!! error TS2774:   Its return type '{}' is not a valid JSX element.
!!! error TS2774:     Property 'type' is missing in type '{}' but required in type 'Element'.
!!! related TS2728 tests/cases/compiler/jsxComponentTypeErrors.tsx:3:5: 'type' is declared here.
    const elem5 = <obj.MemberClassComponent />;
                   ~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2774: This expression cannot be used as a JSX component.
!!! error TS2774:   Its instance type 'MemberClassComponent' is not a valid JSX element.
!!! error TS2774:     Property 'type' is missing in type 'MemberClassComponent' but required in type 'ElementClass'.
!!! related TS2728 tests/cases/compiler/jsxComponentTypeErrors.tsx:6:5: 'type' is declared here.
    