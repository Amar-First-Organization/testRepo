=== tests/cases/conformance/types/primitives/number/numberPropertyAccess.ts ===
var x = 1;
>x : number
>1 : 1

var a = x.toExponential();
>a : string
>x.toExponential() : string
>x.toExponential : (this: Number, fractionDigits?: number) => string
>x : number
>toExponential : (this: Number, fractionDigits?: number) => string

var b = x.hasOwnProperty('toFixed');
>b : boolean
>x.hasOwnProperty('toFixed') : boolean
>x.hasOwnProperty : (this: Object, v: string) => boolean
>x : number
>hasOwnProperty : (this: Object, v: string) => boolean
>'toFixed' : "toFixed"

var c = x['toExponential']();
>c : string
>x['toExponential']() : string
>x['toExponential'] : (this: Number, fractionDigits?: number) => string
>x : number
>'toExponential' : "toExponential"

var d = x['hasOwnProperty']('toFixed');
>d : boolean
>x['hasOwnProperty']('toFixed') : boolean
>x['hasOwnProperty'] : (this: Object, v: string) => boolean
>x : number
>'hasOwnProperty' : "hasOwnProperty"
>'toFixed' : "toFixed"

