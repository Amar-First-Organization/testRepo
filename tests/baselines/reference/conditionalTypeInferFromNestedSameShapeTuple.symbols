=== tests/cases/compiler/conditionalTypeInferFromNestedSameShapeTuple.ts ===
// repro #48524

type Magic<X> = X extends [[infer Y, ...infer _], ...infer __] ? Y : never;
>Magic : Symbol(Magic, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 0, 0))
>X : Symbol(X, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 2, 11))
>X : Symbol(X, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 2, 11))
>Y : Symbol(Y, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 2, 33))
>_ : Symbol(_, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 2, 45))
>__ : Symbol(__, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 2, 58))
>Y : Symbol(Y, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 2, 33))

type R = Magic<[[number]]>
>R : Symbol(R, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 2, 75))
>Magic : Symbol(Magic, Decl(conditionalTypeInferFromNestedSameShapeTuple.ts, 0, 0))

