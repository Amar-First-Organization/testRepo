=== tests/cases/conformance/structs/members/structTypes/instancePropertyInStructType.ts ===
// doc 2.4
// struct type contains all instance member variables and function members.
// ok

module NonGeneric {
>NonGeneric : Symbol(NonGeneric, Decl(instancePropertyInStructType.ts, 0, 0))

    struct C {
>C : Symbol(C, Decl(instancePropertyInStructType.ts, 4, 19))

        x: string;
>x : Symbol(x, Decl(instancePropertyInStructType.ts, 5, 14))

        fn() { return this; }
>fn : Symbol(fn, Decl(instancePropertyInStructType.ts, 6, 18))
>this : Symbol(C, Decl(instancePropertyInStructType.ts, 4, 19))

        constructor(public a: number, private b: number) { }
>a : Symbol(a, Decl(instancePropertyInStructType.ts, 8, 20))
>b : Symbol(b, Decl(instancePropertyInStructType.ts, 8, 37))
    }

    var c = new C(1, 2);
>c : Symbol(c, Decl(instancePropertyInStructType.ts, 11, 7))
>C : Symbol(C, Decl(instancePropertyInStructType.ts, 4, 19))

    var r = c.fn();
>r : Symbol(r, Decl(instancePropertyInStructType.ts, 12, 7))
>c.fn : Symbol(C.fn, Decl(instancePropertyInStructType.ts, 6, 18))
>c : Symbol(c, Decl(instancePropertyInStructType.ts, 11, 7))
>fn : Symbol(C.fn, Decl(instancePropertyInStructType.ts, 6, 18))

    var r2 = r.x;
>r2 : Symbol(r2, Decl(instancePropertyInStructType.ts, 13, 7))
>r.x : Symbol(C.x, Decl(instancePropertyInStructType.ts, 5, 14))
>r : Symbol(r, Decl(instancePropertyInStructType.ts, 12, 7))
>x : Symbol(C.x, Decl(instancePropertyInStructType.ts, 5, 14))

	c.a;
>c.a : Symbol(C.a, Decl(instancePropertyInStructType.ts, 8, 20))
>c : Symbol(c, Decl(instancePropertyInStructType.ts, 11, 7))
>a : Symbol(C.a, Decl(instancePropertyInStructType.ts, 8, 20))
}

/* module Generic {
    struct C<T,U> {
        x: T;
        fn() { return this; }
        constructor(public a: T, private b: U) { }
    }

    var c = new C(1, '');
    var r = c.fn();
    var r2 = r.x;
} */
