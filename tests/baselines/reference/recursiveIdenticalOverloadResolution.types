=== tests/cases/compiler/recursiveIdenticalOverloadResolution.ts ===
module M {
>M : typeof M

   interface I { (i: I): I; }
>i : I

   function f(p: I) { return f };
>f : type default_1 = (p: I) => default_1
>p : I
>f : type default_1 = (p: I) => default_1

   var i: I;
>i : I

   f(i);
>f(i) : type default_1 = (p: I) => default_1
>f : type default_1 = (p: I) => default_1
>i : I

   f(f(i));
>f(f(i)) : type default_1 = (p: I) => default_1
>f : type default_1 = (p: I) => default_1
>f(i) : type default_1 = (p: I) => default_1
>f : type default_1 = (p: I) => default_1
>i : I

   f((f(f(i))));
>f((f(f(i)))) : type default_1 = (p: I) => default_1
>f : type default_1 = (p: I) => default_1
>(f(f(i))) : type default_1 = (p: I) => default_1
>f(f(i)) : type default_1 = (p: I) => default_1
>f : type default_1 = (p: I) => default_1
>f(i) : type default_1 = (p: I) => default_1
>f : type default_1 = (p: I) => default_1
>i : I

}

