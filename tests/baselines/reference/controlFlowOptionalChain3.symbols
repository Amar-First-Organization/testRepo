//// [tests/cases/conformance/controlFlow/controlFlowOptionalChain3.ts] ////

=== controlFlowOptionalChain3.ts ===
// https://github.com/microsoft/TypeScript/issues/56482

interface Foo {
>Foo : Symbol(Foo, Decl(controlFlowOptionalChain3.ts, 0, 0))

  bar: boolean;
>bar : Symbol(Foo.bar, Decl(controlFlowOptionalChain3.ts, 2, 15))
}

function test1(foo: Foo | undefined) {
>test1 : Symbol(test1, Decl(controlFlowOptionalChain3.ts, 4, 1))
>foo : Symbol(foo, Decl(controlFlowOptionalChain3.ts, 6, 15))
>Foo : Symbol(Foo, Decl(controlFlowOptionalChain3.ts, 0, 0))

  if (foo?.bar === false) {
>foo?.bar : Symbol(Foo.bar, Decl(controlFlowOptionalChain3.ts, 2, 15))
>foo : Symbol(foo, Decl(controlFlowOptionalChain3.ts, 6, 15))
>bar : Symbol(Foo.bar, Decl(controlFlowOptionalChain3.ts, 2, 15))

    foo;
>foo : Symbol(foo, Decl(controlFlowOptionalChain3.ts, 6, 15))
  }
  foo;
>foo : Symbol(foo, Decl(controlFlowOptionalChain3.ts, 6, 15))
}

function test2(foo: Foo | undefined) {
>test2 : Symbol(test2, Decl(controlFlowOptionalChain3.ts, 11, 1))
>foo : Symbol(foo, Decl(controlFlowOptionalChain3.ts, 13, 15))
>Foo : Symbol(Foo, Decl(controlFlowOptionalChain3.ts, 0, 0))

  if (foo?.bar === false) {
>foo?.bar : Symbol(Foo.bar, Decl(controlFlowOptionalChain3.ts, 2, 15))
>foo : Symbol(foo, Decl(controlFlowOptionalChain3.ts, 13, 15))
>bar : Symbol(Foo.bar, Decl(controlFlowOptionalChain3.ts, 2, 15))

    foo;
>foo : Symbol(foo, Decl(controlFlowOptionalChain3.ts, 13, 15))

  } else {
    foo;
>foo : Symbol(foo, Decl(controlFlowOptionalChain3.ts, 13, 15))
  }
}

