widenedTypes.ts(1,1): error TS2358: The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
widenedTypes.ts(2,1): error TS2358: The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
widenedTypes.ts(2,17): error TS2360: The right-hand side of an 'instanceof' expression may not have an 'undefined' prototype.
widenedTypes.ts(5,1): error TS18050: The value 'null' cannot be used here.
widenedTypes.ts(6,7): error TS18050: The value 'null' cannot be used here.
widenedTypes.ts(10,14): error TS2695: Left side of comma operator is unused and has no side effects.
widenedTypes.ts(11,1): error TS2322: Type 'string' is not assignable to type 'number'.
widenedTypes.ts(18,1): error TS2322: Type 'string' is not assignable to type 'number'.
widenedTypes.ts(23,22): error TS2322: Type 'number' is not assignable to type 'string'.
widenedTypes.ts(24,39): error TS2322: Type 'number' is not assignable to type 'string'.


==== widenedTypes.ts (10 errors) ====
    null instanceof (function () { });
    ~~~~
!!! error TS2358: The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
    null instanceof (() => { });
    ~~~~
!!! error TS2358: The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
                    ~~~~~~~~~~~
!!! error TS2360: The right-hand side of an 'instanceof' expression may not have an 'undefined' prototype.
    ({}) instanceof null; // Ok because null is a subtype of function
    
    null in {};
    ~~~~
!!! error TS18050: The value 'null' cannot be used here.
    "" in null;
          ~~~~
!!! error TS18050: The value 'null' cannot be used here.
    
    for (var a in null) { }
    
    var t = [3, (3, null)];
                 ~
!!! error TS2695: Left side of comma operator is unused and has no side effects.
    t[3] = "";
    ~~~~
!!! error TS2322: Type 'string' is not assignable to type 'number'.
    
    var x: typeof undefined = 3;
    x = 3;
    
    var y;
    var u = [3, (y = null)];
    u[3] = "";
    ~~~~
!!! error TS2322: Type 'string' is not assignable to type 'number'.
    
    var ob: { x: typeof undefined } = { x: "" };
    
    // Highlights the difference between array literals and object literals
    var arr: string[] = [3, null]; // not assignable because null is not widened. BCT is {}
                         ~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
    var obj: { [x: string]: string; } = { x: 3, y: null }; // assignable because null is widened, and therefore BCT is any
                                          ~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
!!! related TS6501 widenedTypes.ts:24:12: The expected type comes from this index signature.