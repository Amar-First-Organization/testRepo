tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassTransitivity2.ts(18,1): error TS2322: Type 'E' is not assignable to type 'C'.
  Types of property 'foo' are incompatible.
    Type '(x: number, y?: string) => void' is not assignable to type '(x: number, y: number) => void'.
      Types of parameters 'y' and 'y' are incompatible.
        Type 'number' is not assignable to type 'string'.


==== tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassTransitivity2.ts (1 errors) ====
    // subclassing is not transitive when you can remove required parameters and add optional parameters
    
    class C {
        foo(x: number, y: number) { }
    }
    
    class D extends C {
        foo(x: number) { } // ok to drop parameters
    }
    
    class E extends D {
        foo(x: number, y?: string) { } // ok to add optional parameters
    }
    
    var c: C;
    var d: D;
    var e: E;
    c = e;
    ~
!!! error TS2322: Type '{|E|0|}' is not assignable to type '{|C|1|}'.
!!! error TS2322:   Types of property 'foo' are incompatible.
!!! error TS2322:     Type '(x: number, y?: string) => void' is not assignable to type '(x: number, y: number) => void'.
!!! error TS2322:       Types of parameters 'y' and 'y' are incompatible.
!!! error TS2322:         Type 'number' is not assignable to type 'string'.
!!! annotated symbol 0 tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassTransitivity2.ts:11:7
!!! annotated symbol 1 tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassTransitivity2.ts:3:7
    var r = c.foo(1, 1);
    var r2 = e.foo(1, '');