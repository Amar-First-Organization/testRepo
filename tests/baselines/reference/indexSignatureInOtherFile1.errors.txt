error TS-1: Pre-emit (0) and post-emit (2) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!


!!! error TS-1: Pre-emit (0) and post-emit (2) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!
!!! related TS-1: The excess diagnostics are:
!!! related TS2411 tests/cases/compiler/other.ts:14:3: Property '[Symbol.iterator]' of type '() => IterableIterator<any>' is not assignable to 'symbol' index type 'string'.
!!! related TS2411 tests/cases/compiler/other.ts:23:3: Property '[Symbol.unscopables]' of type '() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }' is not assignable to 'symbol' index type 'string'.
==== tests/cases/compiler/other.ts (0 errors) ====
    interface Array1<T> {
      length: number;
      [n: number]: T;
    }
    
    interface ArrayConstructor1 {
      new(arrayLength?: number): Array1<any>;
    }
    
    declare var Array1: ArrayConstructor1;
    
    // iterable.d.ts
    interface Array1<T> {
      [Symbol.iterator](): IterableIterator<T>;
    }
    
    // symbol.wellknown.d.ts
    interface Array1<T> {
      /**
       * Returns an object whose properties have the value 'true'
       * when they will be absent when used in a 'with' statement.
       */
      [Symbol.unscopables](): {
          copyWithin: boolean;
          entries: boolean;
          fill: boolean;
          find: boolean;
          findIndex: boolean;
          keys: boolean;
          values: boolean;
      };
    }
    
==== tests/cases/compiler/index.ts (0 errors) ====
    class Test extends Array1 {
      [key: symbol]: string
    }