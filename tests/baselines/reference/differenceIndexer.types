=== tests/cases/conformance/es6/destructuring/differenceIndexer.ts ===
interface A { a: number }
>A : A
>a : number

interface String1 { [s: string]: number }
>String1 : String1
>s : string

interface String2 { [s: string]: string }
>String2 : String2
>s : string

interface Number1 { [n: number]: number }
>Number1 : Number1
>n : number

interface Number2 { [n: number]: number }
>Number2 : Number2
>n : number

interface StringNumber { [s: string]: number; [n: number]: number }
>StringNumber : StringNumber
>s : string
>n : number

// these should all be empty
let diffString: String1 - String2;
>diffString : {}
>String1 : String1
>String2 : String2

let diffNumber: Number1 - Number2;
>diffNumber : {}
>Number1 : Number1
>Number2 : Number2

let diffStringNumber: Number1 - String1;
>diffStringNumber : {}
>Number1 : Number1
>String1 : String1

let diffStringA: A - String1;
>diffStringA : {}
>A : A
>String1 : String1

let diffStringStringNumber: StringNumber - String1;
>diffStringStringNumber : {}
>StringNumber : StringNumber
>String1 : String1

let diffStringNumberString: String1 - StringNumber;
>diffStringNumberString : {}
>String1 : String1
>StringNumber : StringNumber

// these should still have their indexer
let diffAString: String1 - A;
>diffAString : { [s: string]: number; }
>String1 : String1
>A : A

let diffANumber: Number1 - A;
>diffANumber : { [n: number]: number; }
>Number1 : Number1
>A : A

