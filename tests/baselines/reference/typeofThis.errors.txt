tests/cases/conformance/types/specifyingTypes/typeQueries/typeofThis.ts(23,19): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
tests/cases/conformance/types/specifyingTypes/typeQueries/typeofThis.ts(45,23): error TS2331: 'this' cannot be referenced in a module or namespace body.
tests/cases/conformance/types/specifyingTypes/typeQueries/typeofThis.ts(45,23): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
tests/cases/conformance/types/specifyingTypes/typeQueries/typeofThis.ts(51,23): error TS2331: 'this' cannot be referenced in a module or namespace body.
tests/cases/conformance/types/specifyingTypes/typeQueries/typeofThis.ts(51,23): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
tests/cases/conformance/types/specifyingTypes/typeQueries/typeofThis.ts(56,19): error TS7041: The containing arrow function captures the global value of 'this'.


==== tests/cases/conformance/types/specifyingTypes/typeQueries/typeofThis.ts (6 errors) ====
    class Test {
        data = {};
        constructor() {
            var copy: typeof this.data = {};
        }
    }
    
    class Test1 {
        data = { foo: '' };
        ['this'] = '';
        constructor() {
            var copy: typeof this.data = { foo: '' };
    
            var self: typeof this = this;
            self.data;
    
            var str: typeof this.this = '';
        }
    }
    
    
    function Test2() {
        let x: typeof this.no = 1;
                      ~~~~
!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
    }
    
    function Test3(this: { no: number }) {
        let x: typeof this.no = 1;
    }
    
    function Test4(this: { no: number } | undefined) {
        let x: typeof this.no = 1;
    }
    
    class Test5 {
        no = 1;
    
        f = () => {
            // should not capture this.
            let x: typeof this.no = 1;
        }
    }
    
    namespace Test6 {
        export let f = () => {
            let x: typeof this.no = 1;
                          ~~~~
!!! error TS2331: 'this' cannot be referenced in a module or namespace body.
                          ~~~~
!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
        }
    }
    
    module Test7 {
        export let f = () => {
            let x: typeof this.no = 1;
                          ~~~~
!!! error TS2331: 'this' cannot be referenced in a module or namespace body.
                          ~~~~
!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
        }
    }
    
    const Test8 = () => {
        let x: typeof this.no = 1;
                      ~~~~
!!! error TS7041: The containing arrow function captures the global value of 'this'.
    }
    
    class Test9 {
        no = 0;
        this = 0;
    
        f() {
            if (this instanceof Test9D1) {
                const d1: typeof this = this;
                d1.f1();
            }
    
            if (this instanceof Test9D2) {
                const d2: typeof this = this;
                d2.f2();
            }
        }
    
        g() {
            if (this.no === 1) {
                const no: typeof this.no = this.no;
            }
    
            if (this.this === 1) {
                const no: typeof this.this = this.this;
            }
        }
    }
    
    class Test9D1 {
        f1() {}
    }
    
    class Test9D2 {
        f2() {}
    }