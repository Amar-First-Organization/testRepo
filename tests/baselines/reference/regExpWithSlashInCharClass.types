=== tests/cases/compiler/regExpWithSlashInCharClass.ts ===
var foo1 = "a/".replace(/.[/]/, "");
>foo1 : string
>"a/".replace(/.[/]/, "") : string
>"a/".replace : { (this: String, searchValue: string, replaceValue: string): string; (this: String, searchValue: string, replacer: (substring: string, ...args: any[]) => string): string; (this: String, searchValue: RegExp, replaceValue: string): string; (this: String, searchValue: RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>"a/" : "a/"
>replace : { (this: String, searchValue: string, replaceValue: string): string; (this: String, searchValue: string, replacer: (substring: string, ...args: any[]) => string): string; (this: String, searchValue: RegExp, replaceValue: string): string; (this: String, searchValue: RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>/.[/]/ : RegExp
>"" : ""

var foo2 = "a//".replace(/.[//]/g, "");
>foo2 : string
>"a//".replace(/.[//]/g, "") : string
>"a//".replace : { (this: String, searchValue: string, replaceValue: string): string; (this: String, searchValue: string, replacer: (substring: string, ...args: any[]) => string): string; (this: String, searchValue: RegExp, replaceValue: string): string; (this: String, searchValue: RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>"a//" : "a//"
>replace : { (this: String, searchValue: string, replaceValue: string): string; (this: String, searchValue: string, replacer: (substring: string, ...args: any[]) => string): string; (this: String, searchValue: RegExp, replaceValue: string): string; (this: String, searchValue: RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>/.[//]/g : RegExp
>"" : ""

var foo3 = "a/".replace(/.[/no sleep /till/]/, "bugfix");
>foo3 : string
>"a/".replace(/.[/no sleep /till/]/, "bugfix") : string
>"a/".replace : { (this: String, searchValue: string, replaceValue: string): string; (this: String, searchValue: string, replacer: (substring: string, ...args: any[]) => string): string; (this: String, searchValue: RegExp, replaceValue: string): string; (this: String, searchValue: RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>"a/" : "a/"
>replace : { (this: String, searchValue: string, replaceValue: string): string; (this: String, searchValue: string, replacer: (substring: string, ...args: any[]) => string): string; (this: String, searchValue: RegExp, replaceValue: string): string; (this: String, searchValue: RegExp, replacer: (substring: string, ...args: any[]) => string): string; }
>/.[/no sleep /till/]/ : RegExp
>"bugfix" : "bugfix"

