=== tests/cases/conformance/async/es6/asyncMethodDeclaration/asyncMethodDeclaration6.es6.ts ===
class D {
>D : Symbol(D, Decl(asyncMethodDeclaration6.es6.ts, 0, 0))

    superMethod() {}
>superMethod : Symbol(superMethod, Decl(asyncMethodDeclaration6.es6.ts, 0, 9))

    static staticSuperMethod() {}
>staticSuperMethod : Symbol(D.staticSuperMethod, Decl(asyncMethodDeclaration6.es6.ts, 1, 20))
}
let c = class C extends D {
>c : Symbol(c, Decl(asyncMethodDeclaration6.es6.ts, 4, 3))
>C : Symbol(C, Decl(asyncMethodDeclaration6.es6.ts, 4, 7))
>D : Symbol(D, Decl(asyncMethodDeclaration6.es6.ts, 0, 0))

    async method() {
>method : Symbol(C.method, Decl(asyncMethodDeclaration6.es6.ts, 4, 27))

        super.superMethod();
>super.superMethod : Symbol(D.superMethod, Decl(asyncMethodDeclaration6.es6.ts, 0, 9))
>super : Symbol(D, Decl(asyncMethodDeclaration6.es6.ts, 0, 0))
>superMethod : Symbol(D.superMethod, Decl(asyncMethodDeclaration6.es6.ts, 0, 9))

        await undefined;
>undefined : Symbol(undefined)
    }
    
    static async staticMethod() {
>staticMethod : Symbol(C.staticMethod, Decl(asyncMethodDeclaration6.es6.ts, 8, 5))

        super.staticSuperMethod();
>super.staticSuperMethod : Symbol(D.staticSuperMethod, Decl(asyncMethodDeclaration6.es6.ts, 1, 20))
>super : Symbol(D, Decl(asyncMethodDeclaration6.es6.ts, 0, 0))
>staticSuperMethod : Symbol(D.staticSuperMethod, Decl(asyncMethodDeclaration6.es6.ts, 1, 20))

        await undefined;
>undefined : Symbol(undefined)
    }
}
