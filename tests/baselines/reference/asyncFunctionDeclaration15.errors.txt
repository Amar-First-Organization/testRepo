tests/cases/conformance/async/downlevel/asyncFunctionDeclaration/asyncFunctionDeclaration15.ts(7,7): error TS2500: Duplicate identifier 'Promise'. Compiler uses declaration 'Promise' to support async functions.


==== tests/cases/conformance/async/downlevel/asyncFunctionDeclaration/asyncFunctionDeclaration15.ts (1 errors) ====
    declare class Promise<T> {
        constructor(init: (resolve: (value?: T | IPromise<T>) => void, reject: (reason?: any) => void) => void);
        then<TResult>(onfulfilled?: (value: T) => TResult | IPromise<TResult>, onrejected?: (reason: any) => TResult | IPromise<TResult>): Promise<TResult>;
    }
    
    export async function foo(): Promise<void> {
      var Promise;
          ~~~~~~~
!!! error TS2500: Duplicate identifier 'Promise'. Compiler uses declaration 'Promise' to support async functions.
    }