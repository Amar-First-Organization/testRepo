=== tests/cases/compiler/a.ts ===
export interface I { x: number; }
>I : Symbol(I, Decl(a.ts, 0, 0))
>x : Symbol(I.x, Decl(a.ts, 0, 20))

export type J = I;
>J : Symbol(J, Decl(a.ts, 0, 33))
>I : Symbol(I, Decl(a.ts, 0, 0))

=== tests/cases/compiler/b.ts ===
import { J } from './a';
>J : Symbol(J, Decl(b.ts, 0, 8))

export const f = (): J => ({ x: 0 });
>f : Symbol(f, Decl(b.ts, 1, 12))
>J : Symbol(J, Decl(b.ts, 0, 8))
>x : Symbol(x, Decl(b.ts, 1, 28))

