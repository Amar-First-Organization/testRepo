=== tests/cases/compiler/inKeywordAndUnknown.ts ===
// Repro from #50531

function f(x: {}, y: unknown) {
>f : (x: {}, y: unknown) => void
>x : {}
>y : unknown

    if (!("a" in x)) {
>!("a" in x) : boolean
>("a" in x) : boolean
>"a" in x : boolean
>"a" : "a"
>x : {}

        return;
    }
    x;  // {}
>x : Record<"a", unknown>

    if (!y) {
>!y : boolean
>y : unknown

        return;
    }
    y;  // {}
>y : {}

    if (!("a" in y)) {
>!("a" in y) : boolean
>("a" in y) : boolean
>"a" in y : boolean
>"a" : "a"
>y : {}

        return;
    }
    y;  // {}
>y : Record<"a", unknown>
}


// repro #51007
function isHTMLTable(table: unknown): boolean {
>isHTMLTable : (table: unknown) => boolean
>table : unknown

    return !!table && table instanceof Object && 'html' in table;
>!!table && table instanceof Object && 'html' in table : boolean
>!!table && table instanceof Object : boolean
>!!table : boolean
>!table : boolean
>table : unknown
>table instanceof Object : boolean
>table : {}
>Object : ObjectConstructor
>'html' in table : boolean
>'html' : "html"
>table : Object
}

function tryGetHtmlPropFromTable(table: unknown) {
>tryGetHtmlPropFromTable : (table: unknown) => Object | undefined
>table : unknown

    if (!!table && table instanceof Object && 'html' in table && table.html instanceof Object) {
>!!table && table instanceof Object && 'html' in table && table.html instanceof Object : boolean
>!!table && table instanceof Object && 'html' in table : boolean
>!!table && table instanceof Object : boolean
>!!table : boolean
>!table : boolean
>table : unknown
>table instanceof Object : boolean
>table : {}
>Object : ObjectConstructor
>'html' in table : boolean
>'html' : "html"
>table : Object
>table.html instanceof Object : boolean
>table.html : unknown
>table : Object & Record<"html", unknown>
>html : unknown
>Object : ObjectConstructor

        return table.html;
>table.html : Object
>table : Object & Record<"html", unknown>
>html : Object
    }
    return undefined;
>undefined : undefined
}

