error TS-1: Pre-emit (0) and post-emit (1) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!


!!! error TS-1: Pre-emit (0) and post-emit (1) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!
!!! related TS-1: The excess diagnostics are:
!!! related TS2749 tests/cases/compiler/index.ts:3:12: 'fooBar.X' refers to a value, but is being used as a type here. Did you mean 'typeof fooBar.X'?
==== tests/cases/compiler/index.ts (0 errors) ====
    /// <reference path="declarations.d.ts" />
    import fooBar from "foobar";
    import X = fooBar.X;
    import X2 from "foobarx";
    const x: X = X;
    const x2: X2 = X2;
    
    import B from "./a";
    const b: B = new B(B.b);
    
    import fooLength from "./b";
    fooLength + 1;
    
==== tests/cases/compiler/declarations.d.ts (0 errors) ====
    // This test is just like exportEqualsProperty, but with `export default`.
    
    declare namespace foo.bar {
        export type X = number;
        export const X: number;
    }
    
    declare module "foobar" {
        export default foo.bar;
    }
    
    declare module "foobarx" {
        export default foo.bar.X;
    }
    
==== tests/cases/compiler/a.ts (0 errors) ====
    namespace A {
        export class B { constructor(b: number) {} }
        export namespace B { export const b: number = 0; }
    }
    export default A.B;
    
==== tests/cases/compiler/b.ts (0 errors) ====
    export default "foo".length;
    