typescript_standalone.d.ts(21,28): error TS1005: ';' expected.
typescript_standalone.d.ts(21,41): error TS1005: ';' expected.
typescript_standalone.d.ts(8515,28): error TS1005: ';' expected.
typescript_standalone.d.ts(8515,40): error TS1005: ';' expected.
typescript_standalone.d.ts(8971,28): error TS1005: ';' expected.
typescript_standalone.d.ts(8971,42): error TS1005: ';' expected.
typescript_standalone.d.ts(9231,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9231,46): error TS1005: ';' expected.
typescript_standalone.d.ts(9581,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9581,36): error TS1005: ';' expected.
typescript_standalone.d.ts(9605,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9605,36): error TS1005: ';' expected.
typescript_standalone.d.ts(9692,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9692,38): error TS1005: ';' expected.
typescript_standalone.d.ts(10857,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10857,57): error TS1005: ';' expected.
typescript_standalone.d.ts(10868,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10868,41): error TS1005: ';' expected.
typescript_standalone.d.ts(10878,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10878,48): error TS1005: ';' expected.
typescript_standalone.d.ts(10953,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10953,47): error TS1005: ';' expected.
typescript_standalone.d.ts(11010,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11010,47): error TS1005: ';' expected.
typescript_standalone.d.ts(11064,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11064,52): error TS1005: ';' expected.
typescript_standalone.d.ts(11084,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11084,44): error TS1005: ';' expected.
typescript_standalone.d.ts(11094,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11094,35): error TS1005: ';' expected.
typescript_standalone.d.ts(11128,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11128,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11131,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11131,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11135,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11135,45): error TS1005: ';' expected.
typescript_standalone.d.ts(11153,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11153,56): error TS1005: ';' expected.
typescript_standalone.d.ts(11179,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11179,36): error TS1005: ';' expected.
typescript_standalone.d.ts(11182,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11182,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11194,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11194,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11224,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11224,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11258,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11258,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11269,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11269,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11293,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11293,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11301,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11301,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11305,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11305,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11335,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11335,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11378,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11378,41): error TS1005: ';' expected.
typescript_standalone.d.ts(11565,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11565,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11567,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11567,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11571,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11571,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11573,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11573,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11575,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11575,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11577,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11577,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11579,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11579,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11588,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11588,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11590,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11590,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11592,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11592,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11594,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11594,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11596,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11596,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11598,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11598,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11600,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11600,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11602,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11602,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11604,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11604,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11606,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11606,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11608,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11608,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11610,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11610,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11612,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11612,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11614,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11614,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11616,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11616,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11626,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11626,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11628,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11628,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11630,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11630,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11632,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11632,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11634,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11634,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11636,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11636,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11638,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11638,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11640,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11640,72): error TS1005: ';' expected.
typescript_standalone.d.ts(11642,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11642,52): error TS1005: ';' expected.
typescript_standalone.d.ts(11714,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11714,72): error TS1005: ';' expected.
typescript_standalone.d.ts(11716,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11716,38): error TS1005: ';' expected.
typescript_standalone.d.ts(11718,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11718,71): error TS1005: ';' expected.
typescript_standalone.d.ts(11759,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11759,48): error TS1005: ';' expected.


==== tests/cases/compiler/APISample_linter.ts (0 errors) ====
    /*
     * Note: This test is a public API sample. The sample sources can be found 
             at: https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#traversing-the-ast-with-a-little-linter
     *       Please log a "breaking change" issue for any API breaking change affecting this issue
     */
    
    declare var process: any;
    declare var console: any;
    declare var readFileSync: any;
    
    import * as ts from "typescript";
    
    export function delint(sourceFile: ts.SourceFile) {
        delintNode(sourceFile);
    
        function delintNode(node: ts.Node) {
            switch (node.kind) {
                case ts.SyntaxKind.ForStatement:
                case ts.SyntaxKind.ForInStatement:
                case ts.SyntaxKind.WhileStatement:
                case ts.SyntaxKind.DoStatement:
                    if ((<ts.IterationStatement>node).statement.kind !== ts.SyntaxKind.Block) {
                        report(node, "A looping statement's contents should be wrapped in a block body.");
                    }
                    break;
    
                case ts.SyntaxKind.IfStatement:
                    let ifStatement = (<ts.IfStatement>node);
                    if (ifStatement.thenStatement.kind !== ts.SyntaxKind.Block) {
                        report(ifStatement.thenStatement, "An if statement's contents should be wrapped in a block body.");
                    }
                    if (ifStatement.elseStatement &&
                        ifStatement.elseStatement.kind !== ts.SyntaxKind.Block &&
                        ifStatement.elseStatement.kind !== ts.SyntaxKind.IfStatement) {
                        report(ifStatement.elseStatement, "An else statement's contents should be wrapped in a block body.");
                    }
                    break;
    
                case ts.SyntaxKind.BinaryExpression:
                    let op = (<ts.BinaryExpression>node).operatorToken.kind;
                    if (op === ts.SyntaxKind.EqualsEqualsToken || op == ts.SyntaxKind.ExclamationEqualsToken) {
                        report(node, "Use '===' and '!=='.")
                    }
                    break;
            }
    
            ts.forEachChild(node, delintNode);
        }
    
        function report(node: ts.Node, message: string) {
            let { line, character } = sourceFile.getLineAndCharacterOfPosition(node.getStart());
            console.log(`${sourceFile.fileName} (${line + 1},${character + 1}): ${message}`);
        }
    }
    
    const fileNames: string[] = process.argv.slice(2);
    fileNames.forEach(fileName => {
        // Parse a file
        let sourceFile = ts.createSourceFile(fileName, readFileSync(fileName).toString(), ts.ScriptTarget.ES2015, /*setParentNodes */ true);
    
        // delint it
        delint(sourceFile);
    });