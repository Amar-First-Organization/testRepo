//// [tests/cases/conformance/esDecorators/esDecorators-privateFieldAccess.ts] ////

=== esDecorators-privateFieldAccess.ts ===
declare let dec: any;
>dec : Symbol(dec, Decl(esDecorators-privateFieldAccess.ts, 0, 11))

@dec(x => x.#foo) // error
>dec : Symbol(dec, Decl(esDecorators-privateFieldAccess.ts, 0, 11))
>x : Symbol(x, Decl(esDecorators-privateFieldAccess.ts, 2, 5))
>x : Symbol(x, Decl(esDecorators-privateFieldAccess.ts, 2, 5))

class Foo {
>Foo : Symbol(Foo, Decl(esDecorators-privateFieldAccess.ts, 0, 21))

    #foo = 3;
>#foo : Symbol(Foo.#foo, Decl(esDecorators-privateFieldAccess.ts, 3, 11))

    @dec(this, (x: Foo) => x.#foo) // ok
>dec : Symbol(dec, Decl(esDecorators-privateFieldAccess.ts, 0, 11))
>this : Symbol(globalThis)
>x : Symbol(x, Decl(esDecorators-privateFieldAccess.ts, 6, 16))
>Foo : Symbol(Foo, Decl(esDecorators-privateFieldAccess.ts, 0, 21))
>x.#foo : Symbol(Foo.#foo, Decl(esDecorators-privateFieldAccess.ts, 3, 11))
>x : Symbol(x, Decl(esDecorators-privateFieldAccess.ts, 6, 16))

    m() {}
>m : Symbol(Foo.m, Decl(esDecorators-privateFieldAccess.ts, 4, 13))
}

