=== tests/cases/compiler/consumer.tsx ===
/// <reference path="component.d.ts" />
import BaseComponent = require('BaseComponent');
>BaseComponent : React.Component<any, {}>

class TestComponent extends React.Component<any, {}> {
>TestComponent : TestComponent
>React.Component : React.Component<any, {}>
>React : typeof React
>Component : typeof React.Component

    render() {
>render : () => any (error)

        return <BaseComponent />;
><BaseComponent /> : any (error)
>BaseComponent : React.Component<any, {}>
    }
}

=== tests/cases/compiler/component.d.ts ===
declare module JSX {
  interface ElementAttributesProperty { props; }
>props : any
}
declare module React {
>React : typeof React

  class Component<T, U> { }
>Component : Component<T, U>
}
declare module "BaseComponent" {
>"BaseComponent" : typeof import("BaseComponent")

    var base: React.Component<any, {}>;
>base : React.Component<any, {}>
>React : any (error)

    export = base;
>base : React.Component<any, {}>
}

