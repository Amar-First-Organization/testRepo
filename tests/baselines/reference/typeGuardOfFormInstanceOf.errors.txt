tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts(24,1): error TS2322: Type 'string | false' is not assignable to type 'string'.
  Type 'false' is not assignable to type 'string'.
tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts(25,1): error TS2322: Type 'number | false' is not assignable to type 'number'.
  Type 'false' is not assignable to type 'number'.
tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts(26,1): error TS2322: Type 'string | false' is not assignable to type 'string'.
  Type 'false' is not assignable to type 'string'.
tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts(27,1): error TS2322: Type 'number | false' is not assignable to type 'number'.
  Type 'false' is not assignable to type 'number'.
tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts(30,1): error TS2322: Type 'number | false' is not assignable to type 'number'.
  Type 'false' is not assignable to type 'number'.
tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts(31,1): error TS2322: Type 'number | false' is not assignable to type 'number'.
  Type 'false' is not assignable to type 'number'.
tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts(32,1): error TS2322: Type 'string | false' is not assignable to type 'string'.
  Type 'false' is not assignable to type 'string'.
tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts(33,5): error TS2322: Type 'false | D1' is not assignable to type 'C2 | D1'.
  Type 'false' is not assignable to type 'C2 | D1'.


==== tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts (8 errors) ====
    // A type guard of the form x instanceof C, where C is of a subtype of the global type 'Function' 
    // and C has a property named 'prototype'
    //  - when true, narrows the type of x to the type of the 'prototype' property in C provided 
    //    it is a subtype of the type of x, or
    //  - when false, has no effect on the type of x.
    
    class C1 {
        p1: string;
    }
    class C2 {
        p2: number;
    }
    class D1 extends C1 {
        p3: number;
    }
    class C3 {
        p4: number;
    }
    var str: string;
    var num: number;
    var strOrNum: string | number;
    
    var ctor1: C1 | C2;
    str = ctor1 instanceof C1 && ctor1.p1; // C1
    ~~~
!!! error TS2322: Type 'string | false' is not assignable to type 'string'.
!!! error TS2322:   Type 'false' is not assignable to type 'string'.
    num = ctor1 instanceof C2 && ctor1.p2; // C2
    ~~~
!!! error TS2322: Type 'number | false' is not assignable to type 'number'.
!!! error TS2322:   Type 'false' is not assignable to type 'number'.
    str = ctor1 instanceof D1 && ctor1.p1; // D1
    ~~~
!!! error TS2322: Type 'string | false' is not assignable to type 'string'.
!!! error TS2322:   Type 'false' is not assignable to type 'string'.
    num = ctor1 instanceof D1 && ctor1.p3; // D1
    ~~~
!!! error TS2322: Type 'number | false' is not assignable to type 'number'.
!!! error TS2322:   Type 'false' is not assignable to type 'number'.
    
    var ctor2: C2 | D1;
    num = ctor2 instanceof C2 && ctor2.p2; // C2
    ~~~
!!! error TS2322: Type 'number | false' is not assignable to type 'number'.
!!! error TS2322:   Type 'false' is not assignable to type 'number'.
    num = ctor2 instanceof D1 && ctor2.p3; // D1
    ~~~
!!! error TS2322: Type 'number | false' is not assignable to type 'number'.
!!! error TS2322:   Type 'false' is not assignable to type 'number'.
    str = ctor2 instanceof D1 && ctor2.p1; // D1
    ~~~
!!! error TS2322: Type 'string | false' is not assignable to type 'string'.
!!! error TS2322:   Type 'false' is not assignable to type 'string'.
    var r2: D1 | C2 = ctor2 instanceof C1 && ctor2; // C2 | D1
        ~~
!!! error TS2322: Type 'false | D1' is not assignable to type 'C2 | D1'.
!!! error TS2322:   Type 'false' is not assignable to type 'C2 | D1'.
    
    var ctor3: C1 | C2;
    if (ctor3 instanceof C1) {
        ctor3.p1; // C1
    }
    else {
        ctor3.p2; // C2
    }
    
    var ctor4: C1 | C2 | C3;
    if (ctor4 instanceof C1) {
        ctor4.p1; // C1
    }
    else if (ctor4 instanceof C2) {
        ctor4.p2; // C2
    }
    else {
        ctor4.p4; // C3
    }
    
    var ctor5: C1 | D1 | C2;
    if (ctor5 instanceof C1) {
        ctor5.p1; // C1
    }
    else {
        ctor5.p2; // C2
    }
    
    var ctor6: C1 | C2 | C3;
    if (ctor6 instanceof C1 || ctor6 instanceof C2) {
    }
    else {
        ctor6.p4; // C3
    }