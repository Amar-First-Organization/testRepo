=== tests/cases/conformance/types/namedTypes/optionalAccessor7.ts ===
class A {
>A : Symbol(A, Decl(optionalAccessor7.ts, 0, 0))

    get x?() { return '' }
>x : Symbol(A.x, Decl(optionalAccessor7.ts, 0, 9), Decl(optionalAccessor7.ts, 1, 26))

    set x?(value: string) {}
>x : Symbol(A.x, Decl(optionalAccessor7.ts, 0, 9), Decl(optionalAccessor7.ts, 1, 26))
>value : Symbol(value, Decl(optionalAccessor7.ts, 2, 11))
}

class B extends A {
>B : Symbol(B, Decl(optionalAccessor7.ts, 3, 1))
>A : Symbol(A, Decl(optionalAccessor7.ts, 0, 0))

    get x() { return '' }
>x : Symbol(B.x, Decl(optionalAccessor7.ts, 5, 19), Decl(optionalAccessor7.ts, 6, 25))

    set x(value: string) { }
>x : Symbol(B.x, Decl(optionalAccessor7.ts, 5, 19), Decl(optionalAccessor7.ts, 6, 25))
>value : Symbol(value, Decl(optionalAccessor7.ts, 7, 10))
}

