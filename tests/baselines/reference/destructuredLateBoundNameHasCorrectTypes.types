=== tests/cases/compiler/destructuredLateBoundNameHasCorrectTypes.ts ===
let { [Symbol.iterator]: destructured } = [];
>Symbol.iterator : symbol
>Symbol : SymbolConstructor
>iterator : symbol
>destructured : () => IterableIterator<undefined>
>[] : undefined[]

void destructured;
>void destructured : undefined
>destructured : () => IterableIterator<undefined>

const named = "prop";
>named : "prop"
>"prop" : "prop"

let { [named]: computed } = { prop: "b" };
>named : "prop"
>computed : string
>{ prop: "b" } : { prop: string; }
>prop : string
>"b" : "b"

void computed;
>void computed : undefined
>computed : string

