=== tests/cases/compiler/subtypeReduceBivariance2.ts ===
interface S {
>S : Symbol(S, Decl(subtypeReduceBivariance2.ts, 0, 0), Decl(subtypeReduceBivariance2.ts, 3, 13))

    f(a: number | string): void;
>f : Symbol(S.f, Decl(subtypeReduceBivariance2.ts, 0, 13))
>a : Symbol(a, Decl(subtypeReduceBivariance2.ts, 1, 6))
}
declare const S: S;
>S : Symbol(S, Decl(subtypeReduceBivariance2.ts, 0, 0), Decl(subtypeReduceBivariance2.ts, 3, 13))
>S : Symbol(S, Decl(subtypeReduceBivariance2.ts, 0, 0), Decl(subtypeReduceBivariance2.ts, 3, 13))

function g(a: number): void { }
>g : Symbol(g, Decl(subtypeReduceBivariance2.ts, 3, 19))
>a : Symbol(a, Decl(subtypeReduceBivariance2.ts, 4, 11))

// Force type resolution
S.f;
>S.f : Symbol(S.f, Decl(subtypeReduceBivariance2.ts, 0, 13))
>S : Symbol(S, Decl(subtypeReduceBivariance2.ts, 0, 0), Decl(subtypeReduceBivariance2.ts, 3, 13))
>f : Symbol(S.f, Decl(subtypeReduceBivariance2.ts, 0, 13))

g;
>g : Symbol(g, Decl(subtypeReduceBivariance2.ts, 3, 19))

const arr: Array<(a: number | string) => void> = [g, S.f];
>arr : Symbol(arr, Decl(subtypeReduceBivariance2.ts, 10, 5))
>Array : Symbol(Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>a : Symbol(a, Decl(subtypeReduceBivariance2.ts, 10, 18))
>g : Symbol(g, Decl(subtypeReduceBivariance2.ts, 3, 19))
>S.f : Symbol(S.f, Decl(subtypeReduceBivariance2.ts, 0, 13))
>S : Symbol(S, Decl(subtypeReduceBivariance2.ts, 0, 0), Decl(subtypeReduceBivariance2.ts, 3, 13))
>f : Symbol(S.f, Decl(subtypeReduceBivariance2.ts, 0, 13))

