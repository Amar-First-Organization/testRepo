destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts(3,13): error TS7022: 'a1' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts(4,13): error TS7022: 'a2' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts(9,13): error TS7022: 'a1' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts(10,13): error TS7022: 'a2' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts(15,13): error TS7022: 'a1' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts(16,13): error TS7022: 'a2' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts(23,13): error TS7022: 'a' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.


==== destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts (7 errors) ====
    // To be inferred as `number`
    function f1() {
        const { a1, b1 = a1 } = { a1: 1 };
                ~~
!!! error TS7022: 'a1' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
        const { a2, b2 = 1 + a2 } = { a2: 1 };
                ~~
!!! error TS7022: 'a2' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    }
    
    // To be inferred as `string`
    function f2() {
        const { a1, b1 = a1 } = { a1: 'hi' };
                ~~
!!! error TS7022: 'a1' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
        const { a2, b2 = a2 + '!' } = { a2: 'hi' };
                ~~
!!! error TS7022: 'a2' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    }
    
    // To be inferred as `string | number`
    function f3() {
        const { a1, b1 = a1 } = { a1: 'hi', b1: 1 };
                ~~
!!! error TS7022: 'a1' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
        const { a2, b2 = a2 + '!' } = { a2: 'hi', b2: 1 };
                ~~
!!! error TS7022: 'a2' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    }
    
    // Based on comment:
    //   - https://github.com/microsoft/TypeScript/issues/49989#issuecomment-1852694486
    declare const yadda: { a?: number, b?: number } | undefined
    function f4() {
        const { a, b = a } = yadda ?? {};
                ~
!!! error TS7022: 'a' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    }
    