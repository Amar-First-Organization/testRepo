=== tests/cases/conformance/interfaces/declarationMerging/twoInterfacesDifferentRootModule2.ts ===
// two interfaces with different root modules should not merge

module M {
>M : typeof M

    export interface A {
        foo: string;
>foo : string
    }

    export interface B<T> {
        foo: T;
>foo : T
    }

    module M2 {
>M2 : typeof M2

        export interface A {
            bar: number;
>bar : number
        }

        var a: A;
>a : A

        var r1 = a.foo; // error
>r1 : any (error)
>a.foo : any (error)
>a : A
>foo : any (error)

        var r2 = a.bar;
>r2 : number
>a.bar : number
>a : A
>bar : number

        export interface B<T> {
            bar: T;
>bar : T
        }

        var b: B<string>;
>b : B<string>

        var r3 = b.foo; // error
>r3 : any (error)
>b.foo : any (error)
>b : B<string>
>foo : any (error)

        var r4 = b.bar;
>r4 : string
>b.bar : string
>b : B<string>
>bar : string
    }

    var a: A;
>a : A

    var r1 = a.foo; 
>r1 : string
>a.foo : string
>a : A
>foo : string

    var r2 = a.bar; // error
>r2 : any (error)
>a.bar : any (error)
>a : A
>bar : any (error)

    var b: B<string>;
>b : B<string>

    var r3 = b.foo; 
>r3 : string
>b.foo : string
>b : B<string>
>foo : string

    var r4 = b.bar; // error
>r4 : any (error)
>b.bar : any (error)
>b : B<string>
>bar : any (error)
}
