=== tests/cases/conformance/types/stringLiteral/stringLiteralTypesInUnionTypes04.ts ===

type T = "" | "foo";
>T : "" | "foo"

let x: T = "";
>x : "" | "foo"
>T : "" | "foo"
>"" : ""

let y: T = "foo";
>y : "" | "foo"
>T : "" | "foo"
>"foo" : "foo"

if (x === "") {
>x === "" : boolean
>x : ""
>"" : string

    let a = x;
>a : ""
>x : ""
}

if (x !== "") {
>x !== "" : boolean
>x : ""
>"" : string

    let b = x;
>b : ""
>x : ""
}

if (x == "") {
>x == "" : boolean
>x : ""
>"" : string

    let c = x;
>c : ""
>x : ""
}

if (x != "") {
>x != "" : boolean
>x : ""
>"" : string

    let d = x;
>d : ""
>x : ""
}

if (x) {
>x : ""

    let e = x;
>e : ""
>x : ""
}

if (!x) {
>!x : boolean
>x : ""

    let f = x;
>f : ""
>x : ""
}

if (!!x) {
>!!x : boolean
>!x : boolean
>x : ""

    let g = x;
>g : ""
>x : ""
}

if (!!!x) {
>!!!x : boolean
>!!x : boolean
>!x : boolean
>x : ""

    let h = x;
>h : ""
>x : ""
}
