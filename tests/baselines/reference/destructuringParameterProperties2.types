=== tests/cases/conformance/es6/destructuring/destructuringParameterProperties2.ts ===
class C1 {
>C1 : C1

    constructor(private k: number, private [a, b, c]: [number, string, boolean]) {
>k : number
>a : number
>b : string
>c : boolean

        if ((b === undefined && c === undefined) || (this.b === undefined && this.c === undefined)) {
>(b === undefined && c === undefined) || (this.b === undefined && this.c === undefined) : boolean
>(b === undefined && c === undefined) : boolean
>b === undefined && c === undefined : boolean
>b === undefined : boolean
>b : string
>undefined : undefined
>c === undefined : boolean
>c : boolean
>undefined : undefined
>(this.b === undefined && this.c === undefined) : boolean
>this.b === undefined && this.c === undefined : boolean
>this.b === undefined : boolean
>this.b : any (error)
>this : this
>b : any (error)
>undefined : undefined
>this.c === undefined : boolean
>this.c : any (error)
>this : this
>c : any (error)
>undefined : undefined

            this.a = a || k;
>this.a = a || k : number
>this.a : any (error)
>this : this
>a : any (error)
>a || k : number
>a : number
>k : number
        }
    }

    public getA() {
>getA : () => any (error)

        return this.a
>this.a : any (error)
>this : this
>a : any (error)
    }

    public getB() {
>getB : () => any (error)

        return this.b
>this.b : any (error)
>this : this
>b : any (error)
    }

    public getC() {
>getC : () => any (error)

        return this.c;
>this.c : any (error)
>this : this
>c : any (error)
    }
}

var x = new C1(undefined, [0, undefined, ""]);
>x : any (error)
>new C1(undefined, [0, undefined, ""]) : any (error)
>C1 : typeof C1
>undefined : undefined
>[0, undefined, ""] : (string | number)[]
>0 : 0
>undefined : undefined
>"" : ""

var [x_a, x_b, x_c] = [x.getA(), x.getB(), x.getC()];
>x_a : any (error)
>x_b : any (error)
>x_c : any (error)
>[x.getA(), x.getB(), x.getC()] : [any (error), any (error), any (error)]
>x.getA() : any (error)
>x.getA : any (error)
>x : any (error)
>getA : any (error)
>x.getB() : any (error)
>x.getB : any (error)
>x : any (error)
>getB : any (error)
>x.getC() : any (error)
>x.getC : any (error)
>x : any (error)
>getC : any (error)

var y = new C1(10, [0, "", true]);
>y : C1
>new C1(10, [0, "", true]) : C1
>C1 : typeof C1
>10 : 10
>[0, "", true] : [number, string, true]
>0 : 0
>"" : ""
>true : true

var [y_a, y_b, y_c] = [y.getA(), y.getB(), y.getC()];
>y_a : any (error)
>y_b : any (error)
>y_c : any (error)
>[y.getA(), y.getB(), y.getC()] : [any (error), any (error), any (error)]
>y.getA() : any (error)
>y.getA : () => any (error)
>y : C1
>getA : () => any (error)
>y.getB() : any (error)
>y.getB : () => any (error)
>y : C1
>getB : () => any (error)
>y.getC() : any (error)
>y.getC : () => any (error)
>y : C1
>getC : () => any (error)

var z = new C1(10, [undefined, "", null]);
>z : C1
>new C1(10, [undefined, "", null]) : C1
>C1 : typeof C1
>10 : 10
>[undefined, "", null] : [undefined, string, null]
>undefined : undefined
>"" : ""
>null : null

var [z_a, z_b, z_c] = [z.getA(), z.getB(), z.getC()];
>z_a : any (error)
>z_b : any (error)
>z_c : any (error)
>[z.getA(), z.getB(), z.getC()] : [any (error), any (error), any (error)]
>z.getA() : any (error)
>z.getA : () => any (error)
>z : C1
>getA : () => any (error)
>z.getB() : any (error)
>z.getB : () => any (error)
>z : C1
>getB : () => any (error)
>z.getC() : any (error)
>z.getC : () => any (error)
>z : C1
>getC : () => any (error)

