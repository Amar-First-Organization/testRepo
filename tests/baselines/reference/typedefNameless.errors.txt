tests/cases/conformance/jsdoc/a.js(11,1): error TS2693: 'nameless' only refers to a type, but is being used as a value here.
tests/cases/conformance/jsdoc/a.js(26,5): error TS2693: 'notOK' only refers to a type, but is being used as a value here.
tests/cases/conformance/jsdoc/a.js(32,7): error TS1155: 'const' declarations must be initialized.


==== tests/cases/conformance/jsdoc/a.js (3 errors) ====
    /**
     * @typedef {number}
     */
    var nameless;
    
    /**
     * @typedef {number} named
     */
    var this_is_not_the_name = true;
    
    nameless = 123; // nameless is not a value
    ~~~~~~~~
!!! error TS2693: 'nameless' only refers to a type, but is being used as a value here.
    
    /**
     * @param {named} p1
     * @param {nameless} p2
     */
    function abc(p1, p2) {}
    
    /**
     * @param {named} p1
     * @param {nameless} p2
     */
    export function breakThings(p1, p2) {}
    
    /** @typedef {number} */
    var notOK = 1;
        ~~~~~
!!! error TS2693: 'notOK' only refers to a type, but is being used as a value here.
    
    /** @typedef {string} */
    let thisIsOK;
    
    /** @typedef {{L: number}} */
    const notLegalButShouldBe;
          ~~~~~~~~~~~~~~~~~~~
!!! error TS1155: 'const' declarations must be initialized.
    
==== tests/cases/conformance/jsdoc/b.js (0 errors) ====
    /**
     * @typedef {{
     *   p: string
     * }}
     */
    export var type1;
    
==== tests/cases/conformance/jsdoc/c.js (0 errors) ====
    import { type1 as aliased } from './b';
    
    /**
     * @param {aliased} pt1
     */
    function f1(pt1) {}
    
    /** @type {{ p2?: any }} */
    var k = {};
    
    /**
     * @typedef {aliased}
     */
    k.p2;
    
    