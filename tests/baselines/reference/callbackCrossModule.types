=== tests/cases/conformance/jsdoc/mod1.js ===
/** @callback Con - some kind of continuation
 * @param {object | undefined} error
 * @return {any} I don't even know what this should return
 */
module.exports = C
>module.exports = C : typeof C
>module.exports : any
>module : any
>exports : any
>C : typeof C

function C() {
>C : typeof C

    this.p = 1
>this.p = 1 : 1
>this.p : any
>this : any
>p : any
>1 : 1
}

=== tests/cases/conformance/jsdoc/use.js ===
/** @param {import('./mod1').Con} k */
function f(k) {
>f : (k: (error: any) => any) => any
>k : (error: any) => any

    if (1 === 2 - 1) {
>1 === 2 - 1 : boolean
>1 : 1
>2 - 1 : number
>2 : 2
>1 : 1

        // I guess basic math works!
    }
    return k({ ok: true})
>k({ ok: true}) : any
>k : (error: any) => any
>{ ok: true} : { ok: boolean; }
>ok : boolean
>true : true
}


