name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
      - release-*

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Test the latest version of Node.js plus the last two LTS versions.
        node-version:
          - "*"
          - lts/*
          - lts/-1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 5
    - name: Use node version ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        check-latest: true
    # We use all of this instead of "cache: npm" above to avoid mixing npm 6 caches with npm 8+ caches.
    # TODO: Remove this once we stop running CI on Node 14.
    - name: Get npm cache directory
      id: npm-cache-info
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
        echo "::set-output name=key::$(npm --version | grep -q '^6' && echo "node14" || echo "node")"
    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-info.outputs.dir }}
        key: ${{ runner.os }}-${{ steps.npm-cache-info.outputs.key }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.npm-cache-info.outputs.key }}-
    - run:  npm ci

    # Re: https://github.com/actions/setup-node/pull/125
    - name: Register Problem Matcher for TSC
      run: echo "##[add-matcher].github/tsc.json"

    - name: Tests
      run:  npm test -- --no-lint

    - name: Linter
      run:  npm run lint:ci

    - name: Adding playwright
      run: npm install --no-save --no-package-lock playwright

    - name: Validate the browser can import TypeScript
      run: gulp test-browser-integration
