error TS5109: Option 'moduleResolution' must be set to 'Node18' (or left unspecified) when option 'module' is set to 'Node18'.
index.cjs(2,22): error TS2792: Cannot find module '#cjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.cjs(3,22): error TS2792: Cannot find module '#mjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.cjs(4,23): error TS2792: Cannot find module '#type'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.js(2,22): error TS2792: Cannot find module '#cjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.js(3,22): error TS2792: Cannot find module '#mjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.js(4,23): error TS2792: Cannot find module '#type'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.mjs(2,22): error TS2792: Cannot find module '#cjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.mjs(3,22): error TS2792: Cannot find module '#mjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.mjs(4,23): error TS2792: Cannot find module '#type'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?


!!! error TS5109: Option 'moduleResolution' must be set to 'Node18' (or left unspecified) when option 'module' is set to 'Node18'.
==== index.js (3 errors) ====
    // esm format file
    import * as cjs from "#cjs";
                         ~~~~~~
!!! error TS2792: Cannot find module '#cjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    import * as mjs from "#mjs";
                         ~~~~~~
!!! error TS2792: Cannot find module '#mjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    import * as type from "#type";
                          ~~~~~~~
!!! error TS2792: Cannot find module '#type'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    cjs;
    mjs;
    type;
==== index.mjs (3 errors) ====
    // esm format file
    import * as cjs from "#cjs";
                         ~~~~~~
!!! error TS2792: Cannot find module '#cjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    import * as mjs from "#mjs";
                         ~~~~~~
!!! error TS2792: Cannot find module '#mjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    import * as type from "#type";
                          ~~~~~~~
!!! error TS2792: Cannot find module '#type'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    cjs;
    mjs;
    type;
==== index.cjs (3 errors) ====
    // esm format file
    import * as cjs from "#cjs";
                         ~~~~~~
!!! error TS2792: Cannot find module '#cjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    import * as mjs from "#mjs";
                         ~~~~~~
!!! error TS2792: Cannot find module '#mjs'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    import * as type from "#type";
                          ~~~~~~~
!!! error TS2792: Cannot find module '#type'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    cjs;
    mjs;
    type;
==== package.json (0 errors) ====
    {
        "name": "package",
        "private": true,
        "type": "module",
        "exports": "./index.js",
        "imports": {
            "#cjs": "./index.cjs",
            "#mjs": "./index.mjs",
            "#type": "./index.js"
        }
    }