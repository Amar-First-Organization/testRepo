=== tests/cases/compiler/functionParameterArityMismatch.ts ===
declare function f(a: number);
>f : { (a: number): any; (a: number, b: number, c: number): any; }
>a : number

declare function f(a: number, b: number, c: number);
>f : { (a: number): any; (a: number, b: number, c: number): any; }
>a : number
>b : number
>c : number

f();
>f() : any
>f : { (a: number): any; (a: number, b: number, c: number): any; }

f(1, 2);
>f(1, 2) : any
>f : { (a: number): any; (a: number, b: number, c: number): any; }
>1 : 1
>2 : 2

f(1, 2, 3, 4);
>f(1, 2, 3, 4) : any
>f : { (a: number): any; (a: number, b: number, c: number): any; }
>1 : 1
>2 : 2
>3 : 3
>4 : 4

f(1, 2, 3, 4, 5);
>f(1, 2, 3, 4, 5) : any
>f : { (a: number): any; (a: number, b: number, c: number): any; }
>1 : 1
>2 : 2
>3 : 3
>4 : 4
>5 : 5

declare function g();
>g : { (): any; (a: number, b: number, c: number): any; }

declare function g(a: number, b: number, c: number);
>g : { (): any; (a: number, b: number, c: number): any; }
>a : number
>b : number
>c : number

g(1);
>g(1) : any
>g : { (): any; (a: number, b: number, c: number): any; }
>1 : 1

g(1, 2);
>g(1, 2) : any
>g : { (): any; (a: number, b: number, c: number): any; }
>1 : 1
>2 : 2

g(1, 2, 3, 4);
>g(1, 2, 3, 4) : any
>g : { (): any; (a: number, b: number, c: number): any; }
>1 : 1
>2 : 2
>3 : 3
>4 : 4

declare function h(a: number, b: number, c: number, d?: number);
>h : (a: number, b: number, c: number, d?: number) => any
>a : number
>b : number
>c : number
>d : number

h();
>h() : any
>h : (a: number, b: number, c: number, d?: number) => any

h(1);
>h(1) : any
>h : (a: number, b: number, c: number, d?: number) => any
>1 : 1

h(1, 2);
>h(1, 2) : any
>h : (a: number, b: number, c: number, d?: number) => any
>1 : 1
>2 : 2

h(1, 2, 3, 4, 5);
>h(1, 2, 3, 4, 5) : any
>h : (a: number, b: number, c: number, d?: number) => any
>1 : 1
>2 : 2
>3 : 3
>4 : 4
>5 : 5

