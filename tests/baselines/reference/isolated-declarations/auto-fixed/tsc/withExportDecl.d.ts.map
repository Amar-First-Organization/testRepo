//// [tests/cases/compiler/withExportDecl.ts] ////



/// [Declarations] ////



//// [withExportDecl.d.ts]
export declare var exportedSimpleVar: any;
export declare var exportedVarWithInitialValue: number;
export declare var exportedWithComplicatedValue: {
    x: number;
    y: number;
    desc: string;
};
export declare var exportedDeclaredVar: number;
export declare var exportedArrayVar: {
    x: number;
    y: string;
}[];
export declare function exportedFunction(): {
    x: string;
    y: string;
    n: number;
};
export declare namespace m2 {
    var a: number;
}
export declare namespace m3 {
    function foo(): string;
}
export declare var eVar1: any, eVar2: number;
export declare var eVar3: number, eVar4: any, eVar5: any;
//# sourceMappingURL=withExportDecl.d.ts.map

/// [Declarations Maps] ////


//// [withExportDecl.d.ts.map]
{"version":3,"file":"withExportDecl.d.ts","sourceRoot":"","sources":["withExportDecl.ts"],"names":[],"mappings":"AACA,eAAO,IAAI,iBAAiB,EAAE,GAAG,CAAC;AAOlC,eAAO,IAAI,2BAA2B,QAAK,CAAC;AAG5C,eAAO,IAAI,4BAA4B;;;;CAAqC,CAAC;AAO7E,MAAM,CAAC,OAAO,CAAC,IAAI,mBAAmB,EAAE,MAAM,CAAC;AAI/C,eAAO,IAAI,gBAAgB,EAAE;IAAE,CAAC,EAAE,MAAM,CAAC;IAAC,CAAC,EAAE,MAAM,CAAC;CAAE,EAAE,CAAE;AAW1D,wBAAgB,gBAAgB,IAAI;IAChC,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;CACb,CAEA;AAOD,MAAM,CAAC,OAAO,WAAQ,EAAE,CAAC;IAEd,IAAI,CAAC,EAAE,MAAM,CAAC;CACxB;AAGD,yBAAc,EAAE,CAAC;IAEb,SAAgB,GAAG,IAAI,MAAM,CAE5B;CACJ;AAED,eAAO,IAAI,KAAK,EAAE,GAAG,EAAE,KAAK,QAAK,CAAC;AAElC,eAAO,IAAI,KAAK,QAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC"}

//// https://sokra.github.io/source-map-visualization#base64,ZXhwb3J0IGRlY2xhcmUgdmFyIGV4cG9ydGVkU2ltcGxlVmFyOiBhbnk7DQpleHBvcnQgZGVjbGFyZSB2YXIgZXhwb3J0ZWRWYXJXaXRoSW5pdGlhbFZhbHVlOiBudW1iZXI7DQpleHBvcnQgZGVjbGFyZSB2YXIgZXhwb3J0ZWRXaXRoQ29tcGxpY2F0ZWRWYWx1ZTogew0KICAgIHg6IG51bWJlcjsNCiAgICB5OiBudW1iZXI7DQogICAgZGVzYzogc3RyaW5nOw0KfTsNCmV4cG9ydCBkZWNsYXJlIHZhciBleHBvcnRlZERlY2xhcmVkVmFyOiBudW1iZXI7DQpleHBvcnQgZGVjbGFyZSB2YXIgZXhwb3J0ZWRBcnJheVZhcjogew0KICAgIHg6IG51bWJlcjsNCiAgICB5OiBzdHJpbmc7DQp9W107DQpleHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBleHBvcnRlZEZ1bmN0aW9uKCk6IHsNCiAgICB4OiBzdHJpbmc7DQogICAgeTogc3RyaW5nOw0KICAgIG46IG51bWJlcjsNCn07DQpleHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgbTIgew0KICAgIHZhciBhOiBudW1iZXI7DQp9DQpleHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgbTMgew0KICAgIGZ1bmN0aW9uIGZvbygpOiBzdHJpbmc7DQp9DQpleHBvcnQgZGVjbGFyZSB2YXIgZVZhcjE6IGFueSwgZVZhcjI6IG51bWJlcjsNCmV4cG9ydCBkZWNsYXJlIHZhciBlVmFyMzogbnVtYmVyLCBlVmFyNDogYW55LCBlVmFyNTogYW55Ow0KLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2l0aEV4cG9ydERlY2wuZC50cy5tYXA=,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2l0aEV4cG9ydERlY2wuZC50cyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndpdGhFeHBvcnREZWNsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLGVBQU8sSUFBSSxpQkFBaUIsRUFBRSxHQUFHLENBQUM7QUFPbEMsZUFBTyxJQUFJLDJCQUEyQixRQUFLLENBQUM7QUFHNUMsZUFBTyxJQUFJLDRCQUE0Qjs7OztDQUFxQyxDQUFDO0FBTzdFLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxtQkFBbUIsRUFBRSxNQUFNLENBQUM7QUFJL0MsZUFBTyxJQUFJLGdCQUFnQixFQUFFO0lBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQztJQUFDLENBQUMsRUFBRSxNQUFNLENBQUM7Q0FBRSxFQUFFLENBQUU7QUFXMUQsd0JBQWdCLGdCQUFnQixJQUFJO0lBQ2hDLENBQUMsRUFBRSxNQUFNLENBQUM7SUFDVixDQUFDLEVBQUUsTUFBTSxDQUFDO0lBQ1YsQ0FBQyxFQUFFLE1BQU0sQ0FBQztDQUNiLENBRUE7QUFPRCxNQUFNLENBQUMsT0FBTyxXQUFRLEVBQUUsQ0FBQztJQUVkLElBQUksQ0FBQyxFQUFFLE1BQU0sQ0FBQztDQUN4QjtBQUdELHlCQUFjLEVBQUUsQ0FBQztJQUViLFNBQWdCLEdBQUcsSUFBSSxNQUFNLENBRTVCO0NBQ0o7QUFFRCxlQUFPLElBQUksS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLFFBQUssQ0FBQztBQUVsQyxlQUFPLElBQUksS0FBSyxRQUFLLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxDQUFDIn0=,dmFyIHNpbXBsZVZhcjsKZXhwb3J0IHZhciBleHBvcnRlZFNpbXBsZVZhcjogYW55OwoKdmFyIGFub3RoZXJWYXI6IGFueTsKdmFyIHZhcldpdGhTaW1wbGVUeXBlOiBudW1iZXI7CnZhciB2YXJXaXRoQXJyYXlUeXBlOiBudW1iZXJbXTsKCnZhciB2YXJXaXRoSW5pdGlhbFZhbHVlID0gMzA7CmV4cG9ydCB2YXIgZXhwb3J0ZWRWYXJXaXRoSW5pdGlhbFZhbHVlID0gNzA7Cgp2YXIgd2l0aENvbXBsaWNhdGVkVmFsdWUgPSB7IHg6IDMwLCB5OiA3MCwgZGVzYzogInBvc2l0aW9uIiB9OwpleHBvcnQgdmFyIGV4cG9ydGVkV2l0aENvbXBsaWNhdGVkVmFsdWUgPSB7IHg6IDMwLCB5OiA3MCwgZGVzYzogInBvc2l0aW9uIiB9OwoKZGVjbGFyZSB2YXIgZGVjbGFyZWRWYXI7CmRlY2xhcmUgdmFyIGRlY2xhcmVWYXIyCgpkZWNsYXJlIHZhciBkZWNsYXJlZFZhcjsKZGVjbGFyZSB2YXIgZGVja2FyZVZhcldpdGhUeXBlOiBudW1iZXI7CmV4cG9ydCBkZWNsYXJlIHZhciBleHBvcnRlZERlY2xhcmVkVmFyOiBudW1iZXI7Cgp2YXIgYXJyYXlWYXI6IHN0cmluZ1tdID0gWydhJywgJ2InXTsKCmV4cG9ydCB2YXIgZXhwb3J0ZWRBcnJheVZhcjogeyB4OiBudW1iZXI7IHk6IHN0cmluZzsgfVtdIDsKZXhwb3J0ZWRBcnJheVZhci5wdXNoKHsgeDogMzAsIHkgOiAnaGVsbG8gd29ybGQnIH0pOwoKZnVuY3Rpb24gc2ltcGxlRnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICAgIHg6ICJIZWxsbyIsCiAgICAgICAgeTogIndvcmQiLAogICAgICAgIG46IDIKICAgIH07Cn0KCmV4cG9ydCBmdW5jdGlvbiBleHBvcnRlZEZ1bmN0aW9uKCk6IHsKICAgIHg6IHN0cmluZzsKICAgIHk6IHN0cmluZzsKICAgIG46IG51bWJlcjsKfSB7CiAgICByZXR1cm4gc2ltcGxlRnVuY3Rpb24oKTsKfQoKbW9kdWxlIG0xIHsKICAgIGV4cG9ydCBmdW5jdGlvbiBmb28oKSB7CiAgICAgICAgcmV0dXJuICJIZWxsbyI7CiAgICB9Cn0KZXhwb3J0IGRlY2xhcmUgbW9kdWxlIG0yIHsKCiAgICBleHBvcnQgdmFyIGE6IG51bWJlcjsKfQoKCmV4cG9ydCBtb2R1bGUgbTMgewoKICAgIGV4cG9ydCBmdW5jdGlvbiBmb28oKTogc3RyaW5nIHsKICAgICAgICByZXR1cm4gbTEuZm9vKCk7CiAgICB9Cn0KCmV4cG9ydCB2YXIgZVZhcjE6IGFueSwgZVZhcjIgPSAxMDsKdmFyIGVWYXIyMjsKZXhwb3J0IHZhciBlVmFyMyA9IDEwLCBlVmFyNDogYW55LCBlVmFyNTogYW55Ow==

