=== tests/cases/conformance/statements/breakStatements/invalidDoWhileBreakStatements.ts ===
// All errors

// naked break not allowed
break;

// non-existent label
ONE:
>ONE : any (error)

do break TWO; while (true)
>TWO : any (error)
>true : true

// break from inside function
TWO:
>TWO : any (error)

do {
    var x = () => {
>x : () => void
>() => {        break TWO;    } : () => void

        break TWO;
>TWO : any (error)
    }
}while (true)
>true : true

THREE:
>THREE : any (error)

do {
    var fn = function () {
>fn : () => void
>function () {        break THREE;    } : () => void

        break THREE;
>THREE : any (error)
    }
}while (true)
>true : true

// break forward
do {
    break FIVE;
>FIVE : any (error)

    FIVE:
>FIVE : any (error)

    do { } while (true)
>true : true

}while (true)
>true : true

// label on non-loop statement
NINE:
>NINE : any (error)

var y = 12;
>y : number
>12 : 12

do {
    break NINE;
>NINE : any (error)

}while (true)
>true : true

