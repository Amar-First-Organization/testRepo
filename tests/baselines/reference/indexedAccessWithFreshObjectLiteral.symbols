=== tests/cases/compiler/indexedAccessWithFreshObjectLiteral.ts ===
function foo (id: string) {
>foo : Symbol(foo, Decl(indexedAccessWithFreshObjectLiteral.ts, 0, 0))
>id : Symbol(id, Decl(indexedAccessWithFreshObjectLiteral.ts, 0, 14))

    return {
        a: 1,
>a : Symbol(a, Decl(indexedAccessWithFreshObjectLiteral.ts, 1, 12))

        b: "",
>b : Symbol(b, Decl(indexedAccessWithFreshObjectLiteral.ts, 2, 13))

        c: true
>c : Symbol(c, Decl(indexedAccessWithFreshObjectLiteral.ts, 3, 14))

    }[id]
>id : Symbol(id, Decl(indexedAccessWithFreshObjectLiteral.ts, 0, 14))
}

function bar (id: 'a' | 'b') {
>bar : Symbol(bar, Decl(indexedAccessWithFreshObjectLiteral.ts, 6, 1))
>id : Symbol(id, Decl(indexedAccessWithFreshObjectLiteral.ts, 8, 14))

    return {
        a: 1,
>a : Symbol(a, Decl(indexedAccessWithFreshObjectLiteral.ts, 9, 12))

        b: "",
>b : Symbol(b, Decl(indexedAccessWithFreshObjectLiteral.ts, 10, 13))

        c: false
>c : Symbol(c, Decl(indexedAccessWithFreshObjectLiteral.ts, 11, 14))

    }[id]
>id : Symbol(id, Decl(indexedAccessWithFreshObjectLiteral.ts, 8, 14))
}

function baz(id: string) {
>baz : Symbol(baz, Decl(indexedAccessWithFreshObjectLiteral.ts, 14, 1))
>id : Symbol(id, Decl(indexedAccessWithFreshObjectLiteral.ts, 16, 13))

    return ({
        a: 123,
>a : Symbol(a, Decl(indexedAccessWithFreshObjectLiteral.ts, 17, 13))

        b: ""
>b : Symbol(b, Decl(indexedAccessWithFreshObjectLiteral.ts, 18, 15))

    } as Record<string, number | string>)[id]
>Record : Symbol(Record, Decl(lib.es5.d.ts, --, --))
>id : Symbol(id, Decl(indexedAccessWithFreshObjectLiteral.ts, 16, 13))
}

function bazz(id: string) {
>bazz : Symbol(bazz, Decl(indexedAccessWithFreshObjectLiteral.ts, 21, 1))
>id : Symbol(id, Decl(indexedAccessWithFreshObjectLiteral.ts, 23, 14))

    return ({
        a: 123,
>a : Symbol(a, Decl(indexedAccessWithFreshObjectLiteral.ts, 24, 13))

        b: ""
>b : Symbol(b, Decl(indexedAccessWithFreshObjectLiteral.ts, 25, 15))

    } as { [k: string]: string | number})[id]
>k : Symbol(k, Decl(indexedAccessWithFreshObjectLiteral.ts, 27, 12))
>id : Symbol(id, Decl(indexedAccessWithFreshObjectLiteral.ts, 23, 14))
}

