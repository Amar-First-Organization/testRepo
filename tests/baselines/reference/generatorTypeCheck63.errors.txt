tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts(24,61): error TS2345: Argument of type '(state: State) => IterableIterator<State | 1>' is not assignable to parameter of type '(a: StrategicState) => IterableIterator<StrategicState>'.
  Type 'IterableIterator<State | 1>' is not assignable to type 'IterableIterator<StrategicState>'.
    Type 'State | 1' is not assignable to type 'StrategicState'.
      Type '1' has no properties in common with type 'StrategicState'.
tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts(29,70): error TS7025: Generator implicitly has type 'IterableIterator<any>' because it does not yield any values. Consider supplying a return type.
tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts(32,62): error TS2345: Argument of type '(state: State) => IterableIterator<number>' is not assignable to parameter of type '(a: State) => IterableIterator<State>'.
  Type 'IterableIterator<number>' is not assignable to type 'IterableIterator<State>'.
    Type 'number' is not assignable to type 'State'.
tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts(36,62): error TS2345: Argument of type '(state: State) => IterableIterator<State | 1>' is not assignable to parameter of type '(a: StrategicState) => IterableIterator<StrategicState>'.
  Type 'IterableIterator<State | 1>' is not assignable to type 'IterableIterator<StrategicState>'.


==== tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts (4 errors) ====
    export interface StrategicState {
        lastStrategyApplied?: string;
    }
    
    export function strategy<T extends StrategicState>(stratName: string, gen: (a: T) => IterableIterator<T | undefined>): (a: T) => IterableIterator<T | undefined> {
        return function*(state) {
            for (const next of gen(state)) {
                if (next) {
                    next.lastStrategyApplied = stratName;
                }
                yield next;
            }
        }
    }
    
    export interface Strategy<T> {
        (a: T): IterableIterator<T | undefined>;
    }
    
    export interface State extends StrategicState {
        foo: number;
    }
    
    export const Nothing: Strategy<State> = strategy("Nothing", function* (state: State) {
                                                                ~~~~~~~~
!!! error TS2345: Argument of type '(state: {|State|0|}) => {|IterableIterator|1|}<{|State|2|} | 1>' is not assignable to parameter of type '(a: {|StrategicState|3|}) => {|IterableIterator|4|}<{|StrategicState|5|}>'.
!!! error TS2345:   Type '{|IterableIterator|6|}<{|State|7|} | 1>' is not assignable to type '{|IterableIterator|8|}<{|StrategicState|9|}>'.
!!! error TS2345:     Type '{|State|10|} | 1' is not assignable to type '{|StrategicState|11|}'.
!!! error TS2345:       Type '1' has no properties in common with type 'StrategicState'.
!!! annotated symbol 0 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 1 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 2 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 3 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:1:18
!!! annotated symbol 4 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 5 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:1:18
!!! annotated symbol 6 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 7 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 8 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 9 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:1:18
!!! annotated symbol 10 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 11 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:1:18
        yield 1;
        return state;
    });
    
    export const Nothing1: Strategy<State> = strategy("Nothing", function* (state: State) {
                                                                         ~
!!! error TS7025: Generator implicitly has type 'IterableIterator<any>' because it does not yield any values. Consider supplying a return type.
    });
    
    export const Nothing2: Strategy<State> = strategy("Nothing", function* (state: State) {
                                                                 ~~~~~~~~
!!! error TS2345: Argument of type '(state: {|State|0|}) => {|IterableIterator|1|}<number>' is not assignable to parameter of type '(a: {|State|2|}) => {|IterableIterator|3|}<{|State|4|}>'.
!!! error TS2345:   Type '{|IterableIterator|5|}<number>' is not assignable to type '{|IterableIterator|6|}<{|State|7|}>'.
!!! error TS2345:     Type 'number' is not assignable to type '{|State|8|}'.
!!! annotated symbol 0 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 1 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 2 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 3 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 4 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 5 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 6 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 7 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 8 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
        return 1;
    });
    
    export const Nothing3: Strategy<State> = strategy("Nothing", function* (state: State) {
                                                                 ~~~~~~~~
!!! error TS2345: Argument of type '(state: {|State|0|}) => {|IterableIterator|1|}<{|State|2|} | 1>' is not assignable to parameter of type '(a: {|StrategicState|3|}) => {|IterableIterator|4|}<{|StrategicState|5|}>'.
!!! error TS2345:   Type '{|IterableIterator|6|}<{|State|7|} | 1>' is not assignable to type '{|IterableIterator|8|}<{|StrategicState|9|}>'.
!!! annotated symbol 0 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 1 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 2 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 3 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:1:18
!!! annotated symbol 4 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 5 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:1:18
!!! annotated symbol 6 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 7 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:20:18
!!! annotated symbol 8 /.ts/lib.es2015.iterable.d.ts:46:11
!!! annotated symbol 9 tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck63.ts:1:18
        yield state;
        return 1;
    });