=== tests/cases/compiler/defaultBestCommonTypesHaveDecls.ts ===
var obj1: {};
>obj1 : {}

obj1.length;
>obj1.length : any (error)
>obj1 : {}
>length : any (error)

var obj2: Object;
>obj2 : Object

obj2.length;
>obj2.length : any (error)
>obj2 : Object
>length : any (error)

function concat<T>(x: T, y: T): T { return null; }
>concat : <T>(x: T, y: T) => T
>x : T
>y : T
>null : null

var result = concat(1, ""); // error
>result : any (error)
>concat(1, "") : any (error)
>concat : <T>(x: T, y: T) => T
>1 : 1
>"" : ""

var elementCount = result.length; 
>elementCount : any (error)
>result.length : any (error)
>result : any (error)
>length : any (error)

function concat2<T, U>(x: T, y: U) { return null; }
>concat2 : <T, U>(x: T, y: U) => any
>x : T
>y : U
>null : null

var result2 = concat2(1, ""); // result2 will be number|string
>result2 : any
>concat2(1, "") : any
>concat2 : <T, U>(x: T, y: U) => any
>1 : 1
>"" : ""

var elementCount2 = result.length; 
>elementCount2 : any (error)
>result.length : any (error)
>result : any (error)
>length : any (error)


