=== tests/cases/compiler/wrapClass.ts ===
export function wrapClass(param: any) {
>wrapClass : Symbol(wrapClass, Decl(wrapClass.ts, 0, 0))
>param : Symbol(param, Decl(wrapClass.ts, 0, 26))

    return class Wrapped {
>Wrapped : Symbol(Wrapped, Decl(wrapClass.ts, 1, 10))

        foo() {
>foo : Symbol(Wrapped.foo, Decl(wrapClass.ts, 1, 26))

            return param;
>param : Symbol(param, Decl(wrapClass.ts, 0, 26))
        }
    }
}

=== tests/cases/compiler/index.ts ===
import { wrapClass } from "./wrapClass";
>wrapClass : Symbol(wrapClass, Decl(index.ts, 0, 8))

export default wrapClass(0);
>wrapClass : Symbol(wrapClass, Decl(index.ts, 0, 8))

