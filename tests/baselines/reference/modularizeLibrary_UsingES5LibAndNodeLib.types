=== tests/cases/compiler/modularizeLibrary_UsingES5LibAndNodeLib.ts ===

import fs = require("fs");
>fs : typeof fs

import Console = require("console");
>Console : typeof Console

var myLog = new Console.Console(fs.createWriteStream(".\Output"));
>myLog : NodeJS.Console
>new Console.Console(fs.createWriteStream(".\Output")) : NodeJS.Console
>Console.Console : new (stdout: NodeJS.WritableStream, stderr?: NodeJS.WritableStream) => NodeJS.Console
>Console : typeof Console
>Console : new (stdout: NodeJS.WritableStream, stderr?: NodeJS.WritableStream) => NodeJS.Console
>fs.createWriteStream(".\Output") : fs.WriteStream
>fs.createWriteStream : (path: string, options?: { flags?: string; encoding?: string; fd?: number; mode?: number; }) => fs.WriteStream
>fs : typeof fs
>createWriteStream : (path: string, options?: { flags?: string; encoding?: string; fd?: number; mode?: number; }) => fs.WriteStream
>".\Output" : string

myLog.log("Logging to myLog");
>myLog.log("Logging to myLog") : void
>myLog.log : (data?: any, ...optionalParams: any[]) => void
>myLog : NodeJS.Console
>log : (data?: any, ...optionalParams: any[]) => void
>"Logging to myLog" : string

myLog.trace("show me the trace");
>myLog.trace("show me the trace") : void
>myLog.trace : (message: any, ...optionalParams: any[]) => void
>myLog : NodeJS.Console
>trace : (message: any, ...optionalParams: any[]) => void
>"show me the trace" : string

console.log("No Error using node console");
>console.log("No Error using node console") : void
>console.log : (data?: any, ...optionalParams: any[]) => void
>console : typeof Console
>log : (data?: any, ...optionalParams: any[]) => void
>"No Error using node console" : string

console.log(`Current Directory ${process.cwd()}`);
>console.log(`Current Directory ${process.cwd()}`) : void
>console.log : (data?: any, ...optionalParams: any[]) => void
>console : typeof Console
>log : (data?: any, ...optionalParams: any[]) => void
>`Current Directory ${process.cwd()}` : string
>process.cwd() : string
>process.cwd : () => string
>process : NodeJS.Process
>cwd : () => string

console.error("Report error");
>console.error("Report error") : void
>console.error : (data?: any, ...optionalParams: any[]) => void
>console : typeof Console
>error : (data?: any, ...optionalParams: any[]) => void
>"Report error" : string

