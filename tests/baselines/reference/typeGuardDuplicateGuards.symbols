=== tests/cases/conformance/expressions/typeGuards/typeGuardDuplicateGuards.ts ===
var x: string|number;
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))

var r1 = typeof x === "string" && typeof x === "string" ? x.substr : x.toFixed;
>r1 : Symbol(r1, Decl(typeGuardDuplicateGuards.ts, 2, 3))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>x.substr : Symbol(String.substr, Decl(lib.d.ts, --, --))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>substr : Symbol(String.substr, Decl(lib.d.ts, --, --))
>x.toFixed : Symbol(Number.toFixed, Decl(lib.d.ts, --, --))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>toFixed : Symbol(Number.toFixed, Decl(lib.d.ts, --, --))

var r2 = !(typeof x === "string" && typeof x === "string") ? x.toFixed : x.substr;
>r2 : Symbol(r2, Decl(typeGuardDuplicateGuards.ts, 4, 3))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>x.toFixed : Symbol(Number.toFixed, Decl(lib.d.ts, --, --))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>toFixed : Symbol(Number.toFixed, Decl(lib.d.ts, --, --))
>x.substr : Symbol(String.substr, Decl(lib.d.ts, --, --))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>substr : Symbol(String.substr, Decl(lib.d.ts, --, --))

var r3 = typeof x === "string" || typeof x === "string" ? x.substr : x.toFixed;
>r3 : Symbol(r3, Decl(typeGuardDuplicateGuards.ts, 6, 3))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>x.substr : Symbol(String.substr, Decl(lib.d.ts, --, --))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>substr : Symbol(String.substr, Decl(lib.d.ts, --, --))
>x.toFixed : Symbol(Number.toFixed, Decl(lib.d.ts, --, --))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>toFixed : Symbol(Number.toFixed, Decl(lib.d.ts, --, --))

var r4 = !(typeof x === "string" || typeof x === "string") ? x.toFixed : x.substr;
>r4 : Symbol(r4, Decl(typeGuardDuplicateGuards.ts, 8, 3))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>x.toFixed : Symbol(Number.toFixed, Decl(lib.d.ts, --, --))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>toFixed : Symbol(Number.toFixed, Decl(lib.d.ts, --, --))
>x.substr : Symbol(String.substr, Decl(lib.d.ts, --, --))
>x : Symbol(x, Decl(typeGuardDuplicateGuards.ts, 0, 3))
>substr : Symbol(String.substr, Decl(lib.d.ts, --, --))

