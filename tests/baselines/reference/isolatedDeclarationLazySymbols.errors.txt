isolatedDeclarationLazySymbols.ts(13,1): error TS9023: Assigning properties to functions without declaring them is not supported with --isolatedDeclarations. Add an explicit declaration for the properties assigned to this function.
isolatedDeclarationLazySymbols.ts(16,5): error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
isolatedDeclarationLazySymbols.ts(21,5): error TS9014: Computed properties must be number or string literals, variables or dotted expressions with --isolatedDeclarations.


==== isolatedDeclarationLazySymbols.ts (3 errors) ====
    export function foo() {
    
    }
    
    const o = {
        ["prop.inner"]: "a",
        prop: {
            inner: "b",
        }
    } as const
    
    foo[o["prop.inner"]] ="A";
    foo[o.prop.inner] = "B";
    ~~~~~~~~~~~~~~~~~
!!! error TS9023: Assigning properties to functions without declaring them is not supported with --isolatedDeclarations. Add an explicit declaration for the properties assigned to this function.
    
    export class Foo {
        [o["prop.inner"]] ="A"
        ~~~~~~~~~~~~~~~~~
!!! error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
        [o.prop.inner] = "B"
    }
    
    export let oo = {
        [o['prop.inner']]:"A",
        ~~~~~~~~~~~~~~~~~
!!! error TS9014: Computed properties must be number or string literals, variables or dotted expressions with --isolatedDeclarations.
!!! related TS9027 isolatedDeclarationLazySymbols.ts:20:12: Add a type annotation to the variable oo.
        [o.prop.inner]: "B",
    }