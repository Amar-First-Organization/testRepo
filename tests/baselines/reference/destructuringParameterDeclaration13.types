//// [tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration13.ts] ////

=== Performance Stats ===
Type Count: 500 -> 1,000

=== destructuringParameterDeclaration13.ts ===
function test1({ a: { b = 1 } } = { a: {} }) {}
>test1 : ({ a: { b } }?: { a: { b?: number | undefined; }; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ a: {} } : { a: {}; }
>          : ^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

test1({ a: { b: 42 } }); // ok
>test1({ a: { b: 42 } }) : void
>                        : ^^^^
>test1 : ({ a: { b } }?: { a: { b?: number | undefined; }; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

function test2({ a: { b, c = 1 } } = { a: { b: 2 } }) {}
>test2 : ({ a: { b, c } }?: { a: { b: number; c?: number | undefined; }; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>c : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ a: { b: 2 } } : { a: { b: number; }; }
>                : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 2 } : { b: number; }
>         : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>2 : 2
>  : ^

test2({ a: { c: 42 } }); // error, missing b
>test2({ a: { c: 42 } }) : void
>                        : ^^^^
>test2 : ({ a: { b, c } }?: { a: { b: number; c?: number | undefined; }; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { c: 42 } } : { a: { c: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { c: number; }
>  : ^^^^^^^^^^^^^^
>{ c: 42 } : { c: number; }
>          : ^^^^^^^^^^^^^^
>c : number
>  : ^^^^^^
>42 : 42
>   : ^^

test2({ a: { b: 100, c: 42 } }); // ok
>test2({ a: { b: 100, c: 42 } }) : void
>                                : ^^^^
>test2 : ({ a: { b, c } }?: { a: { b: number; c?: number | undefined; }; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 100, c: 42 } } : { a: { b: number; c: number; }; }
>                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; c: number; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b: 100, c: 42 } : { b: number; c: number; }
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>100 : 100
>    : ^^^
>c : number
>  : ^^^^^^
>42 : 42
>   : ^^

function test3({ a: { b = 1, c = 2 } } = { a: { b: 3 } }) {}
>test3 : ({ a: { b, c } }?: { a: { b?: number | undefined; c?: number | undefined; }; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>1 : 1
>  : ^
>c : number
>  : ^^^^^^
>2 : 2
>  : ^
>{ a: { b: 3 } } : { a: { b?: number; }; }
>                : ^^^^^^^^^^^^^^^^^^^^^^^
>a : { b?: number; }
>  : ^^^^^^^^^^^^^^^
>{ b: 3 } : { b?: number; }
>         : ^^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>3 : 3
>  : ^

test3({ a: { b: 42 } }); // ok
>test3({ a: { b: 42 } }) : void
>                        : ^^^^
>test3 : ({ a: { b, c } }?: { a: { b?: number | undefined; c?: number | undefined; }; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test3({ a: { c: 42 } }); // ok
>test3({ a: { c: 42 } }) : void
>                        : ^^^^
>test3 : ({ a: { b, c } }?: { a: { b?: number | undefined; c?: number | undefined; }; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { c: 42 } } : { a: { c: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { c: number; }
>  : ^^^^^^^^^^^^^^
>{ c: 42 } : { c: number; }
>          : ^^^^^^^^^^^^^^
>c : number
>  : ^^^^^^
>42 : 42
>   : ^^

function test4({ a: { b } } = { a: {} }) {} // implicit any
>test4 : ({ a: { b } }?: { a: { b?: any; }; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : any
>  : ^^^
>{ a: {} } : { a: {}; }
>          : ^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

test4({ a: { b: 42 } }); // ok (implicit any reported at declaration site)
>test4({ a: { b: 42 } }) : void
>                        : ^^^^
>test4 : ({ a: { b } }?: { a: { b?: any; }; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test4({ a: {} }); // ok
>test4({ a: {} }) : void
>                 : ^^^^
>test4 : ({ a: { b } }?: { a: { b?: any; }; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: {} } : { a: {}; }
>          : ^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

function test5({ a: { b } = { b: 1 } }) {}
>test5 : ({ a: { b } }: { a?: { b: number; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>{ b: 1 } : { b: number; }
>         : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>1 : 1
>  : ^

test5({ a: { b: 42 } }); // ok
>test5({ a: { b: 42 } }) : void
>                        : ^^^^
>test5 : ({ a: { b } }: { a?: { b: number; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test5({ a: {} }); // error, missing b
>test5({ a: {} }) : void
>                 : ^^^^
>test5 : ({ a: { b } }: { a?: { b: number; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: {} } : { a: {}; }
>          : ^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

function test6({ a: { b = 1 } = {} }) {}
>test6 : ({ a: { b } }: { a?: { b?: number | undefined; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>1 : 1
>  : ^
>{} : {}
>   : ^^

test6({ a: { b: 42 } }); // ok
>test6({ a: { b: 42 } }) : void
>                        : ^^^^
>test6 : ({ a: { b } }: { a?: { b?: number | undefined; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test6({ a: {} }); // ok
>test6({ a: {} }) : void
>                 : ^^^^
>test6 : ({ a: { b } }: { a?: { b?: number | undefined; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: {} } : { a: {}; }
>          : ^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

function test7({ a: { b = 1 } = {} } = {}) {}
>test7 : ({ a: { b } }?: { a?: { b?: number | undefined; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>1 : 1
>  : ^
>{} : {}
>   : ^^
>{} : {}
>   : ^^

test7({ a: { b: 42 } }); // ok
>test7({ a: { b: 42 } }) : void
>                        : ^^^^
>test7 : ({ a: { b } }?: { a?: { b?: number | undefined; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test7({ a: {} }); // ok
>test7({ a: {} }) : void
>                 : ^^^^
>test7 : ({ a: { b } }?: { a?: { b?: number | undefined; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: {} } : { a: {}; }
>          : ^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

test7({}); // ok
>test7({}) : void
>          : ^^^^
>test7 : ({ a: { b } }?: { a?: { b?: number | undefined; } | undefined; }) => void
>      : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{} : {}
>   : ^^

function test8({ a: { b, c = 1 } = {} }) {} // implicit any
>test8 : ({ a: { b, c } }: { a?: { b?: any; c?: number | undefined; } | undefined; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : any
>  : ^^^
>c : number
>  : ^^^^^^
>1 : 1
>  : ^
>{} : {}
>   : ^^

test8({ a: { b: 42 } }); // ok (implicit any reported at declaration site)
>test8({ a: { b: 42 } }) : void
>                        : ^^^^
>test8 : ({ a: { b, c } }: { a?: { b?: any; c?: number | undefined; } | undefined; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test8({ a: { b: 42, c: 100 } }); // ok
>test8({ a: { b: 42, c: 100 } }) : void
>                                : ^^^^
>test8 : ({ a: { b, c } }: { a?: { b?: any; c?: number | undefined; } | undefined; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42, c: 100 } } : { a: { b: number; c: number; }; }
>                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; c: number; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b: 42, c: 100 } : { b: number; c: number; }
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^
>c : number
>  : ^^^^^^
>100 : 100
>    : ^^^

function test9({ a: { b, c = 1 } = { b: 2 } }) {}
>test9 : ({ a: { b, c } }: { a?: { b: number; c?: number | undefined; } | undefined; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>c : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ b: 2 } : { b: number; }
>         : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>2 : 2
>  : ^

test9({ a: { b: 42 } }); // ok
>test9({ a: { b: 42 } }) : void
>                        : ^^^^
>test9 : ({ a: { b, c } }: { a?: { b: number; c?: number | undefined; } | undefined; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test9({ a: { b: 42, c: 100 } }); // ok
>test9({ a: { b: 42, c: 100 } }) : void
>                                : ^^^^
>test9 : ({ a: { b, c } }: { a?: { b: number; c?: number | undefined; } | undefined; }) => void
>      : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42, c: 100 } } : { a: { b: number; c: number; }; }
>                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; c: number; }
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b: 42, c: 100 } : { b: number; c: number; }
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^
>c : number
>  : ^^^^^^
>100 : 100
>    : ^^^

function test10({ a = 1 } = { b: 2 }) {} // error, EPC
>test10 : ({ a }?: { b: number; a?: number | undefined; }) => void
>       : ^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ b: 2 } : { b: number; }
>         : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>2 : 2
>  : ^

test10({ a: 42 }); // error, missing b
>test10({ a: 42 }) : void
>                  : ^^^^
>test10 : ({ a }?: { b: number; a?: number | undefined; }) => void
>       : ^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: 42 } : { a: number; }
>          : ^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>42 : 42
>   : ^^

test10({ b: 42 }); // ok
>test10({ b: 42 }) : void
>                  : ^^^^
>test10 : ({ a }?: { b: number; a?: number | undefined; }) => void
>       : ^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test10({ a: 42, b: 100 }); // ok
>test10({ a: 42, b: 100 }) : void
>                          : ^^^^
>test10 : ({ a }?: { b: number; a?: number | undefined; }) => void
>       : ^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: 42, b: 100 } : { a: number; b: number; }
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>a : number
>  : ^^^^^^
>42 : 42
>   : ^^
>b : number
>  : ^^^^^^
>100 : 100
>    : ^^^

function test11({ a: { b = 1 } = { c: 2 } }) {} // error, EPC
>test11 : ({ a: { b } }: { a?: { c: number; b?: number | undefined; } | undefined; }) => void
>       : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>1 : 1
>  : ^
>{ c: 2 } : { c: number; }
>         : ^^^^^^^^^^^^^^
>c : number
>  : ^^^^^^
>2 : 2
>  : ^

test11({ a: { b: 42 } }); // error, missing c
>test11({ a: { b: 42 } }) : void
>                         : ^^^^
>test11 : ({ a: { b } }: { a?: { c: number; b?: number | undefined; } | undefined; }) => void
>       : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test11({ a: { c: 42 } }); // ok
>test11({ a: { c: 42 } }) : void
>                         : ^^^^
>test11 : ({ a: { b } }: { a?: { c: number; b?: number | undefined; } | undefined; }) => void
>       : ^            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { c: 42 } } : { a: { c: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { c: number; }
>  : ^^^^^^^^^^^^^^
>{ c: 42 } : { c: number; }
>          : ^^^^^^^^^^^^^^
>c : number
>  : ^^^^^^
>42 : 42
>   : ^^

function test12({ a: { b = 1 } = {}, c = 2 } = { a: {} }) {}
>test12 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>1 : 1
>  : ^
>{} : {}
>   : ^^
>c : number
>  : ^^^^^^
>2 : 2
>  : ^
>{ a: {} } : { a?: {}; }
>          : ^^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^

test12({ a: { b: 42 } }); // ok
>test12({ a: { b: 42 } }) : void
>                         : ^^^^
>test12 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test12({ a: { b: 42 }, c: 100 }); // ok
>test12({ a: { b: 42 }, c: 100 }) : void
>                                 : ^^^^
>test12 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 }, c: 100 } : { a: { b: number; }; c: number; }
>                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^
>c : number
>  : ^^^^^^
>100 : 100
>    : ^^^

test12({ a: {}, c: 100 }); // ok
>test12({ a: {}, c: 100 }) : void
>                          : ^^^^
>test12 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: {}, c: 100 } : { a: {}; c: number; }
>                  : ^^^^^^^^^^^^^^^^^^^^^
>a : {}
>  : ^^
>{} : {}
>   : ^^
>c : number
>  : ^^^^^^
>100 : 100
>    : ^^^

test12({ c: 100 }); // ok
>test12({ c: 100 }) : void
>                   : ^^^^
>test12 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ c: 100 } : { c: number; }
>           : ^^^^^^^^^^^^^^
>c : number
>  : ^^^^^^
>100 : 100
>    : ^^^

test12({}); // ok
>test12({}) : void
>           : ^^^^
>test12 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{} : {}
>   : ^^

function test13({ a: { b = 1 } = {}, c = 2 } = {}) {}
>test13 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : number
>  : ^^^^^^
>1 : 1
>  : ^
>{} : {}
>   : ^^
>c : number
>  : ^^^^^^
>2 : 2
>  : ^
>{} : {}
>   : ^^

test13({ a: { b: 42 } }); // ok
>test13({ a: { b: 42 } }) : void
>                         : ^^^^
>test13 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ a: { b: 42 } } : { a: { b: number; }; }
>                 : ^^^^^^^^^^^^^^^^^^^^^^
>a : { b: number; }
>  : ^^^^^^^^^^^^^^
>{ b: 42 } : { b: number; }
>          : ^^^^^^^^^^^^^^
>b : number
>  : ^^^^^^
>42 : 42
>   : ^^

test13({ c: 100 }); // ok
>test13({ c: 100 }) : void
>                   : ^^^^
>test13 : ({ a: { b }, c }?: { a?: { b?: number | undefined; } | undefined; c?: number | undefined; }) => void
>       : ^               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>{ c: 100 } : { c: number; }
>           : ^^^^^^^^^^^^^^
>c : number
>  : ^^^^^^
>100 : 100
>    : ^^^

export {};

