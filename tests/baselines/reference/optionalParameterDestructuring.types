=== tests/cases/compiler/optionalParameterDestructuring.ts ===

declare function f1({ a, b }?: { a: number, b: string }): string;
>f1 : ({a, b}?: { a: number; b: string; }) => string
>a : number
>b : string
>a : number
>b : string

function f2({ a, b }: { a: number, b: number } = { a: 0, b: 0 }) {
>f2 : ({a, b}?: { a: number; b: number; }) => void
>a : number
>b : number
>a : number
>b : number
>{ a: 0, b: 0 } : { a: number; b: number; }
>a : number
>0 : number
>b : number
>0 : number
}

// Repro from #8681

interface Type { t: void }
>Type : Type
>t : void

interface QueryMetadata { q: void }
>QueryMetadata : QueryMetadata
>q : void

interface QueryMetadataFactory {
>QueryMetadataFactory : QueryMetadataFactory

    (selector: Type | string, {descendants, read}?: {
>selector : Type | string
>Type : Type
>descendants : boolean
>read : any

        descendants?: boolean;
>descendants : boolean

        read?: any;
>read : any

    }): ParameterDecorator;
>ParameterDecorator : (target: Object, propertyKey: string | symbol, parameterIndex: number) => void

    new (selector: Type | string, {descendants, read}?: {
>selector : Type | string
>Type : Type
>descendants : boolean
>read : any

        descendants?: boolean;
>descendants : boolean

        read?: any;
>read : any

    }): QueryMetadata;
>QueryMetadata : QueryMetadata
}

