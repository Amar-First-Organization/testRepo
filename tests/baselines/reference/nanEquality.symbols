=== tests/cases/compiler/nanEquality.ts ===
declare const x: number;
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))

if (x === NaN) {}
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (NaN === x) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))

if (x == NaN) {}
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (NaN == x) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))

if (x !== NaN) {}
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (NaN !== x) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))

if (x != NaN) {}
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (NaN != x) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))

if (x === ((NaN))) {}
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (((NaN)) === x) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))

if (x !== ((NaN))) {}
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (((NaN)) !== x) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>x : Symbol(x, Decl(nanEquality.ts, 0, 13))

if (NaN === NaN) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (NaN !== NaN) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (NaN == NaN) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

if (NaN != NaN) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))

// ...
declare let y: any;
>y : Symbol(y, Decl(nanEquality.ts, 27, 11))

if (NaN === y[0][1]) {}
>NaN : Symbol(NaN, Decl(lib.es5.d.ts, --, --))
>y : Symbol(y, Decl(nanEquality.ts, 27, 11))

