tests/cases/conformance/expressions/contextualTyping/argumentExpressionContextualTyping.ts(7,5): error TS2345: Argument of type '{ x: (string | number)[]; y: { c: boolean; d: string; e: number; }; }' is not assignable to parameter of type '{ x: [any, any]; y: { c: any; d: any; e: any; }; }'.
  Types of property 'x' are incompatible.
    Type '(string | number)[]' is not assignable to type '[any, any]'.
      Property '0' is missing in type '(string | number)[]'.
tests/cases/conformance/expressions/contextualTyping/argumentExpressionContextualTyping.ts(13,5): error TS2345: Argument of type '(string | number | boolean)[]' is not assignable to parameter of type '[string, number, boolean]'.
  Property '0' is missing in type '(string | number | boolean)[]'.
tests/cases/conformance/expressions/contextualTyping/argumentExpressionContextualTyping.ts(16,5): error TS2345: Argument of type '(string | number | boolean)[]' is not assignable to parameter of type '[string, number, boolean]'.


==== tests/cases/conformance/expressions/contextualTyping/argumentExpressionContextualTyping.ts (3 errors) ====
    function foo({x: [a, b], y: {c, d, e}}) { }
    function bar({x: [a, b = 10], y: {c, d, e = { f:1 }}}) { }
    function baz(x: [string, number, boolean]) { }
    
    var o = { x: ["string", 1], y: { c: true, d: "world", e: 3 } };
    var o1: { x: [string, number], y: { c: boolean, d: string, e: number } } = { x: ["string", 1], y: { c: true, d: "world", e: 3 } };
    foo(o); // error because ["string", 1] has an array type
        ~
!!! error TS2345: Argument of type '{ x: (string | number)[]; y: { c: boolean; d: string; e: number; }; }' is not assignable to parameter of type '{ x: [any, any]; y: { c: any; d: any; e: any; }; }'.
!!! error TS2345:   Types of property 'x' are incompatible.
!!! error TS2345:     Type '(string | number)[]' is not assignable to type '[any, any]'.
!!! error TS2345:       Property '0' is missing in type '(string | number)[]'.
    foo(o1); // not error since contextual type of tuple is applied to ["string", 1]
    foo({ x: ["string", 1], y: { c: true, d: "world", e: 3 } }); // not error
    
    var array = ["string", 1, true];
    var tuple: [string, number, boolean] = ["string", 1, true];
    baz(array);  // error
        ~~~~~
!!! error TS2345: Argument of type '(string | number | boolean)[]' is not assignable to parameter of type '[string, number, boolean]'.
!!! error TS2345:   Property '0' is missing in type '(string | number | boolean)[]'.
    baz(tuple);
    baz(["string", 1, true]);
    baz(["string", 1, true, ...array]);  // error
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(string | number | boolean)[]' is not assignable to parameter of type '[string, number, boolean]'.