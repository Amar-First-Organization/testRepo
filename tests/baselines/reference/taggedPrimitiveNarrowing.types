=== tests/cases/compiler/taggedPrimitiveNarrowing.ts ===
type Hash = string & { __hash: true };
>Hash : Hash
>__hash : true
>true : true

function getHashLength(hash: Hash): number {
>getHashLength : (hash: Hash) => number
>hash : Hash

    if (typeof hash !== "string") {
>typeof hash !== "string" : boolean
>typeof hash : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>hash : Hash
>"string" : "string"

        throw new Error("This doesn't look like a hash");
>new Error("This doesn't look like a hash") : Error
>Error : ErrorConstructor
>"This doesn't look like a hash" : "This doesn't look like a hash"
    }
    return hash.length;
>hash.length : number
>hash : Hash
>length : number
}

