error TS-1: Pre-emit (0) and post-emit (6) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!


!!! error TS-1: Pre-emit (0) and post-emit (6) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!
!!! related TS-1: The excess diagnostics are:
!!! related TS2749 tests/cases/compiler/es6ModuleInternalImport.ts:4:20: 'm.a' refers to a value, but is being used as a type here. Did you mean 'typeof m.a'?
!!! related TS2749 tests/cases/compiler/es6ModuleInternalImport.ts:5:13: 'm.a' refers to a value, but is being used as a type here. Did you mean 'typeof m.a'?
!!! related TS2749 tests/cases/compiler/es6ModuleInternalImport.ts:8:24: 'm.a' refers to a value, but is being used as a type here. Did you mean 'typeof m.a'?
!!! related TS2749 tests/cases/compiler/es6ModuleInternalImport.ts:9:17: 'm.a' refers to a value, but is being used as a type here. Did you mean 'typeof m.a'?
!!! related TS2749 tests/cases/compiler/es6ModuleInternalImport.ts:14:24: 'm.a' refers to a value, but is being used as a type here. Did you mean 'typeof m.a'?
!!! related TS2749 tests/cases/compiler/es6ModuleInternalImport.ts:15:17: 'm.a' refers to a value, but is being used as a type here. Did you mean 'typeof m.a'?
==== tests/cases/compiler/es6ModuleInternalImport.ts (0 errors) ====
    export module m {
        export var a = 10;
    }
    export import a1 = m.a;
    import a2 = m.a;
    var x = a1 + a2;
    export module m1 {
        export import a3 = m.a;
        import a4 = m.a;
        var x = a1 + a2;
        var x2 = a3 + a4;
    }
    module m2 {
        export import a3 = m.a;
        import a4 = m.a;
        var x = a1 + a2;
        var x2 = a3 + a4;
        var x4 = m1.a3 + m2.a3;
    }