=== tests/cases/conformance/es6/spread/objectLiteralSpreadWIthDuplicateIdentifier.ts ===
interface Point { x: number; y?: number }
>Point : Symbol(Point, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 0, 0))
>x : Symbol(Point.x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 0, 17))
>y : Symbol(Point.y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 0, 28))

const x = 1
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 1, 5))

const y = 1
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 2, 5))

const foo: Point = { x: 1, y: 2 }
>foo : Symbol(foo, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 3, 5))
>Point : Symbol(Point, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 0, 0))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 3, 20))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 3, 26))

const a: Point = { y, y: 1, ...foo}
>a : Symbol(a, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 4, 5))
>Point : Symbol(Point, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 0, 0))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 4, 18), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 4, 21))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 4, 18), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 4, 21))
>foo : Symbol(foo, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 3, 5))

const b: Point = { x, x: 1, ...foo}
>b : Symbol(b, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 5, 5))
>Point : Symbol(Point, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 0, 0))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 5, 18), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 5, 21))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 5, 18), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 5, 21))
>foo : Symbol(foo, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 3, 5))

const c: Point = { y, y: 1, ...{ x: 1, y: 1}}
>c : Symbol(c, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 6, 5))
>Point : Symbol(Point, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 0, 0))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 6, 18), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 6, 21))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 6, 18), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 6, 21))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 6, 32))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 6, 38))

const d: Point = { x, x: 1, ...{ x: 1, y: 1}}
>d : Symbol(d, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 5))
>Point : Symbol(Point, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 0, 0))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 18), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 21))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 18), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 21))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 32))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 38))


class PointBar { x: number; y?: number }
>PointBar : Symbol(PointBar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 45))
>x : Symbol(PointBar.x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 10, 16))
>y : Symbol(PointBar.y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 10, 27))

const bar: PointBar = { x: 1, y: 2 }
>bar : Symbol(bar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 11, 5))
>PointBar : Symbol(PointBar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 45))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 11, 23))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 11, 29))

const e: PointBar = { y, y: 1, ...bar}
>e : Symbol(e, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 12, 5))
>PointBar : Symbol(PointBar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 45))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 12, 21), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 12, 24))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 12, 21), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 12, 24))
>bar : Symbol(bar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 11, 5))

const f: PointBar = { x, x: 1, ...bar}
>f : Symbol(f, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 13, 5))
>PointBar : Symbol(PointBar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 45))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 13, 21), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 13, 24))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 13, 21), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 13, 24))
>bar : Symbol(bar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 11, 5))

const g: PointBar = { y, y: 1, ...{ x: 1, y: 1}}
>g : Symbol(g, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 14, 5))
>PointBar : Symbol(PointBar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 45))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 14, 21), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 14, 24))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 14, 21), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 14, 24))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 14, 35))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 14, 41))

const h: PointBar = { x, x: 1, ...{ x: 1, y: 1}}
>h : Symbol(h, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 15, 5))
>PointBar : Symbol(PointBar, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 7, 45))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 15, 21), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 15, 24))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 15, 21), Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 15, 24))
>x : Symbol(x, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 15, 35))
>y : Symbol(y, Decl(objectLiteralSpreadWIthDuplicateIdentifier.ts, 15, 41))

