=== tests/cases/conformance/es2017/useObjectValuesAndEntries4.ts ===

var o = { a: 1, b: 2 };
>o : { a: number; b: number; }
>{ a: 1, b: 2 } : { a: number; b: number; }
>a : number
>1 : 1
>b : number
>2 : 2

for (var x of Object.values(o)) {
>x : number
>Object.values(o) : number[]
>Object.values : { <T>(o: { [s: string]: T; }): T[]; (o: any): any[]; }
>Object : ObjectConstructor
>values : { <T>(o: { [s: string]: T; }): T[]; (o: any): any[]; }
>o : { a: number; b: number; }

    let y = x;
>y : number
>x : number
}

var entries = Object.entries(o);
>entries : [("a" & string) | ("b" & string), number][]
>Object.entries(o) : [("a" & string) | ("b" & string), number][]
>Object.entries : { <T>(o: T[]): [string, T][]; <T extends { [key: string]: any; }, K extends keyof T>(o: T): [keyof T & string, T[K]][]; (o: any): [string, any][]; }
>Object : ObjectConstructor
>entries : { <T>(o: T[]): [string, T][]; <T extends { [key: string]: any; }, K extends keyof T>(o: T): [keyof T & string, T[K]][]; (o: any): [string, any][]; }
>o : { a: number; b: number; }

