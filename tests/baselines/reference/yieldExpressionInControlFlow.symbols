=== tests/cases/conformance/es6/yieldExpressions/a.js ===
function* f() {
>f : Symbol(f, Decl(a.js, 0, 0))

    var o
>o : Symbol(o, Decl(a.js, 1, 7))

    while (true) {
        o = yield o
>o : Symbol(o, Decl(a.js, 1, 7))
>o : Symbol(o, Decl(a.js, 1, 7))
    }
}

=== tests/cases/conformance/es6/yieldExpressions/b.ts ===
function* g() {
>g : Symbol(g, Decl(b.ts, 0, 0))

    var o = []
>o : Symbol(o, Decl(b.ts, 1, 7))

    while (true) {
        o = yield* o
>o : Symbol(o, Decl(b.ts, 1, 7))
>o : Symbol(o, Decl(b.ts, 1, 7))
    }
}

