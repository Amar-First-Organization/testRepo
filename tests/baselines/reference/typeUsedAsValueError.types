=== tests/cases/compiler/typeUsedAsValueError.ts ===
interface Interface {

}

class SomeClass {
>SomeClass : SomeClass

}

type TypeAliasForSomeClass = SomeClass;
>TypeAliasForSomeClass : SomeClass

type someType = { x: number };
>someType : someType
>x : number

function acceptsSomeType(a: someType) {
>acceptsSomeType : (a: someType) => void
>a : someType

}

let one = Interface;
>one : any (error)
>Interface : any (error)

let two = InterfaceNotFound;
>two : any (error)
>InterfaceNotFound : any (error)

let three = TypeAliasForSomeClass;
>three : any (error)
>TypeAliasForSomeClass : any (error)

let four = new TypeAliasForSomeClass();
>four : any (error)
>new TypeAliasForSomeClass() : any (error)
>TypeAliasForSomeClass : any (error)

let five = new TypeAliasForSomeClassNotFound();
>five : any (error)
>new TypeAliasForSomeClassNotFound() : any (error)
>TypeAliasForSomeClassNotFound : any (error)

let six = someType;
>six : any (error)
>someType : any (error)

acceptsSomeType(someType);
>acceptsSomeType(someType) : void
>acceptsSomeType : (a: someType) => void
>someType : any (error)

acceptsSomeType(someTypeNotFound);
>acceptsSomeType(someTypeNotFound) : void
>acceptsSomeType : (a: someType) => void
>someTypeNotFound : any (error)

