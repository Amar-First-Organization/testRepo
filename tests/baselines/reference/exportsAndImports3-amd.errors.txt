error TS-1: Pre-emit (0) and post-emit (1) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!


!!! error TS-1: Pre-emit (0) and post-emit (1) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!
!!! related TS-1: The excess diagnostics are:
!!! related TS2749 tests/cases/conformance/es6/modules/t1.ts:21:19: 'M.x' refers to a value, but is being used as a type here. Did you mean 'typeof M.x'?
==== tests/cases/conformance/es6/modules/t1.ts (0 errors) ====
    export var v = 1;
    export function f() { }
    export class C {
    }
    export interface I {
    }
    export enum E {
        A, B, C
    }
    export const enum D {
        A, B, C
    }
    export module M {
        export var x;
    }
    export module N {
        export interface I {
        }
    }
    export type T = number;
    export import a = M.x;
    
    export { v as v1, f as f1, C as C1, I as I1, E as E1, D as D1, M as M1, N as N1, T as T1, a as a1 };
    
==== tests/cases/conformance/es6/modules/t2.ts (0 errors) ====
    export { v1 as v, f1 as f, C1 as C, I1 as I, E1 as E, D1 as D, M1 as M, N1 as N, T1 as T, a1 as a } from "./t1";
    
==== tests/cases/conformance/es6/modules/t3.ts (0 errors) ====
    import { v1 as v, f1 as f, C1 as C, I1 as I, E1 as E, D1 as D, M1 as M, N1 as N, T1 as T, a1 as a } from "./t1";
    export { v, f, C, I, E, D, M, N, T, a };
    