tests/cases/compiler/monorepo/core/src/application.ts(1,29): error TS2307: Cannot find module '@loopback/context' or its corresponding type declarations.
tests/cases/compiler/monorepo/core/src/usage.ts(2,28): error TS2307: Cannot find module '@loopback/context' or its corresponding type declarations.


==== tests/cases/compiler/monorepo/core/tsconfig.json (0 errors) ====
    {
      "compilerOptions": {
        "rootDir": ".",
        "declaration": true,
        "outDir": "./dist"
      }
    }
==== tests/cases/compiler/monorepo/core/src/application.ts (1 errors) ====
    import { Constructor } from "@loopback/context";
                                ~~~~~~~~~~~~~~~~~~~
!!! error TS2307: Cannot find module '@loopback/context' or its corresponding type declarations.
    export type ControllerClass = Constructor<any>;
    
==== tests/cases/compiler/monorepo/core/src/usage.ts (1 errors) ====
    import { ControllerClass } from './application';
    import { BindingKey } from '@loopback/context';
                               ~~~~~~~~~~~~~~~~~~~
!!! error TS2307: Cannot find module '@loopback/context' or its corresponding type declarations.
    
    export const CONTROLLER_CLASS = BindingKey.create<ControllerClass>(null as any); // line in question
    
==== tests/cases/compiler/monorepo/context/src/value-promise.d.ts (0 errors) ====
    export type Constructor<T> = (...args: any[]) => T;
==== tests/cases/compiler/monorepo/context/src/bindingkey.d.ts (0 errors) ====
    import { Constructor } from "./value-promise"
    export declare class BindingKey<T> {
      readonly __type: T;
      static create<T extends Constructor<any>>(ctor: T): BindingKey<T>;
    }
    
==== tests/cases/compiler/monorepo/context/index.d.ts (0 errors) ====
    export * from "./src/value-promise";
    export * from "./src/bindingkey";
    