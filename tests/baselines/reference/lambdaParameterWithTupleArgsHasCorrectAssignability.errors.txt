lambdaParameterWithTupleArgsHasCorrectAssignability.ts(17,14): error TS2345: Argument of type 'GenericClass<[str: string]>' is not assignable to parameter of type 'GenericClass<[string, boolean]>'.
  Type '[string, boolean]' is not assignable to type '[str: string]'.
    Source has 2 element(s) but target allows only 1.


==== lambdaParameterWithTupleArgsHasCorrectAssignability.ts (1 errors) ====
    type MyTupleItem = {};
    type MyTuple = [MyTupleItem, ...MyTupleItem[]];
    
    type GenericFunction<T extends MyTuple> = (...fromArgs: T) => void;
    
    class GenericClass<T extends MyTuple> {
        from: GenericFunction<T> | undefined;
    }
    
    function createClass<T extends MyTuple>(f: GenericFunction<T>): GenericClass<T> {
        return new GenericClass<T>(/* ... use f */);
    }
    
    function consumeClass(c: GenericClass<[string, boolean]>) { }
    
    // should work
    consumeClass(createClass(str => console.log(str.length)));
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type 'GenericClass<[str: string]>' is not assignable to parameter of type 'GenericClass<[string, boolean]>'.
!!! error TS2345:   Type '[string, boolean]' is not assignable to type '[str: string]'.
!!! error TS2345:     Source has 2 element(s) but target allows only 1.
    
    // should work
    consumeClass(createClass((str, _unused_num) => console.log(str.length)));
    