cjs/index.mts(2,6): error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
cjs/index.mts(4,7): error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
cjs/secondary.cts(2,6): error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
cjs/secondary.cts(4,7): error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
esm/index.mts(2,6): error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
esm/index.mts(4,7): error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
esm/secondary.cts(2,6): error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
esm/secondary.cts(4,7): error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.


==== cjs/package.json (0 errors) ====
    { "type": "commonjs" }
==== cjs/foo.json (0 errors) ====
    ["foo", "bar", "baz"]
==== cjs/foo.d.json.ts (0 errors) ====
    declare const data: ["foo", "bar", "baz"];
    export = data;
==== cjs/index.mts (2 errors) ====
    import data from "./foo.json" with { type: "json" };
    data.default; // foo.d.json.ts is cjs format - error (`default` is whole file, file has no `default` member)
         ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
    import data2 = require("./foo.json");
    data2.default; // `data2` is the whole json object, no `default`
          ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
==== cjs/secondary.cts (2 errors) ====
    import data from "./foo.json";
    data.default; // error (cjs format `.d.json.ts`, export= object is require result)
         ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
    import data2 = require("./foo.json");
    data2.default; // `data2` is the whole json object, no `default`
          ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
==== esm/package.json (0 errors) ====
    { "type": "module" }
==== esm/foo.json (0 errors) ====
    ["foo", "bar", "baz"]
==== esm/foo.d.json.ts (0 errors) ====
    declare const data: ["foo", "bar", "baz"];
    export = data;
==== esm/index.mts (2 errors) ====
    import data from "./foo.json" with { type: "json" };
    data.default; // foo.d.json.ts is cjs format despite package - error! (default import is already the whole json object)
         ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
    import data2 = require("./foo.json");
    data2.default; // `data2` is the whole json object, no `default`
          ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
==== esm/secondary.cts (2 errors) ====
    import data from "./foo.json";
    data.default; // `export=` object is the whole `require` result, hoisted to `default` by interop helper, no 2nd default
         ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
    import data2 = require("./foo.json");
    data2.default; // `data2` is the whole json object, no `default`
          ~~~~~~~
!!! error TS2339: Property 'default' does not exist on type '["foo", "bar", "baz"]'.
==== root.mts (0 errors) ====
    import "./cjs/index.mjs";
    import "./cjs/secondary.mjs";
    import "./mjs/index.mjs";
    import "./mjs/secondary.mjs";
    