=== tests/cases/compiler/destructureGenerics.ts ===
declare function f<T extends any[]>(...args: T): T;
>f : <T extends any[]>(...args: T) => T
>T : T
>args : T
>T : T
>T : T

var x = f(1,2);
>x : [1, 2]
>f(1,2) : [1, 2]
>f : <T extends any[]>(...args: T) => T
>1 : 1
>2 : 2

var x: [1, 2];
>x : [1, 2]

declare function g<T extends [number, number]>(...args: T): T;
>g : <T extends [number, number]>(...args: T) => T
>T : T
>args : T
>T : T
>T : T

var z = g(1,2);
>z : [1, 2]
>g(1,2) : [1, 2]
>g : <T extends [number, number]>(...args: T) => T
>1 : 1
>2 : 2

var z: [1,2];
>z : [1, 2]

declare function h<T>(...args: T[]): T;
>h : <T>(...args: T[]) => T
>T : T
>args : T[]
>T : T
>T : T

var b = h(1,2,3);
>b : number
>h(1,2,3) : 1 | 2 | 3
>h : <T>(...args: T[]) => T
>1 : 1
>2 : 2
>3 : 3

var b: number;
>b : number

