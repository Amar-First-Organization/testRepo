bad.ts(1,10): error TS1286: ESM syntax is not allowed in a CommonJS module when 'verbatimModuleSyntax' is enabled.
bad.ts(1,10): error TS1484: 'Date' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
bad.ts(1,10): error TS2866: Import 'Date' conflicts with global value used in this file, so must be declared with a type-only import when 'isolatedModules' is enabled.
bad.ts(1,16): error TS1286: ESM syntax is not allowed in a CommonJS module when 'verbatimModuleSyntax' is enabled.
bad.ts(1,16): error TS1484: 'Event' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
bad.ts(1,16): error TS2866: Import 'Event' conflicts with global value used in this file, so must be declared with a type-only import when 'isolatedModules' is enabled.


==== ./types.ts (0 errors) ====
    export interface Date {
        day: number;
        month: number;
        year: number;
    }
    
    export namespace Event {
        export type T = any;
    }
    
==== ./bad.ts (6 errors) ====
    import { Date, Event } from './types';
             ~~~~
!!! error TS1286: ESM syntax is not allowed in a CommonJS module when 'verbatimModuleSyntax' is enabled.
             ~~~~
!!! error TS1484: 'Date' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
             ~~~~
!!! error TS2866: Import 'Date' conflicts with global value used in this file, so must be declared with a type-only import when 'isolatedModules' is enabled.
                   ~~~~~
!!! error TS1286: ESM syntax is not allowed in a CommonJS module when 'verbatimModuleSyntax' is enabled.
                   ~~~~~
!!! error TS1484: 'Event' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.
                   ~~~~~
!!! error TS2866: Import 'Event' conflicts with global value used in this file, so must be declared with a type-only import when 'isolatedModules' is enabled.
    function foo(a: Date) {
        const b = new Date(a.year, a.month, a.day);
        return b.getTime();
    }
    function bar() {
        return new Event('bar') as Event.T;
    }
    
==== ./good.ts (0 errors) ====
    import type { Date, Event } from './types';
    function foo(a: Date) {
        const b = new Date(a.year, a.month, a.day);
        return b.getTime();
    }
    function bar() {
        return new Event('bar') as Event.T;
    }
    