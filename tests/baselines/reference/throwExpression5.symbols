//// [tests/cases/conformance/throwExpression/throwExpression5.ts] ////

=== throwExpression5.ts ===
function t1(a: number, b: number, c: number) {
>t1 : Symbol(t1, Decl(throwExpression5.ts, 0, 0))
>a : Symbol(a, Decl(throwExpression5.ts, 0, 12))
>b : Symbol(b, Decl(throwExpression5.ts, 0, 22))
>c : Symbol(c, Decl(throwExpression5.ts, 0, 33))

    (throw a ? b : c);
>b : Symbol(b, Decl(throwExpression5.ts, 0, 22))
>c : Symbol(c, Decl(throwExpression5.ts, 0, 33))
}

function t2(a: number, b: number) {
>t2 : Symbol(t2, Decl(throwExpression5.ts, 2, 1))
>a : Symbol(a, Decl(throwExpression5.ts, 4, 12))
>b : Symbol(b, Decl(throwExpression5.ts, 4, 22))

    (throw a, b);
>b : Symbol(b, Decl(throwExpression5.ts, 4, 22))
}

function t3(a: number, b: number) {
>t3 : Symbol(t3, Decl(throwExpression5.ts, 6, 1))
>a : Symbol(a, Decl(throwExpression5.ts, 8, 12))
>b : Symbol(b, Decl(throwExpression5.ts, 8, 22))

    (throw a && b);
>b : Symbol(b, Decl(throwExpression5.ts, 8, 22))
}

function t4(a: number, b: number) {
>t4 : Symbol(t4, Decl(throwExpression5.ts, 10, 1))
>a : Symbol(a, Decl(throwExpression5.ts, 12, 12))
>b : Symbol(b, Decl(throwExpression5.ts, 12, 22))

    (throw a || b);
>b : Symbol(b, Decl(throwExpression5.ts, 12, 22))
}

function t5(a: number, b: number, c: number) {
>t5 : Symbol(t5, Decl(throwExpression5.ts, 14, 1))
>a : Symbol(a, Decl(throwExpression5.ts, 16, 12))
>b : Symbol(b, Decl(throwExpression5.ts, 16, 22))
>c : Symbol(c, Decl(throwExpression5.ts, 16, 33))

    (throw (a ? b : c));
>a : Symbol(a, Decl(throwExpression5.ts, 16, 12))
>b : Symbol(b, Decl(throwExpression5.ts, 16, 22))
>c : Symbol(c, Decl(throwExpression5.ts, 16, 33))
}

