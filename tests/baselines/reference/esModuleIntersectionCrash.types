=== tests/cases/compiler/mod.d.ts ===
export = modObj;
>modObj : import("tests/cases/compiler/mod").A & import("tests/cases/compiler/mod").B

declare const modObj: modObj.A & modObj.B;
>modObj : import("tests/cases/compiler/mod").A & import("tests/cases/compiler/mod").B
>modObj : any
>A : import("tests/cases/compiler/mod").A
>modObj : any
>B : import("tests/cases/compiler/mod").B

declare namespace modObj {
>modObj : A & B

    interface A { (): void; a: string; }
>A : A
>a : string

    interface B { (x: string): void; b: string; }
>B : B
>x : string
>b : string
}
=== tests/cases/compiler/idx.ts ===
import * as mod from "./mod";
>mod : { default: mod.A & mod.B; a: string; b: string; }

mod.a;
>mod.a : string
>mod : { default: mod.A & mod.B; a: string; b: string; }
>a : string

mod.b;
>mod.b : string
>mod : { default: mod.A & mod.B; a: string; b: string; }
>b : string

