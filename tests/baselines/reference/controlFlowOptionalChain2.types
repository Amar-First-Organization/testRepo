=== tests/cases/conformance/controlFlow/controlFlowOptionalChain2.ts ===
type A = {
>A : A

  type: 'A';
>type : "A"

  name: string;
>name : string
}

type B = {
>B : B

  type: 'B';
>type : "B"
}

function funcTwo(arg: A | B | undefined) {
>funcTwo : (arg: A | B | undefined) => string | undefined
>arg : A | B | undefined

  if (arg?.type === 'B') {
>arg?.type === 'B' : boolean
>arg?.type : "A" | "B" | undefined
>arg : A | B | undefined
>type : "A" | "B" | undefined
>'B' : "B"

    // arg; // `B`
    return 'B';
>'B' : "B"
  }

  arg; // `A | B | undefined`
>arg : A | undefined

  // arg cannot be of type B here
  const errorTwo = arg?.name; // unexpected error
>errorTwo : string | undefined
>arg?.name : string | undefined
>arg : A | undefined
>name : string | undefined

  return errorTwo;
>errorTwo : string | undefined
}

