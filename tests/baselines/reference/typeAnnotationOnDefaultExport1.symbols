=== /a.ts ===
export default: number = 1;
No type information for this code.
No type information for this code.=== /b.ts ===
export default: number = "";
No type information for this code.
No type information for this code.=== /c.ts ===
export default: number = {};
No type information for this code.
No type information for this code.=== /d.ts ===
interface I {
>I : Symbol(I, Decl(d.ts, 0, 0))

    a: number;
>a : Symbol(I.a, Decl(d.ts, 0, 13))

    b: string;
>b : Symbol(I.b, Decl(d.ts, 1, 14))
}
export default: I = {};
>I : Symbol(I, Decl(d.ts, 0, 0))

=== /e.ts ===
export default: number[] = [];
No type information for this code.
No type information for this code.=== /f.ts ===
export default: number[] = [""];
No type information for this code.
No type information for this code.=== /g.ts ===
const a = [""];
>a : Symbol(a, Decl(g.ts, 0, 5))

export default: number[] = a;
>a : Symbol(a, Decl(g.ts, 0, 5))

=== /h.ts ===
export default: number[];
No type information for this code.
No type information for this code.