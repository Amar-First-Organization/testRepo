=== tests/cases/conformance/statements/breakStatements/forInBreakStatements.ts ===
for(var x in {}) {
>x : string
>{} : {}

    break;
}

ONE:
>ONE : any (error)

for(var x in {}) {
>x : string
>{} : {}

    break ONE;
>ONE : any (error)
}

TWO:
>TWO : any (error)

THREE:
>THREE : any (error)

for(var x in {}) {
>x : string
>{} : {}

    break THREE;
>THREE : any (error)
}

FOUR:
>FOUR : any (error)

for(var x in {}) {
>x : string
>{} : {}

    FIVE:
>FIVE : any (error)

    for(var x in {}) {
>x : string
>{} : {}

        break FOUR;
>FOUR : any (error)
    }
}

for(var x in {}) {
>x : string
>{} : {}

    SIX:
>SIX : any (error)

    for(var x in {}) break SIX;
>x : string
>{} : {}
>SIX : any (error)
}

SEVEN:
>SEVEN : any (error)

for (var x in {}) for (var x in {}) for (var x in {}) break SEVEN;
>x : string
>{} : {}
>x : string
>{} : {}
>x : string
>{} : {}
>SEVEN : any (error)

EIGHT:
>EIGHT : any (error)

for (var x in {}){
>x : string
>{} : {}

    var fn = function () { }
>fn : () => void
>function () { } : () => void

    break EIGHT;
>EIGHT : any (error)
}

