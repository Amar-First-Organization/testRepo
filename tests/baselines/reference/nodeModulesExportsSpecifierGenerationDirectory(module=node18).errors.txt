error TS5109: Option 'moduleResolution' must be set to 'Node18' (or left unspecified) when option 'module' is set to 'Node18'.
index.ts(2,23): error TS2792: Cannot find module 'inner/other'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
index.ts(3,19): error TS1378: Top-level 'await' expressions are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', 'node18', 'nodenext', or 'preserve', and the 'target' option is set to 'es2017' or higher.
index.ts(3,32): error TS2792: Cannot find module 'inner/index.js'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?


!!! error TS5109: Option 'moduleResolution' must be set to 'Node18' (or left unspecified) when option 'module' is set to 'Node18'.
==== index.ts (3 errors) ====
    // esm format file
    import { Thing } from "inner/other";
                          ~~~~~~~~~~~~~
!!! error TS2792: Cannot find module 'inner/other'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
    export const a = (await import("inner/index.js")).x();
                      ~~~~~
!!! error TS1378: Top-level 'await' expressions are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', 'node18', 'nodenext', or 'preserve', and the 'target' option is set to 'es2017' or higher.
                                   ~~~~~~~~~~~~~~~~
!!! error TS2792: Cannot find module 'inner/index.js'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
==== node_modules/inner/index.d.ts (0 errors) ====
    // esm format file
    export { x } from "./other.js";
==== node_modules/inner/other.d.ts (0 errors) ====
    // esm format file
    export interface Thing {}
    export const x: () => Thing;
==== package.json (0 errors) ====
    {
        "name": "package",
        "private": true,
        "type": "module",
        "exports": "./index.js"
    }
==== node_modules/inner/package.json (0 errors) ====
    {
        "name": "inner",
        "private": true,
        "type": "module",
        "exports": {
            "./": "./"
        }
    }