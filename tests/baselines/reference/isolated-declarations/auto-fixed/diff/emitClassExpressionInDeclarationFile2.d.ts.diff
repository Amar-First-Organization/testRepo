// [[Reason: Can't fix class expressions]] ////

//// [tests/cases/compiler/emitClassExpressionInDeclarationFile2.ts] ////

===================================================================
--- TSC	declarations
+++ DTE	declarations
@@ -1,9 +1,41 @@
 
+
+//// [emitClassExpressionInDeclarationFile2.d.ts]
+export declare var noPrivates: invalid;
+export declare class FooItem {
+    foo(): void;
+    name?: string;
+    private property;
+}
+export type Constructor<T> = new (...args: any[]) => T;
+export declare function WithTags<T extends Constructor<FooItem>>(Base: T): {
+    new (...args: any[]): {
+        tags(): void;
+        foo(): void;
+        name?: string;
+        property: string;
+    };
+    getTags(): void;
+} & T;
+declare const TestBase: {
+    new (...args: any[]): {
+        tags(): void;
+        foo(): void;
+        name?: string;
+        property: string;
+    };
+    getTags(): void;
+} & typeof FooItem;
+export declare class Test extends TestBase {
+}
+export {};
+//# sourceMappingURL=emitClassExpressionInDeclarationFile2.d.ts.map
 /// [Errors] ////
 
 emitClassExpressionInDeclarationFile2.ts(1,12): error TS4094: Property 'p' of exported class expression may not be private or protected.
 emitClassExpressionInDeclarationFile2.ts(1,12): error TS4094: Property 'ps' of exported class expression may not be private or protected.
+emitClassExpressionInDeclarationFile2.ts(1,25): error TS9022: Inference from class expressions is not supported with --isolatedDeclarations.
 emitClassExpressionInDeclarationFile2.ts(25,5): error TS2322: Type '{ new (...args: any[]): (Anonymous class); prototype: WithTags<any>.(Anonymous class); getTags(): void; } & T' is not assignable to type '{ new (...args: any[]): { tags(): void; foo(): void; name?: string; property: string; }; getTags(): void; } & T'.
   Type '{ new (...args: any[]): (Anonymous class); prototype: WithTags<any>.(Anonymous class); getTags(): void; } & T' is not assignable to type '{ new (...args: any[]): { tags(): void; foo(): void; name?: string; property: string; }; getTags(): void; }'.
     Type '(Anonymous class) & FooItem' is not assignable to type '{ tags(): void; foo(): void; name?: string; property: string; }'.
       Property 'property' is private in type '(Anonymous class) & FooItem' but not in type '{ tags(): void; foo(): void; name?: string; property: string; }'.
@@ -11,14 +43,16 @@
   The intersection '{ tags(): void; foo(): void; name?: string; property: string; } & FooItem' was reduced to 'never' because property 'property' exists in multiple constituents and is private in some.
 emitClassExpressionInDeclarationFile2.ts(45,6): error TS2339: Property 'tags' does not exist on type 'Test'.
 
 
-==== emitClassExpressionInDeclarationFile2.ts (5 errors) ====
+==== emitClassExpressionInDeclarationFile2.ts (6 errors) ====
     export var noPrivates = class {
                ~~~~~~~~~~
 !!! error TS4094: Property 'p' of exported class expression may not be private or protected.
                ~~~~~~~~~~
 !!! error TS4094: Property 'ps' of exported class expression may not be private or protected.
+                            ~~~~~
+!!! error TS9022: Inference from class expressions is not supported with --isolatedDeclarations.
         static getTags() { }
         tags() { }
         private static ps = -1
         private p = 12
