tests/cases/compiler/file1.ts(15,9): error TS7062: A Promise must be awaited, returned, or explicitly ignored with the 'void' operator


==== tests/cases/compiler/file1.ts (1 errors) ====
    "use strict";
    import * as MyModule from "./mymodule";
    
    export class BrokenClass {
    
      constructor() {}
    
      public brokenMethod(field: string, value: string) {
      return new Promise<Array<MyModule.MyModel>>((resolve, reject) => {
    
        let result: Array<MyModule.MyModel> = [];
    
        let populateItems = (order) => {
          return new Promise((resolve, reject) => {
            this.doStuff(order.id)
            ~~~~~~~~~~~~~~~~~~~~~~
              .then((items) => {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                order.items = items;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                resolve(order);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
              });
    ~~~~~~~~~~~~
!!! error TS7062: A Promise must be awaited, returned, or explicitly ignored with the 'void' operator
          });
        };
    
        return Promise.all(result.map(populateItems))
          .then((orders: Array<MyModule.MyModel>) => {
            resolve(orders);
          });
        });
      }
    
      public async doStuff(id: number) {
        return;
      }
    }
    
==== tests/cases/compiler/mymodule.ts (0 errors) ====
    export interface MyModel {
        id: number;
    }