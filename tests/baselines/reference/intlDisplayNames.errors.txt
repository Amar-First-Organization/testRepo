intlDisplayNames.ts(1,1): error TS2554: Expected 2 arguments, but got 0.
intlDisplayNames.ts(2,1): error TS2554: Expected 2 arguments, but got 1.
intlDisplayNames.ts(3,29): error TS2345: Argument of type '{}' is not assignable to parameter of type 'DisplayNamesOptions'.
  Property 'type' is missing in type '{}' but required in type 'DisplayNamesOptions'.


==== intlDisplayNames.ts (3 errors) ====
    new Intl.DisplayNames(); // TypeError: invalid_argument
    ~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2554: Expected 2 arguments, but got 0.
!!! related TS6210 lib.es2021.intl.d.ts:--:--: An argument for 'locales' was not provided.
    new Intl.DisplayNames('en'); // TypeError: invalid_argument
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2554: Expected 2 arguments, but got 1.
!!! related TS6210 lib.es2021.intl.d.ts:--:--: An argument for 'options' was not provided.
    new Intl.DisplayNames('en', {}); // TypeError: invalid_argument
                                ~~
!!! error TS2345: Argument of type '{}' is not assignable to parameter of type 'DisplayNamesOptions'.
!!! error TS2345:   Property 'type' is missing in type '{}' but required in type 'DisplayNamesOptions'.
!!! related TS2728 lib.es2021.intl.d.ts:--:--: 'type' is declared here.
    console.log((new Intl.DisplayNames(undefined, {type: 'language'})).of('en-GB')); // "British English"
    
    const localesArg = ["es-ES", new Intl.Locale("en-US")];
    console.log((new Intl.DisplayNames(localesArg, {type: 'language'})).resolvedOptions().locale); // "es-ES"
    console.log(Intl.DisplayNames.supportedLocalesOf(localesArg)); // ["es-ES", "en-US"]
    console.log(Intl.DisplayNames.supportedLocalesOf()); // []
    console.log(Intl.DisplayNames.supportedLocalesOf(localesArg, {})); // ["es-ES", "en-US"]
    