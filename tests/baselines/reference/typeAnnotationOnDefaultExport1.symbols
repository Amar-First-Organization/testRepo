=== /a.ts ===

export default: number = 1;

=== /b.ts ===

export default: number = "";

=== /c.ts ===

export default: number = {};

=== /d.ts ===
interface I {
>I : Symbol(I, Decl(d.ts, 0, 0))

    a: number;
>a : Symbol(I.a, Decl(d.ts, 0, 13))

    b: string;
>b : Symbol(I.b, Decl(d.ts, 1, 14))
}
export default: I = {};
>I : Symbol(I, Decl(d.ts, 0, 0))

=== /e.ts ===

export default: number[] = [];

=== /f.ts ===

export default: number[] = [""];

=== /g.ts ===
const a = [""];
>a : Symbol(a, Decl(g.ts, 0, 5))

export default: number[] = a;
>a : Symbol(a, Decl(g.ts, 0, 5))

=== /h.ts ===

export default: number[];

