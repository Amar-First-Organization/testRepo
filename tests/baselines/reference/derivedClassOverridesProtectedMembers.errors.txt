tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesProtectedMembers.ts(21,15): error TS2612: Property 'a' will overwrite the base property in 'Base'. Add a 'declare' modifier or an initializer to avoid this.
tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesProtectedMembers.ts(25,15): error TS2612: Property 'd' will overwrite the base property in 'Base'. Add a 'declare' modifier or an initializer to avoid this.


==== tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesProtectedMembers.ts (2 errors) ====
    var x: { foo: string; }
    var y: { foo: string; bar: string; }
    
    class Base {
        protected a: typeof x;
        protected b(a: typeof x) { }
        protected get c() { return x; }
        protected set c(v: typeof x) { }
        protected d: (a: typeof x) => void;
    
        protected static r: typeof x;
        protected static s(a: typeof x) { }
        protected static get t() { return x; }
        protected static set t(v: typeof x) { }
        protected static u: (a: typeof x) => void;
    
        constructor(a: typeof x) { }
    }
    
    class Derived extends Base {
        protected a: typeof y;
                  ~
!!! error TS2612: Property 'a' will overwrite the base property in 'Base'. Add a 'declare' modifier or an initializer to avoid this.
        protected b(a: typeof y) { }
        protected get c() { return y; }
        protected set c(v: typeof y) { }
        protected d: (a: typeof y) => void;
                  ~
!!! error TS2612: Property 'd' will overwrite the base property in 'Base'. Add a 'declare' modifier or an initializer to avoid this.
    
        protected static r: typeof y;
        protected static s(a: typeof y) { }
        protected static get t() { return y; }
        protected static set t(a: typeof y) { }
        protected static u: (a: typeof y) => void;
    
        constructor(a: typeof y) { super(x) }
    }
    