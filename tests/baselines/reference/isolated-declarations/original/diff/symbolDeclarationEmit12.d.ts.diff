// [[Reason: Invalid computed property can only be detected by TSC]] ////

//// [tests/cases/conformance/es6/Symbols/symbolDeclarationEmit12.ts] ////

===================================================================
--- TSC	declarations
+++ DTE	declarations
@@ -5,8 +5,9 @@
     interface I {
     }
     export class C {
         [Symbol.iterator]: I;
+        [Symbol.toPrimitive](x: I): invalid;
         [Symbol.isConcatSpreadable](): I;
         get [Symbol.toPrimitive](): invalid;
         set [Symbol.toPrimitive](x: I);
     }
@@ -14,19 +15,22 @@
 }
 
 /// [Errors] ////
 
+symbolDeclarationEmit12.ts(5,9): error TS9007: Declaration emit for this file requires type resolution. An explicit type annotation may unblock declaration emit.
 symbolDeclarationEmit12.ts(9,13): error TS2300: Duplicate identifier '[Symbol.toPrimitive]'.
 symbolDeclarationEmit12.ts(9,13): error TS9007: Declaration emit for this file requires type resolution. An explicit type annotation may unblock declaration emit.
 symbolDeclarationEmit12.ts(10,13): error TS2300: Duplicate identifier '[Symbol.toPrimitive]'.
 
 
-==== symbolDeclarationEmit12.ts (3 errors) ====
+==== symbolDeclarationEmit12.ts (4 errors) ====
     module M {
         interface I { }
         export class C {
             [Symbol.iterator]: I;
             [Symbol.toPrimitive](x: I) { }
+            ~~~~~~~~~~~~~~~~~~~~
+!!! error TS9007: Declaration emit for this file requires type resolution. An explicit type annotation may unblock declaration emit.
             [Symbol.isConcatSpreadable](): I {
                 return undefined
             }
             get [Symbol.toPrimitive]() { return undefined; }
