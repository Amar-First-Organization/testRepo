=== tests/cases/compiler/instanceofNarrowIntersection.ts ===
// repro #50844

interface InstanceOne {
>InstanceOne : Symbol(InstanceOne, Decl(instanceofNarrowIntersection.ts, 0, 0))

  one(): void
>one : Symbol(InstanceOne.one, Decl(instanceofNarrowIntersection.ts, 2, 23))
}
interface InstanceTwo {
>InstanceTwo : Symbol(InstanceTwo, Decl(instanceofNarrowIntersection.ts, 4, 1))

  two(): void
>two : Symbol(InstanceTwo.two, Decl(instanceofNarrowIntersection.ts, 5, 23))
}

declare const instance: InstanceOne | InstanceTwo
>instance : Symbol(instance, Decl(instanceofNarrowIntersection.ts, 9, 13))
>InstanceOne : Symbol(InstanceOne, Decl(instanceofNarrowIntersection.ts, 0, 0))
>InstanceTwo : Symbol(InstanceTwo, Decl(instanceofNarrowIntersection.ts, 4, 1))

declare const SomeCls: { new (): InstanceOne } & { foo: true }
>SomeCls : Symbol(SomeCls, Decl(instanceofNarrowIntersection.ts, 10, 13))
>InstanceOne : Symbol(InstanceOne, Decl(instanceofNarrowIntersection.ts, 0, 0))
>foo : Symbol(foo, Decl(instanceofNarrowIntersection.ts, 10, 50))

if (instance instanceof SomeCls) {
>instance : Symbol(instance, Decl(instanceofNarrowIntersection.ts, 9, 13))
>SomeCls : Symbol(SomeCls, Decl(instanceofNarrowIntersection.ts, 10, 13))

  instance.one()
>instance.one : Symbol(InstanceOne.one, Decl(instanceofNarrowIntersection.ts, 2, 23))
>instance : Symbol(instance, Decl(instanceofNarrowIntersection.ts, 9, 13))
>one : Symbol(InstanceOne.one, Decl(instanceofNarrowIntersection.ts, 2, 23))
}

