=== tests/cases/compiler/contextualComputedNonBindablePropertyType.ts ===
// repro #51906

declare function testD(): "d";
>testD : Symbol(testD, Decl(contextualComputedNonBindablePropertyType.ts, 0, 0))

declare function forceMatch<T>(matched: {
>forceMatch : Symbol(forceMatch, Decl(contextualComputedNonBindablePropertyType.ts, 2, 30))
>T : Symbol(T, Decl(contextualComputedNonBindablePropertyType.ts, 4, 28))
>matched : Symbol(matched, Decl(contextualComputedNonBindablePropertyType.ts, 4, 31))

  [key in keyof T]: key;
>key : Symbol(key, Decl(contextualComputedNonBindablePropertyType.ts, 5, 3))
>T : Symbol(T, Decl(contextualComputedNonBindablePropertyType.ts, 4, 28))
>key : Symbol(key, Decl(contextualComputedNonBindablePropertyType.ts, 5, 3))

}): void;

forceMatch({
>forceMatch : Symbol(forceMatch, Decl(contextualComputedNonBindablePropertyType.ts, 2, 30))

  [testD()]: "d",
>[testD()] : Symbol([testD()], Decl(contextualComputedNonBindablePropertyType.ts, 8, 12))
>testD : Symbol(testD, Decl(contextualComputedNonBindablePropertyType.ts, 0, 0))

});

declare function forceMatch2<T>(matched: {
>forceMatch2 : Symbol(forceMatch2, Decl(contextualComputedNonBindablePropertyType.ts, 10, 3))
>T : Symbol(T, Decl(contextualComputedNonBindablePropertyType.ts, 12, 29))
>matched : Symbol(matched, Decl(contextualComputedNonBindablePropertyType.ts, 12, 32))

  [key in keyof T]: ({ key }: { key: key }) => void;
>key : Symbol(key, Decl(contextualComputedNonBindablePropertyType.ts, 13, 3))
>T : Symbol(T, Decl(contextualComputedNonBindablePropertyType.ts, 12, 29))
>key : Symbol(key, Decl(contextualComputedNonBindablePropertyType.ts, 13, 22))
>key : Symbol(key, Decl(contextualComputedNonBindablePropertyType.ts, 13, 31))
>key : Symbol(key, Decl(contextualComputedNonBindablePropertyType.ts, 13, 3))

}): void;

forceMatch2({
>forceMatch2 : Symbol(forceMatch2, Decl(contextualComputedNonBindablePropertyType.ts, 10, 3))

  [testD()]: ({ key }) => {},
>[testD()] : Symbol([testD()], Decl(contextualComputedNonBindablePropertyType.ts, 16, 13))
>testD : Symbol(testD, Decl(contextualComputedNonBindablePropertyType.ts, 0, 0))
>key : Symbol(key, Decl(contextualComputedNonBindablePropertyType.ts, 17, 15))

});

