keyRemappingKeyofResult2.ts(23,7): error TS2344: Type 'Values<{ [K in keyof TActors as K & string]: { src: K; logic: TActors[K]; }; }>' does not satisfy the constraint 'ProvidedActor'.
  Types of property 'src' are incompatible.
    Type 'keyof { [K in keyof TActors as K & string]: { src: K; logic: TActors[K]; }; }' is not assignable to type 'string'.
      Type 'string | number | symbol' is not assignable to type 'string'.
        Type 'number' is not assignable to type 'string'.


==== keyRemappingKeyofResult2.ts (1 errors) ====
    // https://github.com/microsoft/TypeScript/issues/56239
    
    type Values<T> = T[keyof T];
    
    type ProvidedActor = {
      src: string;
      logic: unknown;
    };
    
    interface StateMachineConfig<TActors extends ProvidedActor> {
      invoke: {
        src: TActors["src"];
      };
    }
    
    declare function setup<TActors extends Record<string, unknown>>(_: {
      actors: {
        [K in keyof TActors]: TActors[K];
      };
    }): {
      createMachine: (
        config: StateMachineConfig<
          Values<{
          ~~~~~~~~
            [K in keyof TActors as K & string]: {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
              src: K;
    ~~~~~~~~~~~~~~~~~
              logic: TActors[K];
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            };
    ~~~~~~~~~~
          }>
    ~~~~~~~~
!!! error TS2344: Type 'Values<{ [K in keyof TActors as K & string]: { src: K; logic: TActors[K]; }; }>' does not satisfy the constraint 'ProvidedActor'.
!!! error TS2344:   Types of property 'src' are incompatible.
!!! error TS2344:     Type 'keyof { [K in keyof TActors as K & string]: { src: K; logic: TActors[K]; }; }' is not assignable to type 'string'.
!!! error TS2344:       Type 'string | number | symbol' is not assignable to type 'string'.
!!! error TS2344:         Type 'number' is not assignable to type 'string'.
        >,
      ) => void;
    };
    