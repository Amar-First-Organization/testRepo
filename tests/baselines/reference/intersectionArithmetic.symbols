=== tests/cases/conformance/types/intersection/intersectionArithmetic.ts ===
let numberObject: number & { foo: any };
>numberObject : Symbol(numberObject, Decl(intersectionArithmetic.ts, 0, 3))
>foo : Symbol(foo, Decl(intersectionArithmetic.ts, 0, 28))

let stringObject: string & { foo: any };
>stringObject : Symbol(stringObject, Decl(intersectionArithmetic.ts, 1, 3))
>foo : Symbol(foo, Decl(intersectionArithmetic.ts, 1, 28))

let numberString: number & string;
>numberString : Symbol(numberString, Decl(intersectionArithmetic.ts, 2, 3))

let a = numberObject + 1;
>a : Symbol(a, Decl(intersectionArithmetic.ts, 4, 3))
>numberObject : Symbol(numberObject, Decl(intersectionArithmetic.ts, 0, 3))

let b = stringObject + 1;
>b : Symbol(b, Decl(intersectionArithmetic.ts, 5, 3))
>stringObject : Symbol(stringObject, Decl(intersectionArithmetic.ts, 1, 3))

let c = numberObject + '';
>c : Symbol(c, Decl(intersectionArithmetic.ts, 6, 3))
>numberObject : Symbol(numberObject, Decl(intersectionArithmetic.ts, 0, 3))

let d = stringObject + '';
>d : Symbol(d, Decl(intersectionArithmetic.ts, 7, 3))
>stringObject : Symbol(stringObject, Decl(intersectionArithmetic.ts, 1, 3))

let e = numberObject + stringObject;
>e : Symbol(e, Decl(intersectionArithmetic.ts, 8, 3))
>numberObject : Symbol(numberObject, Decl(intersectionArithmetic.ts, 0, 3))
>stringObject : Symbol(stringObject, Decl(intersectionArithmetic.ts, 1, 3))

let f = numberString + 1;
>f : Symbol(f, Decl(intersectionArithmetic.ts, 10, 3))
>numberString : Symbol(numberString, Decl(intersectionArithmetic.ts, 2, 3))

let g = numberString + '';
>g : Symbol(g, Decl(intersectionArithmetic.ts, 11, 3))
>numberString : Symbol(numberString, Decl(intersectionArithmetic.ts, 2, 3))

let h = numberString + numberString;
>h : Symbol(h, Decl(intersectionArithmetic.ts, 12, 3))
>numberString : Symbol(numberString, Decl(intersectionArithmetic.ts, 2, 3))
>numberString : Symbol(numberString, Decl(intersectionArithmetic.ts, 2, 3))

let i = numberObject * 2;
>i : Symbol(i, Decl(intersectionArithmetic.ts, 14, 3))
>numberObject : Symbol(numberObject, Decl(intersectionArithmetic.ts, 0, 3))

let j = numberString * 2;
>j : Symbol(j, Decl(intersectionArithmetic.ts, 15, 3))
>numberString : Symbol(numberString, Decl(intersectionArithmetic.ts, 2, 3))

