=== tests/cases/compiler/instanceofTypeAliasToGenericClass.ts ===
// If Table is non generic error does not occur
declare class TableClass<S = any>  {
>TableClass : TableClass<S>

    _field: S
>_field : S
}

export type Table = TableClass;
>Table : TableClass<any>

function fn<T extends Table>(o: T) {
>fn : <T extends Table>(o: T) => boolean
>o : T

    return o instanceof TableClass // error in 4.8
>o instanceof TableClass : boolean
>o : T
>TableClass : typeof TableClass
}

declare const o: Table;
>o : Table

o instanceof TableClass // This is ok 
>o instanceof TableClass : boolean
>o : Table
>TableClass : typeof TableClass

