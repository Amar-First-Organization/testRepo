tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(26,1): error TS2463: Duplicate overload signature for foo1.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(27,1): error TS2463: Duplicate overload signature for foo1.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(30,1): error TS2463: Duplicate overload signature for foo1b.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(31,1): error TS2463: Duplicate overload signature for foo1b.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(34,1): error TS2463: Duplicate overload signature for foo1c.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(35,1): error TS2463: Duplicate overload signature for foo1c.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(38,1): error TS2463: Duplicate overload signature for foo2.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(39,1): error TS2463: Duplicate overload signature for foo2.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(42,1): error TS2463: Duplicate overload signature for foo3.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(43,1): error TS2463: Duplicate overload signature for foo3.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(46,1): error TS2463: Duplicate overload signature for foo4.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(47,1): error TS2463: Duplicate overload signature for foo4.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(66,1): error TS2463: Duplicate overload signature for foo8.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(67,1): error TS2463: Duplicate overload signature for foo8.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(70,1): error TS2463: Duplicate overload signature for foo9.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(71,1): error TS2463: Duplicate overload signature for foo9.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(82,1): error TS2463: Duplicate overload signature for foo12.
tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts(83,1): error TS2463: Duplicate overload signature for foo12.


==== tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts (18 errors) ====
    // object types are identical structurally
    
    class A {
        foo<T>(x: T): T { return null; }
    }
    
    class B<U, V> {
        foo(x: U): U { return null; }
    }
    
    class C<V, W, X> {
        foo(x: V): V { return null; }
    }
    
    interface I<X, Y, Z, A> {
        foo(x: X): X;
    }
    
    interface I2 {
        foo<Y, Z, A, B>(x: Y): Y;
    }
    
    var a: { foo<Z, A, B, C, D>(x: Z): Z }
    var b = { foo<A, B, C, D, E, F>(x: A) { return x; } };
    
    function foo1(x: A);
    ~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo1.
    function foo1(x: A); // error
    ~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo1.
    function foo1(x: any) { }
    
    function foo1b(x: B<string, string>);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo1b.
    function foo1b(x: B<string, string>); // error
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo1b.
    function foo1b(x: any) { }
    
    function foo1c(x: C<string, number, boolean>);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo1c.
    function foo1c(x: C<string, number, boolean>); // error
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo1c.
    function foo1c(x: any) { }
    
    function foo2(x: I<string, boolean, number, string>);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo2.
    function foo2(x: I<string, boolean, number, string>); // error
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo2.
    function foo2(x: any) { }
    
    function foo3(x: typeof a);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo3.
    function foo3(x: typeof a); // error
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo3.
    function foo3(x: any) { }
    
    function foo4(x: typeof b);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo4.
    function foo4(x: typeof b); // error
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo4.
    function foo4(x: any) { }
    
    function foo5(x: A);
    function foo5(x: B<string, string>); // ok
    function foo5(x: any) { }
    
    function foo5b(x: A);
    function foo5b(x: C<string, number, boolean>); // ok
    function foo5b(x: any) { }
    
    function foo6(x: A);
    function foo6(x: I<string, number, boolean, Date>); // ok
    function foo6(x: any) { }
    
    function foo7(x: A);
    function foo7(x: typeof a); // no error, bug?
    function foo7(x: any) { }
    
    function foo8(x: B<string, string>);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo8.
    function foo8(x: I<string, string, boolean, Date>); // error
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo8.
    function foo8(x: any) { }
    
    function foo9(x: B<string, number>);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo9.
    function foo9(x: C<string, number, B<string, string>>); // error
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo9.
    function foo9(x: any) { }
    
    function foo10(x: B<string, boolean>);
    function foo10(x: typeof a); // ok
    function foo10(x: any) { }
    
    function foo11(x: B<string, boolean>);
    function foo11(x: typeof b); // ok
    function foo11(x: any) { }
    
    function foo12(x: I<B<string, number>, number, Date, string>);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo12.
    function foo12(x: C<B<string, number>, number, Date>); // error
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2463: Duplicate overload signature for foo12.
    function foo12(x: any) { }
    
    function foo12b(x: I2);
    function foo12b(x: C<string, string, boolean>); // ok
    function foo12b(x: any) { }
    
    function foo13(x: I<string, Date, RegExp, Date>);
    function foo13(x: typeof a); // ok
    function foo13(x: any) { }
    
    function foo14(x: I<string, Date, RegExp, boolean>);
    function foo14(x: typeof b); // ok
    function foo14(x: any) { }
    
    function foo15(x: I2);
    function foo15(x: C<number, B<string, string>, B<number, string>>); // ok
    function foo15(x: any) { }