=== tests/cases/conformance/types/literal/numericLiteralTypes4.ts ===
var a: 10 = 10;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

var b: 10 | 11 = 11;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

var c: 10 | 11 | 12 = 10;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

a ++;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a --;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a += 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a -= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a *= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a /= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a %= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a &= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a |= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a ^= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a >>= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a >>>= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

a <<= 1;
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

++a
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

--a
>a : Symbol(a, Decl(numericLiteralTypes4.ts, 0, 3))

b ++;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b --;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b += 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b -= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b *= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b /= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b %= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b &= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b |= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b ^= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b >>= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b >>>= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

b <<= 1;
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

++b
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

--b
>b : Symbol(b, Decl(numericLiteralTypes4.ts, 1, 3))

c ++;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c --;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c += 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c -= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c *= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c /= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c %= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c &= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c |= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c ^= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c >>= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c >>>= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

c <<= 1;
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

++c
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

--c
>c : Symbol(c, Decl(numericLiteralTypes4.ts, 2, 3))

