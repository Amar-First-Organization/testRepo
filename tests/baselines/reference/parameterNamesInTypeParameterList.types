=== tests/cases/compiler/parameterNamesInTypeParameterList.ts ===
function f0<T extends typeof a>(a: T) {
>f0 : <T extends any (error)>(a: T) => void
>a : any (error)
>a : T

	a.b;
>a.b : any (error)
>a : T
>b : any (error)
}

function f1<T extends typeof a>({a}: {a:T}) {
>f1 : <T extends any (error)>({ a }: { a: T; }) => void
>a : any (error)
>a : T
>a : T

	a.b;
>a.b : any (error)
>a : T
>b : any (error)
}

function f2<T extends typeof a>([a]: T[]) {
>f2 : <T extends any (error)>([a]: T[]) => void
>a : any (error)
>a : T

	a.b;
>a.b : any (error)
>a : T
>b : any (error)
}

class A {
>A : A

	m0<T extends typeof a>(a: T) {
>m0 : <T extends any (error)>(a: T) => void
>a : any (error)
>a : T

		a.b
>a.b : any (error)
>a : T
>b : any (error)
	}
	m1<T extends typeof a>({a}: {a:T}) {
>m1 : <T extends any (error)>({ a }: { a: T; }) => void
>a : any (error)
>a : T
>a : T

		a.b
>a.b : any (error)
>a : T
>b : any (error)
	}
	m2<T extends typeof a>([a]: T[]) {
>m2 : <T extends any (error)>([a]: T[]) => void
>a : any (error)
>a : T

		a.b
>a.b : any (error)
>a : T
>b : any (error)
	}
}
