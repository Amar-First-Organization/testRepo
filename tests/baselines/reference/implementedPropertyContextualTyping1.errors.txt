tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(25,9): error TS2322: Type 'number' is not assignable to type 'string'.
tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(28,9): error TS2322: Type 'number' is not assignable to type 'string'.
tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(32,9): error TS2322: Type 'number' is not assignable to type 'string'.
tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(35,9): error TS2322: Type 'number' is not assignable to type 'string'.
tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(59,7): error TS2420: Class 'Multiple' incorrectly implements interface 'A'.
  Types of property 'r' are incompatible.
    Type 'number' is not assignable to type 'string'.
tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(59,7): error TS2420: Class 'Multiple' incorrectly implements interface 'B'.
  Types of property 'r' are incompatible.
    Type 'number' is not assignable to type 'boolean'.
tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(60,5): error TS7008: Member 'p' implicitly has an 'any' type.
tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(61,7): error TS7006: Parameter 'n' implicitly has an 'any' type.
tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts(70,12): error TS2339: Property 'length' does not exist on type 'number'.


==== tests/cases/conformance/expressions/contextualTyping/implementedPropertyContextualTyping1.ts (9 errors) ====
    interface Event {
        time: number;
    }
    interface Base {
        superHandle: (e: Event) => number;
    }
    interface Listener extends Base {
        handle: (e: Event) => void;
    }
    interface Ringer {
        ring: (times: number) => void;
    }
    interface StringLiteral {
        literal(): "A";
        literals: "A" | "B";
    }
    
    abstract class Watcher {
        abstract watch(e: Event): number;
    }
    
    class Alarm extends Watcher implements Listener, Ringer, StringLiteral {
        str: string;
        handle = e => {
            this.str = e.time; // error
            ~~~~~~~~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
        }
        superHandle = e => {
            this.str = e.time; // error
            ~~~~~~~~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
            return e.time;
        }
        ring(times) {
            this.str = times; // error
            ~~~~~~~~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
        }
        watch(e) {
            this.str = e.time; // error
            ~~~~~~~~
!!! error TS2322: Type 'number' is not assignable to type 'string'.
            return e.time;
        }
        literal() {
            return "A"; // ok: "A" is assignable to "A"
        }
        literals = "A"; // ok: "A" is assignable to "A" | "B"
    }
    
    interface A {
        p: string;
        q(n: string): void;
        r: string;
        s: string;
    }
    interface B {
        p: number;
        q(n: number): void;
        r: boolean;
        s: string;
    }
    class C {
        r: number;
    }
    class Multiple extends C implements A, B {
          ~~~~~~~~
!!! error TS2420: Class 'Multiple' incorrectly implements interface 'A'.
!!! error TS2420:   Types of property 'r' are incompatible.
!!! error TS2420:     Type 'number' is not assignable to type 'string'.
          ~~~~~~~~
!!! error TS2420: Class 'Multiple' incorrectly implements interface 'B'.
!!! error TS2420:   Types of property 'r' are incompatible.
!!! error TS2420:     Type 'number' is not assignable to type 'boolean'.
        p = undefined; // error, Multiple.p is implicitly any because A.p and B.p exist
        ~~~~~~~~~~~~~~
!!! error TS7008: Member 'p' implicitly has an 'any' type.
        q(n) {         // error, n is implicitly any because A.q and B.q exist
          ~
!!! error TS7006: Parameter 'n' implicitly has an 'any' type.
            n.length;
            n.toFixed;
        }
        r = null;     // OK, C.r wins over A.r and B.r
        s = null;     // OK, A.s and B.s match
    }
    let multiple = new Multiple();
    multiple.r.toFixed; // OK, C.r wins so Multiple.r: number
    multiple.r.length;  // error, Multiple.r: number
               ~~~~~~
!!! error TS2339: Property 'length' does not exist on type 'number'.
    multiple.s.length;   // OK, A.s and B.s match.
    