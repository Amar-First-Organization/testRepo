=== tests/cases/compiler/chainedThisRefinements.ts ===
class Builder {
>Builder : Symbol(Builder, Decl(chainedThisRefinements.ts, 0, 0))

    private _class: undefined;
>_class : Symbol(Builder._class, Decl(chainedThisRefinements.ts, 0, 15))

    withFoo<T>() {
>withFoo : Symbol(Builder.withFoo, Decl(chainedThisRefinements.ts, 1, 30))
>T : Symbol(T, Decl(chainedThisRefinements.ts, 2, 12))

        return this as this & { foo: T }
>this : Symbol(Builder, Decl(chainedThisRefinements.ts, 0, 0))
>foo : Symbol(foo, Decl(chainedThisRefinements.ts, 3, 31))
>T : Symbol(T, Decl(chainedThisRefinements.ts, 2, 12))
    }
    withBar<T>() {
>withBar : Symbol(Builder.withBar, Decl(chainedThisRefinements.ts, 4, 5))
>T : Symbol(T, Decl(chainedThisRefinements.ts, 5, 12))

        return this as this & { bar: T }
>this : Symbol(Builder, Decl(chainedThisRefinements.ts, 0, 0))
>bar : Symbol(bar, Decl(chainedThisRefinements.ts, 6, 31))
>T : Symbol(T, Decl(chainedThisRefinements.ts, 5, 12))
    }
    withFooBar<T>() {
>withFooBar : Symbol(Builder.withFooBar, Decl(chainedThisRefinements.ts, 7, 5))
>T : Symbol(T, Decl(chainedThisRefinements.ts, 8, 15))

        return this.withFoo<T>().withBar<T>();
>this.withFoo<T>().withBar : Symbol(Builder.withBar, Decl(chainedThisRefinements.ts, 4, 5))
>this.withFoo : Symbol(Builder.withFoo, Decl(chainedThisRefinements.ts, 1, 30))
>this : Symbol(Builder, Decl(chainedThisRefinements.ts, 0, 0))
>withFoo : Symbol(Builder.withFoo, Decl(chainedThisRefinements.ts, 1, 30))
>T : Symbol(T, Decl(chainedThisRefinements.ts, 8, 15))
>withBar : Symbol(Builder.withBar, Decl(chainedThisRefinements.ts, 4, 5))
>T : Symbol(T, Decl(chainedThisRefinements.ts, 8, 15))
    }
}

declare var f: {foo: number};
>f : Symbol(f, Decl(chainedThisRefinements.ts, 13, 11))
>foo : Symbol(foo, Decl(chainedThisRefinements.ts, 13, 16))

f = new Builder().withFooBar<number>(); // should work
>f : Symbol(f, Decl(chainedThisRefinements.ts, 13, 11))
>new Builder().withFooBar : Symbol(Builder.withFooBar, Decl(chainedThisRefinements.ts, 7, 5))
>Builder : Symbol(Builder, Decl(chainedThisRefinements.ts, 0, 0))
>withFooBar : Symbol(Builder.withFooBar, Decl(chainedThisRefinements.ts, 7, 5))

