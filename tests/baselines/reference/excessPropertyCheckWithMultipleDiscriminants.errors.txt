tests/cases/compiler/excessPropertyCheckWithMultipleDiscriminants.ts(30,5): error TS2322: Type '{ type: "number"; value: number; multipleOf: number; format: string; }' is not assignable to type 'Primitive'.
  Object literal may only specify known properties, and 'multipleOf' does not exist in type 'Float'.
tests/cases/compiler/excessPropertyCheckWithMultipleDiscriminants.ts(41,5): error TS2322: Type '{ p1: "left"; p2: false; p3: number; p4: string; }' is not assignable to type 'DisjointDiscriminants'.
  Object literal may only specify known properties, and 'p3' does not exist in type '{ p1: "left"; p2: boolean; }'.
tests/cases/compiler/excessPropertyCheckWithMultipleDiscriminants.ts(50,5): error TS2322: Type '{ p1: "left"; p2: true; p3: number; p4: string; }' is not assignable to type 'DisjointDiscriminants'.
  Object literal may only specify known properties, and 'p4' does not exist in type '{ p1: "left"; p2: true; p3: number; } | { p1: "left"; p2: boolean; }'.
tests/cases/compiler/excessPropertyCheckWithMultipleDiscriminants.ts(57,5): error TS2322: Type '{ p1: "right"; p2: false; p3: number; p4: string; }' is not assignable to type 'DisjointDiscriminants'.
  Object literal may only specify known properties, and 'p3' does not exist in type '{ p1: "right"; p2: false; p4: string; }'.
tests/cases/compiler/excessPropertyCheckWithMultipleDiscriminants.ts(83,5): error TS2322: Type '{ type: "A"; n: number; a: number; b: number; }' is not assignable to type 'CommonWithOverlappingOptionals'.
  Object literal may only specify known properties, and 'b' does not exist in type 'Common | (Common & A)'.
tests/cases/compiler/excessPropertyCheckWithMultipleDiscriminants.ts(93,5): error TS2322: Type '{ type: "A"; n: number; a: number; b: number; }' is not assignable to type 'CommonWithDisjointOverlappingOptionals'.
  Object literal may only specify known properties, and 'b' does not exist in type 'Common | A'.


==== tests/cases/compiler/excessPropertyCheckWithMultipleDiscriminants.ts (6 errors) ====
    // Repro from #32657
    
    interface Base<T> {
        value: T;
    }
    
    interface Int extends Base<number> {
        type: "integer";
        multipleOf?: number;
    }
    
    interface Float extends Base<number> {
        type: "number";
    }
    
    interface Str extends Base<string> {
        type: "string";
        format?: string;
    }
    
    interface Bool extends Base<boolean> {
        type: "boolean";
    }
    
    type Primitive = Int | Float | Str | Bool;
    
    const foo: Primitive = {
        type: "number",
        value: 10,
        multipleOf: 5, // excess property
        ~~~~~~~~~~~~~
!!! error TS2322: Type '{ type: "number"; value: number; multipleOf: number; format: string; }' is not assignable to type 'Primitive'.
!!! error TS2322:   Object literal may only specify known properties, and 'multipleOf' does not exist in type 'Float'.
        format: "what?"
    }
    
    
    type DisjointDiscriminants = { p1: 'left'; p2: true; p3: number } | { p1: 'right'; p2: false; p4: string } | { p1: 'left'; p2: boolean };
    
    // This has excess error because variant three is the only applicable case.
    const a: DisjointDiscriminants = {
        p1: 'left',
        p2: false,
        p3: 42,
        ~~~~~~
!!! error TS2322: Type '{ p1: "left"; p2: false; p3: number; p4: string; }' is not assignable to type 'DisjointDiscriminants'.
!!! error TS2322:   Object literal may only specify known properties, and 'p3' does not exist in type '{ p1: "left"; p2: boolean; }'.
        p4: "hello"
    };
    
    // This has excess error because variant two is not applicable.
    const b: DisjointDiscriminants = {
        p1: 'left',
        p2: true,
        p3: 42,
        p4: "hello"
        ~~~~~~~~~~~
!!! error TS2322: Type '{ p1: "left"; p2: true; p3: number; p4: string; }' is not assignable to type 'DisjointDiscriminants'.
!!! error TS2322:   Object literal may only specify known properties, and 'p4' does not exist in type '{ p1: "left"; p2: true; p3: number; } | { p1: "left"; p2: boolean; }'.
    };
    
    // This has excess error because variant two is the only applicable case
    const c: DisjointDiscriminants = {
        p1: 'right',
        p2: false,
        p3: 42,
        ~~~~~~
!!! error TS2322: Type '{ p1: "right"; p2: false; p3: number; p4: string; }' is not assignable to type 'DisjointDiscriminants'.
!!! error TS2322:   Object literal may only specify known properties, and 'p3' does not exist in type '{ p1: "right"; p2: false; p4: string; }'.
        p4: "hello"
    };
    
    // Repro from #51873
    
    interface Common {
        type: "A" | "B" | "C" | "D";
        n: number;
    }
    interface A {
        type: "A";
        a?: number;
    }
    interface B {
        type: "B";
        b?: number;
    }
    
    type CommonWithOverlappingOptionals = Common | (Common & A) | (Common & B);
    
    // Should reject { b } because reduced to Common | (Common & A)
    const c1: CommonWithOverlappingOptionals = {
        type: "A",
        n: 1,
        a: 1,
        b: 1  // excess property
        ~~~~
!!! error TS2322: Type '{ type: "A"; n: number; a: number; b: number; }' is not assignable to type 'CommonWithOverlappingOptionals'.
!!! error TS2322:   Object literal may only specify known properties, and 'b' does not exist in type 'Common | (Common & A)'.
    }
    
    type CommonWithDisjointOverlappingOptionals = Common | A | B;
    
    // Should still reject { b } because reduced to Common | A, even though these are now disjoint
    const c2: CommonWithDisjointOverlappingOptionals = {
        type: "A",
        n: 1,
        a: 1,
        b: 1  // excess property
        ~~~~
!!! error TS2322: Type '{ type: "A"; n: number; a: number; b: number; }' is not assignable to type 'CommonWithDisjointOverlappingOptionals'.
!!! error TS2322:   Object literal may only specify known properties, and 'b' does not exist in type 'Common | A'.
    }
    