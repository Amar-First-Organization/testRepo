typeFromPropertyAssignment36.ts(11,7): error TS2565: Property 'q' is used before being assigned.
typeFromPropertyAssignment36.ts(42,3): error TS2565: Property 'q' is used before being assigned.
typeFromPropertyAssignment36.ts(62,7): error TS2339: Property 'expando' does not exist on type '() => void'.
typeFromPropertyAssignment36.ts(64,3): error TS2339: Property 'expando' does not exist on type '() => void'.
typeFromPropertyAssignment36.ts(67,7): error TS2339: Property 'both' does not exist on type '() => void'.
typeFromPropertyAssignment36.ts(70,7): error TS2339: Property 'both' does not exist on type '() => void'.
typeFromPropertyAssignment36.ts(72,3): error TS2339: Property 'both' does not exist on type '() => void'.


==== typeFromPropertyAssignment36.ts (7 errors) ====
    function f(b: boolean) {
        function d() {
        }
        d.e = 12
        d.e
    
        if (b) {
            d.q = false
        }
        // error d.q might not be assigned
        d.q
          ~
!!! error TS2565: Property 'q' is used before being assigned.
        if (b) {
            d.q = false
        }
        else {
            d.q = true
        }
        d.q
        if (b) {
            d.r = 1
        }
        else {
            d.r = 2
        }
        d.r
        if (b) {
            d.s = 'hi'
        }
        return d
    }
    // OK to access possibly-unassigned properties outside the initialising scope
    var test = f(true).s
    
    function d() {
    }
    d.e = 12
    d.e
    
    if (!!false) {
        d.q = false
    }
    d.q
      ~
!!! error TS2565: Property 'q' is used before being assigned.
    if (!!false) {
        d.q = false
    }
    else {
        d.q = true
    }
    d.q
    if (!!false) {
        d.r = 1
    }
    else {
        d.r = 2
    }
    d.r
    
    // test function expressions too
    const g = function() {
    }
    if (!!false) {
        g.expando = 1
          ~~~~~~~
!!! error TS2339: Property 'expando' does not exist on type '() => void'.
    }
    g.expando // error
      ~~~~~~~
!!! error TS2339: Property 'expando' does not exist on type '() => void'.
    
    if (!!false) {
        g.both = 'hi'
          ~~~~
!!! error TS2339: Property 'both' does not exist on type '() => void'.
    }
    else {
        g.both = 0
          ~~~~
!!! error TS2339: Property 'both' does not exist on type '() => void'.
    }
    g.both
      ~~~~
!!! error TS2339: Property 'both' does not exist on type '() => void'.
    