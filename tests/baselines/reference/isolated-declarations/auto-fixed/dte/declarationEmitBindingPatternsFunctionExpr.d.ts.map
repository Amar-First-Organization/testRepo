//// [tests/cases/compiler/declarationEmitBindingPatternsFunctionExpr.ts] ////

//// [declarationEmitBindingPatternsFunctionExpr.ts]
type Named = { name: string }
// Tempting to remove alias if unused 
let notReferenced = ({ name: alias }: Named): void => { }

// Resons we can't remove aliases that are not used in the function signature: 

// 1.Causes duplicate identifier if we remove alias
const duplicateIndetifiers = ({ name: alias, name: alias2 }: Named): void => { }
const duplicateIndetifiers2 = (name: string, { name: alias }: Named): void => { }
const duplicateIndetifiers3 = ({ name: alias }: Named, { name: alias2 }: Named): void => { }

let value = "";
// 2.Can change in meaning for typeof value if we remove alias
const shadowedVariable = ({ value: alias }: { value: string }): typeof value => value;

/// [Declarations] ////



//// [declarationEmitBindingPatternsFunctionExpr.d.ts]
type Named = {
    name: string;
};
declare let notReferenced: ({ name: alias }: Named) => void;
declare const duplicateIndetifiers: ({ name: alias, name: alias2 }: Named) => void;
declare const duplicateIndetifiers2: (name: string, { name: alias }: Named) => void;
declare const duplicateIndetifiers3: ({ name: alias }: Named, { name: alias2 }: Named) => void;
declare let value: string;
declare const shadowedVariable: ({ value: alias }: {
    value: string;
}) => typeof value;
//# sourceMappingURL=declarationEmitBindingPatternsFunctionExpr.d.ts.map

/// [Declarations Maps] ////


//// [declarationEmitBindingPatternsFunctionExpr.d.ts.map]
{"version":3,"file":"declarationEmitBindingPatternsFunctionExpr.d.ts","sourceRoot":"","sources":["declarationEmitBindingPatternsFunctionExpr.ts"],"names":[],"mappings":"AAAA,KAAK,KAAK,GAAG;IAAE,IAAI,EAAE,MAAM,CAAA;CAAE,CAAA;AAE7B,QAAA,IAAI,aAAa,GAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,KAAG,IAAW,CAAA;AAKzD,QAAA,MAAM,oBAAoB,GAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,KAAK,KAAG,IAAW,CAAA;AAChF,QAAA,MAAM,qBAAqB,GAAI,IAAI,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,KAAG,IAAW,CAAA;AACjF,QAAA,MAAM,qBAAqB,GAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,KAAK,KAAG,IAAW,CAAA;AAE5F,QAAA,IAAI,KAAK,QAAK,CAAC;AAEf,QAAA,MAAM,gBAAgB,GAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;IAAE,KAAK,EAAE,MAAM,CAAA;CAAE,KAAG,OAAO,KAAc,CAAC"}

//// https://sokra.github.io/source-map-visualization#base64,dHlwZSBOYW1lZCA9IHsNCiAgICBuYW1lOiBzdHJpbmc7DQp9Ow0KZGVjbGFyZSBsZXQgbm90UmVmZXJlbmNlZDogKHsgbmFtZTogYWxpYXMgfTogTmFtZWQpID0+IHZvaWQ7DQpkZWNsYXJlIGNvbnN0IGR1cGxpY2F0ZUluZGV0aWZpZXJzOiAoeyBuYW1lOiBhbGlhcywgbmFtZTogYWxpYXMyIH06IE5hbWVkKSA9PiB2b2lkOw0KZGVjbGFyZSBjb25zdCBkdXBsaWNhdGVJbmRldGlmaWVyczI6IChuYW1lOiBzdHJpbmcsIHsgbmFtZTogYWxpYXMgfTogTmFtZWQpID0+IHZvaWQ7DQpkZWNsYXJlIGNvbnN0IGR1cGxpY2F0ZUluZGV0aWZpZXJzMzogKHsgbmFtZTogYWxpYXMgfTogTmFtZWQsIHsgbmFtZTogYWxpYXMyIH06IE5hbWVkKSA9PiB2b2lkOw0KZGVjbGFyZSBsZXQgdmFsdWU6IHN0cmluZzsNCmRlY2xhcmUgY29uc3Qgc2hhZG93ZWRWYXJpYWJsZTogKHsgdmFsdWU6IGFsaWFzIH06IHsNCiAgICB2YWx1ZTogc3RyaW5nOw0KfSkgPT4gdHlwZW9mIHZhbHVlOw0KLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjbGFyYXRpb25FbWl0QmluZGluZ1BhdHRlcm5zRnVuY3Rpb25FeHByLmQudHMubWFw,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjbGFyYXRpb25FbWl0QmluZGluZ1BhdHRlcm5zRnVuY3Rpb25FeHByLmQudHMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkZWNsYXJhdGlvbkVtaXRCaW5kaW5nUGF0dGVybnNGdW5jdGlvbkV4cHIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsS0FBSyxLQUFLLEdBQUc7SUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFBO0NBQUUsQ0FBQTtBQUU3QixRQUFBLElBQUksYUFBYSxHQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssS0FBRyxJQUFXLENBQUE7QUFLekQsUUFBQSxNQUFNLG9CQUFvQixHQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxLQUFHLElBQVcsQ0FBQTtBQUNoRixRQUFBLE1BQU0scUJBQXFCLEdBQUksSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEtBQUcsSUFBVyxDQUFBO0FBQ2pGLFFBQUEsTUFBTSxxQkFBcUIsR0FBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxLQUFHLElBQVcsQ0FBQTtBQUU1RixRQUFBLElBQUksS0FBSyxRQUFLLENBQUM7QUFFZixRQUFBLE1BQU0sZ0JBQWdCLEdBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUU7SUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFBO0NBQUUsS0FBRyxPQUFPLEtBQWMsQ0FBQyJ9,dHlwZSBOYW1lZCA9IHsgbmFtZTogc3RyaW5nIH0KLy8gVGVtcHRpbmcgdG8gcmVtb3ZlIGFsaWFzIGlmIHVudXNlZCAKbGV0IG5vdFJlZmVyZW5jZWQgPSAoeyBuYW1lOiBhbGlhcyB9OiBOYW1lZCk6IHZvaWQgPT4geyB9CgovLyBSZXNvbnMgd2UgY2FuJ3QgcmVtb3ZlIGFsaWFzZXMgdGhhdCBhcmUgbm90IHVzZWQgaW4gdGhlIGZ1bmN0aW9uIHNpZ25hdHVyZTogCgovLyAxLkNhdXNlcyBkdXBsaWNhdGUgaWRlbnRpZmllciBpZiB3ZSByZW1vdmUgYWxpYXMKY29uc3QgZHVwbGljYXRlSW5kZXRpZmllcnMgPSAoeyBuYW1lOiBhbGlhcywgbmFtZTogYWxpYXMyIH06IE5hbWVkKTogdm9pZCA9PiB7IH0KY29uc3QgZHVwbGljYXRlSW5kZXRpZmllcnMyID0gKG5hbWU6IHN0cmluZywgeyBuYW1lOiBhbGlhcyB9OiBOYW1lZCk6IHZvaWQgPT4geyB9CmNvbnN0IGR1cGxpY2F0ZUluZGV0aWZpZXJzMyA9ICh7IG5hbWU6IGFsaWFzIH06IE5hbWVkLCB7IG5hbWU6IGFsaWFzMiB9OiBOYW1lZCk6IHZvaWQgPT4geyB9CgpsZXQgdmFsdWUgPSAiIjsKLy8gMi5DYW4gY2hhbmdlIGluIG1lYW5pbmcgZm9yIHR5cGVvZiB2YWx1ZSBpZiB3ZSByZW1vdmUgYWxpYXMKY29uc3Qgc2hhZG93ZWRWYXJpYWJsZSA9ICh7IHZhbHVlOiBhbGlhcyB9OiB7IHZhbHVlOiBzdHJpbmcgfSk6IHR5cGVvZiB2YWx1ZSA9PiB2YWx1ZTs=

