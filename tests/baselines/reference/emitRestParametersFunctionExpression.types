=== tests/cases/conformance/es6/restParameters/emitRestParametersFunctionExpression.ts ===
var funcExp = (...rest) => { rest; }
>funcExp : (...rest: any[]) => void
>(...rest) => { rest; } : (...rest: any[]) => void
>rest : any[]
>rest : any[]

var funcExp1 = (X: number, ...rest) => { rest; }
>funcExp1 : (X: number, ...rest: any[]) => void
>(X: number, ...rest) => { rest; } : (X: number, ...rest: any[]) => void
>X : number
>rest : any[]
>rest : any[]

var funcExp2 = function (...rest) { rest; }
>funcExp2 : (...rest: any[]) => void
>function (...rest) { rest; } : (...rest: any[]) => void
>rest : any[]
>rest : any[]

var funcExp3 = (function (...rest) { rest; })()
>funcExp3 : void
>(function (...rest) { rest; })() : void
>(function (...rest) { rest; }) : (...rest: any[]) => void
>function (...rest) { rest; } : (...rest: any[]) => void
>rest : any[]
>rest : any[]

var funcExp4 = (...rest) => rest;
>funcExp4 : (...rest: any[]) => any[]
>(...rest) => rest : (...rest: any[]) => any[]
>rest : any[]
>rest : any[]

