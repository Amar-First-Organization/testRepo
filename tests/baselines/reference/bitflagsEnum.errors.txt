tests/cases/compiler/bitflagsEnum.ts(14,5): error TS18037: An enum member can only set one bit witout operator in bitflags enum.
tests/cases/compiler/bitflagsEnum.ts(18,5): error TS18036: An enum member can only be number in bitflags enum.
tests/cases/compiler/bitflagsEnum.ts(22,5): error TS18038: An enum member initializer can only use bitwise operator in bitflags enum.
tests/cases/compiler/bitflagsEnum.ts(23,5): error TS18038: An enum member initializer can only use bitwise operator in bitflags enum.
tests/cases/compiler/bitflagsEnum.ts(24,5): error TS18038: An enum member initializer can only use bitwise operator in bitflags enum.
tests/cases/compiler/bitflagsEnum.ts(33,9): error TS18033: Only numeric enums can have computed members, but this expression has type 'string'. If you do not need exhaustiveness checks, consider using an object literal instead.
tests/cases/compiler/bitflagsEnum.ts(38,10): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
tests/cases/compiler/bitflagsEnum.ts(38,10): error TS2623: Bit operation is only allowed for enum with 'bitflags' modifier
tests/cases/compiler/bitflagsEnum.ts(39,1): error TS2623: Bit operation is only allowed for enum with 'bitflags' modifier


==== tests/cases/compiler/bitflagsEnum.ts (9 errors) ====
    bitflags enum BitEnum {
        TS = 1,
        TSX = 2,
        All = TS | TSX,
    }
    
    var foo1 = BitEnum.TS;
    var foo2 = BitEnum.TSX;
    var foo3 = foo1 | foo2; // foo3 is possiable to be BitEnum.All?
    declare var foo4: BitEnum;
    var foo5 = foo4 & foo1; // foo5 is possiable to be BitEnum.TS?
    
    bitflags enum BitEnum1 {
        FOO = 3
        ~~~
!!! error TS18037: An enum member can only set one bit witout operator in bitflags enum.
    }
    
    bitflags enum BitEnum2 {
        FOO = "foo"
        ~~~
!!! error TS18036: An enum member can only be number in bitflags enum.
    }
    
    bitflags enum BitEnum3 {
        FOO = 1 + 2,
        ~~~
!!! error TS18038: An enum member initializer can only use bitwise operator in bitflags enum.
        Foo2 = 1 + 2 | 7,
        ~~~~
!!! error TS18038: An enum member initializer can only use bitwise operator in bitflags enum.
        Foo3 = 7 | 1 + 2
        ~~~~
!!! error TS18038: An enum member initializer can only use bitwise operator in bitflags enum.
    }
    
    enum NormalEnum {
        Black,
        White
    }
    
    enum Q{
        q = "2"+1
            ~~~~~
!!! error TS18033: Only numeric enums can have computed members, but this expression has type 'string'. If you do not need exhaustiveness checks, consider using an object literal instead.
    }
    
    var q1 = NormalEnum.Black;
    var w1 = NormalEnum.White;
    var e1 = "123" | w1;
             ~~~~~
!!! error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
             ~~~~~~~~~~
!!! error TS2623: Bit operation is only allowed for enum with 'bitflags' modifier
    q1 |= 2;
    ~~~~~~~
!!! error TS2623: Bit operation is only allowed for enum with 'bitflags' modifier
    