=== tests/cases/compiler/typeInferenceTypePredicate2.ts ===
[true, true, false, null]
>[true, true, false, null]    .filter((thing): thing is boolean => thing !== null)    .map : Symbol(Array.map, Decl(lib.es2009.array.d.ts, --, --))
>[true, true, false, null]    .filter : Symbol(Array.filter, Decl(lib.es2009.array.d.ts, --, --), Decl(lib.es2009.array.d.ts, --, --))

    .filter((thing): thing is boolean => thing !== null)
>filter : Symbol(Array.filter, Decl(lib.es2009.array.d.ts, --, --), Decl(lib.es2009.array.d.ts, --, --))
>thing : Symbol(thing, Decl(typeInferenceTypePredicate2.ts, 1, 13))
>thing : Symbol(thing, Decl(typeInferenceTypePredicate2.ts, 1, 13))
>thing : Symbol(thing, Decl(typeInferenceTypePredicate2.ts, 1, 13))

    .map(thing => thing.toString());
>map : Symbol(Array.map, Decl(lib.es2009.array.d.ts, --, --))
>thing : Symbol(thing, Decl(typeInferenceTypePredicate2.ts, 2, 9))
>thing.toString : Symbol(Object.toString, Decl(lib.es2009.object.d.ts, --, --))
>thing : Symbol(thing, Decl(typeInferenceTypePredicate2.ts, 2, 9))
>toString : Symbol(Object.toString, Decl(lib.es2009.object.d.ts, --, --))

