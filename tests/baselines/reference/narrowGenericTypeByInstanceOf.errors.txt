tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(1,27): error TS2307: Cannot find module 'querystring'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(24,21): error TS2345: Argument of type 'Child<number>' is not assignable to parameter of type 'Child<string>'.
  Type 'number' is not assignable to type 'string'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(49,21): error TS2345: Argument of type 'Child<number>' is not assignable to parameter of type 'Child<string>'.
  Type 'number' is not assignable to type 'string'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(77,27): error TS2345: Argument of type 'Child<string, number>' is not assignable to parameter of type 'Child<number, string>'.
  Type 'string' is not assignable to type 'number'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(108,21): error TS2345: Argument of type 'Parent<number, string> & Child<string | number>' is not assignable to parameter of type 'Child<number>'.
  Types of property 'value3' are incompatible.
    Type 'string | number' is not assignable to type 'number'.
      Type 'string' is not assignable to type 'number'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(109,21): error TS2345: Argument of type 'Parent<number, string> & Child<string | number>' is not assignable to parameter of type 'Child<string>'.
  Types of property 'value3' are incompatible.
    Type 'string | number' is not assignable to type 'string'.
      Type 'number' is not assignable to type 'string'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(110,30): error TS2345: Argument of type 'Parent<number, string> & Child<string | number>' is not assignable to parameter of type 'Child<string & number>'.
  Types of property 'value3' are incompatible.
    Type 'string | number' is not assignable to type 'string & number'.
      Type 'string' is not assignable to type 'string & number'.
        Type 'string' is not assignable to type 'number'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(114,21): error TS2345: Argument of type 'Child<number>' is not assignable to parameter of type 'Child<string>'.
  Type 'number' is not assignable to type 'string'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(115,30): error TS2345: Argument of type 'Child<number>' is not assignable to parameter of type 'Child<string & number>'.
  Type 'number' is not assignable to type 'string & number'.
    Type 'number' is not assignable to type 'string'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(142,16): error TS2345: Argument of type 'Parent<S, T> & Child<S | T>' is not assignable to parameter of type 'Child<S>'.
  Types of property 'value3' are incompatible.
    Type 'S | T' is not assignable to type 'S'.
      Type 'T' is not assignable to type 'S'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(143,16): error TS2345: Argument of type 'Parent<S, T> & Child<S | T>' is not assignable to parameter of type 'Child<T>'.
  Types of property 'value3' are incompatible.
    Type 'S | T' is not assignable to type 'T'.
      Type 'S' is not assignable to type 'T'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(144,20): error TS2345: Argument of type 'Parent<S, T> & Child<S | T>' is not assignable to parameter of type 'Child<S & T>'.
  Types of property 'value3' are incompatible.
    Type 'S | T' is not assignable to type 'S & T'.
      Type 'S' is not assignable to type 'S & T'.
        Type 'S' is not assignable to type 'T'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(177,21): error TS2345: Argument of type 'Child<string> | Child<number> | Child<{ foo: string; }>' is not assignable to parameter of type 'Child<string>'.
  Type 'Child<number>' is not assignable to type 'Child<string>'.
    Type 'number' is not assignable to type 'string'.
tests/cases/compiler/narrowGenericTypeByInstanceOf.ts(178,21): error TS2345: Argument of type 'Child<string> | Child<number> | Child<{ foo: string; }>' is not assignable to parameter of type 'Child<number>'.
  Type 'Child<string>' is not assignable to type 'Child<number>'.
    Type 'string' is not assignable to type 'number'.


==== tests/cases/compiler/narrowGenericTypeByInstanceOf.ts (14 errors) ====
    import { stringify } from "querystring";
                              ~~~~~~~~~~~~~
!!! error TS2307: Cannot find module 'querystring'.
    
    function example1() {
      class Parent<T> {
        value: T;
      }
    
      class Child<T> extends Parent<T> {
        other: T;
      }
    
      const obj = new Parent<number>();
    
      function onlyChildNumber(child: Child<number>) {
        // no-op
      }
      function onlyChildString(child: Child<string>) {
        // no-op
      }
    
      if (obj instanceof Child) {
        onlyChildNumber(obj); // should PASS
    
        onlyChildString(obj); // should ERROR: Child<number> is not assignable to Child<string>.
                        ~~~
!!! error TS2345: Argument of type 'Child<number>' is not assignable to parameter of type 'Child<string>'.
!!! error TS2345:   Type 'number' is not assignable to type 'string'.
      }
    }
    function example2() {
      class Parent<A, B> {
        value1: A;
        value2: B;
      }
    
      class Child<T> extends Parent<T, T> {
        other: T;
      }
    
      const obj = new Parent<number, number>();
    
      function onlyChildNumber(child: Child<number>) {
        // no-op
      }
      function onlyChildString(child: Child<string>) {
        // no-op
      }
    
      if (obj instanceof Child) {
        onlyChildNumber(obj); // should PASS
    
        onlyChildString(obj); // should ERROR: Child<number> is not assignable to Child<string>.
                        ~~~
!!! error TS2345: Argument of type 'Child<number>' is not assignable to parameter of type 'Child<string>'.
!!! error TS2345:   Type 'number' is not assignable to type 'string'.
      }
    }
    
    function example3() {
      class Parent<A, B> {
        value1: A;
        value2: B;
      }
    
      class Child<C, D> extends Parent<D, C> {
        value3: C;
        value4: D;
      }
    
      const obj = new Parent<number, string>();
    
      function onlyChildNumberString(child: Child<number, string>) {
        // no-op
      }
      function onlyChildStringNumber(child: Child<string, number>) {
        // no-op
      }
      function onlyChildNumberNumber(child: Child<string, number>) {
        // no-op
      }
    
      if (obj instanceof Child) {
        onlyChildNumberString(obj); // should ERROR: Child<string, number> is not assignable to Child<number, string>.
                              ~~~
!!! error TS2345: Argument of type 'Child<string, number>' is not assignable to parameter of type 'Child<number, string>'.
!!! error TS2345:   Type 'string' is not assignable to type 'number'.
        onlyChildNumberNumber(obj); // should ERROR: Child<number, number> is not assignable to Child<number, string>.
    
        onlyChildStringNumber(obj); // should PASS
      }
    }
    
    function example4() {
      class Parent<A, B> {
        value1: A;
        value2: B;
      }
    
      class Child<C> extends Parent<C, C> {
        value3: C;
      }
    
      const obj1 = new Parent<number, string>();
      const obj2 = new Parent<number, number>();
    
      function onlyChildNumber(child: Child<number>) {
        // no-op
      }
      function onlyChildString(child: Child<string>) {
        // no-op
      }
      function onlyChildStringAndNumber(child: Child<string & number>) {
        // no-op
      }
    
      if (obj1 instanceof Child) {
        onlyChildNumber(obj1);
                        ~~~~
!!! error TS2345: Argument of type 'Parent<number, string> & Child<string | number>' is not assignable to parameter of type 'Child<number>'.
!!! error TS2345:   Types of property 'value3' are incompatible.
!!! error TS2345:     Type 'string | number' is not assignable to type 'number'.
!!! error TS2345:       Type 'string' is not assignable to type 'number'.
        onlyChildString(obj1);
                        ~~~~
!!! error TS2345: Argument of type 'Parent<number, string> & Child<string | number>' is not assignable to parameter of type 'Child<string>'.
!!! error TS2345:   Types of property 'value3' are incompatible.
!!! error TS2345:     Type 'string | number' is not assignable to type 'string'.
!!! error TS2345:       Type 'number' is not assignable to type 'string'.
        onlyChildStringAndNumber(obj1);
                                 ~~~~
!!! error TS2345: Argument of type 'Parent<number, string> & Child<string | number>' is not assignable to parameter of type 'Child<string & number>'.
!!! error TS2345:   Types of property 'value3' are incompatible.
!!! error TS2345:     Type 'string | number' is not assignable to type 'string & number'.
!!! error TS2345:       Type 'string' is not assignable to type 'string & number'.
!!! error TS2345:         Type 'string' is not assignable to type 'number'.
      }
      if (obj2 instanceof Child) {
        onlyChildNumber(obj2);
        onlyChildString(obj2);
                        ~~~~
!!! error TS2345: Argument of type 'Child<number>' is not assignable to parameter of type 'Child<string>'.
!!! error TS2345:   Type 'number' is not assignable to type 'string'.
        onlyChildStringAndNumber(obj2);
                                 ~~~~
!!! error TS2345: Argument of type 'Child<number>' is not assignable to parameter of type 'Child<string & number>'.
!!! error TS2345:   Type 'number' is not assignable to type 'string & number'.
!!! error TS2345:     Type 'number' is not assignable to type 'string'.
      }
    }
    
    function example5<S, T>() {
      class Parent<A, B> {
        value1: A;
        value2: B;
      }
    
      class Child<C> extends Parent<C, C> {
        value3: C;
      }
    
      const obj = new Parent<S, T>();
    
      function onlyChildS(child: Child<S>) {
        // no-op
      }
      function onlyChildT(child: Child<T>) {
        // no-op
      }
      function onlyChildSAndT(child: Child<S & T>) {
        // no-op
      }
    
      if (obj instanceof Child) {
        onlyChildS(obj);
                   ~~~
!!! error TS2345: Argument of type 'Parent<S, T> & Child<S | T>' is not assignable to parameter of type 'Child<S>'.
!!! error TS2345:   Types of property 'value3' are incompatible.
!!! error TS2345:     Type 'S | T' is not assignable to type 'S'.
!!! error TS2345:       Type 'T' is not assignable to type 'S'.
        onlyChildT(obj);
                   ~~~
!!! error TS2345: Argument of type 'Parent<S, T> & Child<S | T>' is not assignable to parameter of type 'Child<T>'.
!!! error TS2345:   Types of property 'value3' are incompatible.
!!! error TS2345:     Type 'S | T' is not assignable to type 'T'.
!!! error TS2345:       Type 'S' is not assignable to type 'T'.
        onlyChildSAndT(obj);
                       ~~~
!!! error TS2345: Argument of type 'Parent<S, T> & Child<S | T>' is not assignable to parameter of type 'Child<S & T>'.
!!! error TS2345:   Types of property 'value3' are incompatible.
!!! error TS2345:     Type 'S | T' is not assignable to type 'S & T'.
!!! error TS2345:       Type 'S' is not assignable to type 'S & T'.
!!! error TS2345:         Type 'S' is not assignable to type 'T'.
      }
    }
    
    function example6() {
      class Parent<A, B> {
        value1: A;
        value2: B;
      }
    
      class Child<C> extends Parent<C, C> {
        value3: C;
      }
    
      const obj:
        | Parent<{ foo: string }, { foo: string }>
        | Parent<string, string>
        | Parent<number, number> = undefined as any;
    
      const obj1 = undefined as Parent<{ foo: string }, { foo: string }>;
      const obj2 = undefined as Parent<string, string>;
      const obj3 = undefined as Parent<number, number>;
      const obj4 = undefined as string | { foo: string };
      const obj5 = undefined as { foo: string };
    
      function onlyChildString(child: Child<string>) {
        // no-op
      }
      function onlyChildNumber(child: Child<number>) {
        // no-op
      }
    
      if (obj instanceof Child) {
        onlyChildString(obj);
                        ~~~
!!! error TS2345: Argument of type 'Child<string> | Child<number> | Child<{ foo: string; }>' is not assignable to parameter of type 'Child<string>'.
!!! error TS2345:   Type 'Child<number>' is not assignable to type 'Child<string>'.
!!! error TS2345:     Type 'number' is not assignable to type 'string'.
        onlyChildNumber(obj);
                        ~~~
!!! error TS2345: Argument of type 'Child<string> | Child<number> | Child<{ foo: string; }>' is not assignable to parameter of type 'Child<number>'.
!!! error TS2345:   Type 'Child<string>' is not assignable to type 'Child<number>'.
!!! error TS2345:     Type 'string' is not assignable to type 'number'.
      }
    
      if (obj1 instanceof Child) {
        console.log(obj1);
      }
      if (obj2 instanceof Child) {
        console.log(obj2);
      }
      if (obj3 instanceof Child) {
        console.log(obj3);
      }
      if (obj4 instanceof Child) {
        console.log(obj4);
      }
      if (obj5 instanceof Child) {
        console.log(obj5);
      }
    }
    
    function negative1() {
      class Parent<A, B> {
        value1: A;
        value2: B;
      }
    
      class Child<C> extends Parent<C, C> {
        value3: C;
      }
    
      const obj:
        | Parent<string, string>
        | Parent<string, number>
        | Child<string> = undefined as any;
    
      if (obj instanceof Child) {
        return;
      }
    
      console.log(obj);
    }
    