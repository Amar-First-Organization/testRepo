//// [tests/cases/compiler/contextuallyTypedParametersPositionIncludesClassWithPrivateMember1.ts] ////

=== contextuallyTypedParametersPositionIncludesClassWithPrivateMember1.ts ===
class Foo {
>Foo : Foo

  #foo = "foo";
>#foo : string
>"foo" : "foo"

  doStuff(cb: (arg: string) => void) {}
>doStuff : (cb: (arg: string) => void) => void
>cb : (arg: string) => void
>arg : string
}

interface FooLike {
  doStuff: (cb: (arg: number) => void) => void;
>doStuff : (cb: (arg: number) => void) => void
>cb : (arg: number) => void
>arg : number
}

declare function useIt(arg: Foo | FooLike): void;
>useIt : (arg: Foo | FooLike) => void
>arg : Foo | FooLike

useIt({
>useIt({  doStuff: (arg) => {},}) : void
>useIt : (arg: Foo | FooLike) => void
>{  doStuff: (arg) => {},} : { doStuff: (arg: (arg: number) => void) => void; }

  doStuff: (arg) => {},
>doStuff : (arg: (arg: number) => void) => void
>(arg) => {} : (arg: (arg: number) => void) => void
>arg : (arg: number) => void

});

