=== tests/cases/compiler/expressionInExtendsClause.ts ===

export class C<T, U> {
>C : Symbol(C, Decl(expressionInExtendsClause.ts, 0, 0))
>T : Symbol(T, Decl(expressionInExtendsClause.ts, 1, 15))
>U : Symbol(U, Decl(expressionInExtendsClause.ts, 1, 17))

    x: T;
>x : Symbol(x, Decl(expressionInExtendsClause.ts, 1, 22))
>T : Symbol(T, Decl(expressionInExtendsClause.ts, 1, 15))

    y: U;
>y : Symbol(y, Decl(expressionInExtendsClause.ts, 2, 9))
>U : Symbol(U, Decl(expressionInExtendsClause.ts, 1, 17))
}

// Not exported, but not important in declaration generation
function getClass(a) {
>getClass : Symbol(getClass, Decl(expressionInExtendsClause.ts, 4, 1))
>a : Symbol(a, Decl(expressionInExtendsClause.ts, 7, 18))

    return C;
>C : Symbol(C, Decl(expressionInExtendsClause.ts, 0, 0))
}

export class MyClass extends getClass(2) <string, number> {
>MyClass : Symbol(MyClass, Decl(expressionInExtendsClause.ts, 9, 1))
>getClass : Symbol(getClass, Decl(expressionInExtendsClause.ts, 4, 1))
}


