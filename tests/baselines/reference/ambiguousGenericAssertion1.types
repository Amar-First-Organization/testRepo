=== tests/cases/compiler/ambiguousGenericAssertion1.ts ===
function f<T>(x: T): T { return null; }
>f : <T>(x: T) => T
>x : T
>null : null

var r = <T>(x: T) => x;
>r : <T>(x: T) => T
><T>(x: T) => x : <T>(x: T) => T
>x : T
>x : T

var r2 = < <T>(x: T) => T>f; // valid
>r2 : <T>(x: T) => T
>< <T>(x: T) => T>f : <T>(x: T) => T
>x : T
>f : <T>(x: T) => T

var r3 = <<T>(x: T) => T>f; // ambiguous, appears to the parser as a << operation
>r3 : boolean
><<T> : boolean
><<T : number
> : any
>T : any
>(x: T) => T>f : (x: any) => boolean
>x : any
>T>f : boolean
>T : any
>f : <T>(x: T) => T
>(x: T) => T>f : (x: any) => boolean
>x : any
>T>f : boolean
>T : any
>f : <T>(x: T) => T

