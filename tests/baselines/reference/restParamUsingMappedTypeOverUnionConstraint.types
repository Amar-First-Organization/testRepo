=== tests/cases/compiler/restParamUsingMappedTypeOverUnionConstraint.ts ===
// repro 29919#issuecomment-470948453

type Mapped<T> = { [P in keyof T]: T[P] extends string ? [number] : [string] }
>Mapped : Mapped<T>

declare function test<T extends [number] | [string]>(
>test : <T extends [number] | [string]>(args: T, fn: (...args: Mapped<T>) => void) => number

  args: T,
>args : T

  fn: (...args: Mapped<T>) => void
>fn : (...args: Mapped<T>) => void
>args : Mapped<T>

): number

