tests/cases/compiler/genericRecursiveImplicitConstructorErrors1.ts(9,49): error TS2707: Type parameter 'A' implicitly has type 'any' because it was not supplied.
tests/cases/compiler/genericRecursiveImplicitConstructorErrors1.ts(9,49): error TS2707: Type parameter 'B' implicitly has type 'any' because it was not supplied.
tests/cases/compiler/genericRecursiveImplicitConstructorErrors1.ts(9,49): error TS2707: Type parameter 'C' implicitly has type 'any' because it was not supplied.


==== tests/cases/compiler/genericRecursiveImplicitConstructorErrors1.ts (3 errors) ====
    export declare module TypeScript {
      class PullSymbol { }
      class PullSignatureSymbol <A,B,C> extends PullSymbol {
      public addSpecialization<A,B,C>(signature: PullSignatureSymbol<A,B,C>, typeArguments: PullTypeSymbol<any,any,any>[]): void;
      }
      class PullTypeSymbol <A,B,C> extends PullSymbol {
        public findTypeParameter<A,B,C>(name: string): PullTypeParameterSymbol<A,B,C>;
      }
      class PullTypeParameterSymbol <A,B,C> extends PullTypeSymbol {
                                                    ~~~~~~~~~~~~~~
!!! error TS2707: Type parameter 'A' implicitly has type 'any' because it was not supplied.
                                                    ~~~~~~~~~~~~~~
!!! error TS2707: Type parameter 'B' implicitly has type 'any' because it was not supplied.
                                                    ~~~~~~~~~~~~~~
!!! error TS2707: Type parameter 'C' implicitly has type 'any' because it was not supplied.
      }
    }
    
    