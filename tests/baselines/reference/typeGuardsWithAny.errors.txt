tests/cases/conformance/expressions/typeGuards/typeGuardsWithAny.ts(10,7): error TS2339: Property 'p' does not exist on type 'Object'.
tests/cases/conformance/expressions/typeGuards/typeGuardsWithAny.ts(17,7): error TS2339: Property 'p' does not exist on type 'string'.
tests/cases/conformance/expressions/typeGuards/typeGuardsWithAny.ts(24,7): error TS2339: Property 'p' does not exist on type 'number'.
tests/cases/conformance/expressions/typeGuards/typeGuardsWithAny.ts(31,7): error TS2339: Property 'p' does not exist on type 'boolean'.
tests/cases/conformance/expressions/typeGuards/typeGuardsWithAny.ts(45,7): error TS2339: Property 'p' does not exist on type 'Foo'.
tests/cases/conformance/expressions/typeGuards/typeGuardsWithAny.ts(52,7): error TS2339: Property 'p' does not exist on type 'Bar'.


==== tests/cases/conformance/expressions/typeGuards/typeGuardsWithAny.ts (6 errors) ====
    var x: any = { p: 0 };
    
    declare class Foo { }
    interface Bar { }
    
    declare function isFoo(x: any): x is Foo;
    declare function isBar(x: any): x is Bar;
    
    if (x instanceof Object) {
        x.p; // Error, type narrowed by instanceof type guard
          ~
!!! error TS2339: Property 'p' does not exist on type 'Object'.
    }
    else {
        x.p; // No error, type any unaffected by instanceof type guard
    }
    
    if (typeof x === "string") {
        x.p; // Error, type any narrowed by primitive type check
          ~
!!! error TS2339: Property 'p' does not exist on type 'string'.
    }
    else {
        x.p; // No error, type unaffected in this branch
    }
    
    if (typeof x === "number") {
        x.p; // Error, type any narrowed by primitive type check
          ~
!!! error TS2339: Property 'p' does not exist on type 'number'.
    }
    else {
        x.p; // No error, type unaffected in this branch
    }
    
    if (typeof x === "boolean") {
        x.p; // Error, type any narrowed by primitive type check
          ~
!!! error TS2339: Property 'p' does not exist on type 'boolean'.
    }
    else {
        x.p; // No error, type unaffected in this branch
    }
    
    if (typeof x === "object") {
        x.p; // No error, type any only affected by primitive type check
    }
    else {
        x.p; // No error, type unaffected in this branch
    }
    
    if (isFoo(x)) {
        x.p; // Error, type narrowed by user-defined type guard
          ~
!!! error TS2339: Property 'p' does not exist on type 'Foo'.
    }
    else {
        x.p; // No error, type unaffected in this branch
    }
    
    if (isBar(x)) {
        x.p; // Error, type narrowed by user-defined type guard
          ~
!!! error TS2339: Property 'p' does not exist on type 'Bar'.
    }
    else {
        x.p; // No error, type unaffected in this branch
    }