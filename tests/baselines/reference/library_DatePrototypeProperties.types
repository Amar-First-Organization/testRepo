=== tests/cases/compiler/library_DatePrototypeProperties.ts ===
// Properties of the Date prototype object as per ES5 spec
// http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.5
Date.prototype.constructor;
>Date.prototype.constructor : Function
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>constructor : Function

Date.prototype.toString();
>Date.prototype.toString() : string
>Date.prototype.toString : (this: Date) => string
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toString : (this: Date) => string

Date.prototype.toDateString();
>Date.prototype.toDateString() : string
>Date.prototype.toDateString : (this: Date) => string
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toDateString : (this: Date) => string

Date.prototype.toTimeString();
>Date.prototype.toTimeString() : string
>Date.prototype.toTimeString : (this: Date) => string
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toTimeString : (this: Date) => string

Date.prototype.toLocaleString();
>Date.prototype.toLocaleString() : string
>Date.prototype.toLocaleString : { (this: Date): string; (this: Date, locales?: string | string[], options?: Intl.DateTimeFormatOptions): string; }
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toLocaleString : { (this: Date): string; (this: Date, locales?: string | string[], options?: Intl.DateTimeFormatOptions): string; }

Date.prototype.toLocaleDateString();
>Date.prototype.toLocaleDateString() : string
>Date.prototype.toLocaleDateString : { (this: Date): string; (this: Date, locales?: string | string[], options?: Intl.DateTimeFormatOptions): string; }
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toLocaleDateString : { (this: Date): string; (this: Date, locales?: string | string[], options?: Intl.DateTimeFormatOptions): string; }

Date.prototype.toLocaleTimeString();
>Date.prototype.toLocaleTimeString() : string
>Date.prototype.toLocaleTimeString : { (this: Date): string; (this: Date, locales?: string | string[], options?: Intl.DateTimeFormatOptions): string; }
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toLocaleTimeString : { (this: Date): string; (this: Date, locales?: string | string[], options?: Intl.DateTimeFormatOptions): string; }

Date.prototype.valueOf();
>Date.prototype.valueOf() : number
>Date.prototype.valueOf : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>valueOf : (this: Date) => number

Date.prototype.getTime();
>Date.prototype.getTime() : number
>Date.prototype.getTime : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getTime : (this: Date) => number

Date.prototype.getFullYear();
>Date.prototype.getFullYear() : number
>Date.prototype.getFullYear : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getFullYear : (this: Date) => number

Date.prototype.getUTCFullYear();
>Date.prototype.getUTCFullYear() : number
>Date.prototype.getUTCFullYear : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCFullYear : (this: Date) => number

Date.prototype.getMonth();
>Date.prototype.getMonth() : number
>Date.prototype.getMonth : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getMonth : (this: Date) => number

Date.prototype.getUTCMonth();
>Date.prototype.getUTCMonth() : number
>Date.prototype.getUTCMonth : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCMonth : (this: Date) => number

Date.prototype.getDate();
>Date.prototype.getDate() : number
>Date.prototype.getDate : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getDate : (this: Date) => number

Date.prototype.getUTCDate();
>Date.prototype.getUTCDate() : number
>Date.prototype.getUTCDate : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCDate : (this: Date) => number

Date.prototype.getDay();
>Date.prototype.getDay() : number
>Date.prototype.getDay : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getDay : (this: Date) => number

Date.prototype.getUTCDay();
>Date.prototype.getUTCDay() : number
>Date.prototype.getUTCDay : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCDay : (this: Date) => number

Date.prototype.getHours();
>Date.prototype.getHours() : number
>Date.prototype.getHours : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getHours : (this: Date) => number

Date.prototype.getUTCHours();
>Date.prototype.getUTCHours() : number
>Date.prototype.getUTCHours : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCHours : (this: Date) => number

Date.prototype.getMinutes();
>Date.prototype.getMinutes() : number
>Date.prototype.getMinutes : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getMinutes : (this: Date) => number

Date.prototype.getUTCMinutes();
>Date.prototype.getUTCMinutes() : number
>Date.prototype.getUTCMinutes : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCMinutes : (this: Date) => number

Date.prototype.getSeconds();
>Date.prototype.getSeconds() : number
>Date.prototype.getSeconds : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getSeconds : (this: Date) => number

Date.prototype.getUTCSeconds();
>Date.prototype.getUTCSeconds() : number
>Date.prototype.getUTCSeconds : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCSeconds : (this: Date) => number

Date.prototype.getMilliseconds();
>Date.prototype.getMilliseconds() : number
>Date.prototype.getMilliseconds : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getMilliseconds : (this: Date) => number

Date.prototype.getUTCMilliseconds();
>Date.prototype.getUTCMilliseconds() : number
>Date.prototype.getUTCMilliseconds : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getUTCMilliseconds : (this: Date) => number

Date.prototype.getTimezoneOffset();
>Date.prototype.getTimezoneOffset() : number
>Date.prototype.getTimezoneOffset : (this: Date) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>getTimezoneOffset : (this: Date) => number

Date.prototype.setTime(0);
>Date.prototype.setTime(0) : number
>Date.prototype.setTime : (this: Date, time: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setTime : (this: Date, time: number) => number
>0 : 0

Date.prototype.setMilliseconds(0);
>Date.prototype.setMilliseconds(0) : number
>Date.prototype.setMilliseconds : (this: Date, ms: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setMilliseconds : (this: Date, ms: number) => number
>0 : 0

Date.prototype.setUTCMilliseconds(0);
>Date.prototype.setUTCMilliseconds(0) : number
>Date.prototype.setUTCMilliseconds : (this: Date, ms: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCMilliseconds : (this: Date, ms: number) => number
>0 : 0

Date.prototype.setSeconds(0);
>Date.prototype.setSeconds(0) : number
>Date.prototype.setSeconds : (this: Date, sec: number, ms?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setSeconds : (this: Date, sec: number, ms?: number) => number
>0 : 0

Date.prototype.setUTCSeconds(0);
>Date.prototype.setUTCSeconds(0) : number
>Date.prototype.setUTCSeconds : (this: Date, sec: number, ms?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCSeconds : (this: Date, sec: number, ms?: number) => number
>0 : 0

Date.prototype.setMinutes(0);
>Date.prototype.setMinutes(0) : number
>Date.prototype.setMinutes : (this: Date, min: number, sec?: number, ms?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setMinutes : (this: Date, min: number, sec?: number, ms?: number) => number
>0 : 0

Date.prototype.setUTCMinutes(0);
>Date.prototype.setUTCMinutes(0) : number
>Date.prototype.setUTCMinutes : (this: Date, min: number, sec?: number, ms?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCMinutes : (this: Date, min: number, sec?: number, ms?: number) => number
>0 : 0

Date.prototype.setHours(0);
>Date.prototype.setHours(0) : number
>Date.prototype.setHours : (this: Date, hours: number, min?: number, sec?: number, ms?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setHours : (this: Date, hours: number, min?: number, sec?: number, ms?: number) => number
>0 : 0

Date.prototype.setUTCHours(0);
>Date.prototype.setUTCHours(0) : number
>Date.prototype.setUTCHours : (this: Date, hours: number, min?: number, sec?: number, ms?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCHours : (this: Date, hours: number, min?: number, sec?: number, ms?: number) => number
>0 : 0

Date.prototype.setDate(0);
>Date.prototype.setDate(0) : number
>Date.prototype.setDate : (this: Date, date: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setDate : (this: Date, date: number) => number
>0 : 0

Date.prototype.setUTCDate(0);
>Date.prototype.setUTCDate(0) : number
>Date.prototype.setUTCDate : (this: Date, date: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCDate : (this: Date, date: number) => number
>0 : 0

Date.prototype.setMonth(0);
>Date.prototype.setMonth(0) : number
>Date.prototype.setMonth : (this: Date, month: number, date?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setMonth : (this: Date, month: number, date?: number) => number
>0 : 0

Date.prototype.setUTCMonth(0);
>Date.prototype.setUTCMonth(0) : number
>Date.prototype.setUTCMonth : (this: Date, month: number, date?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCMonth : (this: Date, month: number, date?: number) => number
>0 : 0

Date.prototype.setFullYear(0);
>Date.prototype.setFullYear(0) : number
>Date.prototype.setFullYear : (this: Date, year: number, month?: number, date?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setFullYear : (this: Date, year: number, month?: number, date?: number) => number
>0 : 0

Date.prototype.setUTCFullYear(0);
>Date.prototype.setUTCFullYear(0) : number
>Date.prototype.setUTCFullYear : (this: Date, year: number, month?: number, date?: number) => number
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>setUTCFullYear : (this: Date, year: number, month?: number, date?: number) => number
>0 : 0

Date.prototype.toUTCString();
>Date.prototype.toUTCString() : string
>Date.prototype.toUTCString : (this: Date) => string
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toUTCString : (this: Date) => string

Date.prototype.toISOString();
>Date.prototype.toISOString() : string
>Date.prototype.toISOString : (this: Date) => string
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toISOString : (this: Date) => string

Date.prototype.toJSON(null);
>Date.prototype.toJSON(null) : string
>Date.prototype.toJSON : (this: Date, key?: any) => string
>Date.prototype : Date
>Date : DateConstructor
>prototype : Date
>toJSON : (this: Date, key?: any) => string
>null : null

