=== tests/cases/conformance/jsx/file.tsx ===

import React = require('react')
>React : Symbol(React, Decl(file.tsx, 0, 0))


declare function ComponentWithTwoAttributes<K,V>(l: {key1: K, value: V}): JSX.Element;
>ComponentWithTwoAttributes : Symbol(ComponentWithTwoAttributes, Decl(file.tsx, 1, 31))
>K : Symbol(K, Decl(file.tsx, 4, 44))
>V : Symbol(V, Decl(file.tsx, 4, 46))
>l : Symbol(l, Decl(file.tsx, 4, 49))
>key1 : Symbol(key1, Decl(file.tsx, 4, 53))
>K : Symbol(K, Decl(file.tsx, 4, 44))
>value : Symbol(value, Decl(file.tsx, 4, 61))
>V : Symbol(V, Decl(file.tsx, 4, 46))
>JSX : Symbol(JSX, Decl(react.d.ts, 2352, 1))
>Element : Symbol(JSX.Element, Decl(react.d.ts, 2355, 27))

// OK
function Baz<T,U>(key1: T, value: U) {
>Baz : Symbol(Baz, Decl(file.tsx, 4, 86))
>T : Symbol(T, Decl(file.tsx, 7, 13))
>U : Symbol(U, Decl(file.tsx, 7, 15))
>key1 : Symbol(key1, Decl(file.tsx, 7, 18))
>T : Symbol(T, Decl(file.tsx, 7, 13))
>value : Symbol(value, Decl(file.tsx, 7, 26))
>U : Symbol(U, Decl(file.tsx, 7, 15))

    let a0 = <ComponentWithTwoAttributes key1={key1} value={value} />
>a0 : Symbol(a0, Decl(file.tsx, 8, 7))
>ComponentWithTwoAttributes : Symbol(ComponentWithTwoAttributes, Decl(file.tsx, 1, 31))
>key1 : Symbol(key1, Decl(file.tsx, 8, 40))
>key1 : Symbol(key1, Decl(file.tsx, 7, 18))
>value : Symbol(value, Decl(file.tsx, 8, 52))
>value : Symbol(value, Decl(file.tsx, 7, 26))

    let a1 = <ComponentWithTwoAttributes {...{key1, value: value}} key="Component" />
>a1 : Symbol(a1, Decl(file.tsx, 9, 7))
>ComponentWithTwoAttributes : Symbol(ComponentWithTwoAttributes, Decl(file.tsx, 1, 31))
>key1 : Symbol(key1, Decl(file.tsx, 9, 46))
>value : Symbol(value, Decl(file.tsx, 9, 51))
>value : Symbol(value, Decl(file.tsx, 7, 26))
>key : Symbol(key, Decl(file.tsx, 9, 66))
}

// OK
declare function Component<U>(l: U): JSX.Element;
>Component : Symbol(Component, Decl(file.tsx, 10, 1))
>U : Symbol(U, Decl(file.tsx, 13, 27))
>l : Symbol(l, Decl(file.tsx, 13, 30))
>U : Symbol(U, Decl(file.tsx, 13, 27))
>JSX : Symbol(JSX, Decl(react.d.ts, 2352, 1))
>Element : Symbol(JSX.Element, Decl(react.d.ts, 2355, 27))

function createComponent<T extends {prop: number}>(arg:T) {
>createComponent : Symbol(createComponent, Decl(file.tsx, 13, 49))
>T : Symbol(T, Decl(file.tsx, 14, 25))
>prop : Symbol(prop, Decl(file.tsx, 14, 36))
>arg : Symbol(arg, Decl(file.tsx, 14, 51))
>T : Symbol(T, Decl(file.tsx, 14, 25))

    let a1 = <Component {...arg} />;
>a1 : Symbol(a1, Decl(file.tsx, 15, 7))
>Component : Symbol(Component, Decl(file.tsx, 10, 1))
>arg : Symbol(arg, Decl(file.tsx, 14, 51))

    let a2 = <Component {...arg} prop1 />;
>a2 : Symbol(a2, Decl(file.tsx, 16, 7))
>Component : Symbol(Component, Decl(file.tsx, 10, 1))
>arg : Symbol(arg, Decl(file.tsx, 14, 51))
>prop1 : Symbol(prop1, Decl(file.tsx, 16, 32))
}

declare function ComponentSpecific<U>(l: {prop: U}): JSX.Element;
>ComponentSpecific : Symbol(ComponentSpecific, Decl(file.tsx, 17, 1))
>U : Symbol(U, Decl(file.tsx, 19, 35))
>l : Symbol(l, Decl(file.tsx, 19, 38))
>prop : Symbol(prop, Decl(file.tsx, 19, 42))
>U : Symbol(U, Decl(file.tsx, 19, 35))
>JSX : Symbol(JSX, Decl(react.d.ts, 2352, 1))
>Element : Symbol(JSX.Element, Decl(react.d.ts, 2355, 27))

declare function ComponentSpecific1<U>(l: {prop: U, "ignore-prop": number}): JSX.Element;
>ComponentSpecific1 : Symbol(ComponentSpecific1, Decl(file.tsx, 19, 65))
>U : Symbol(U, Decl(file.tsx, 20, 36))
>l : Symbol(l, Decl(file.tsx, 20, 39))
>prop : Symbol(prop, Decl(file.tsx, 20, 43))
>U : Symbol(U, Decl(file.tsx, 20, 36))
>JSX : Symbol(JSX, Decl(react.d.ts, 2352, 1))
>Element : Symbol(JSX.Element, Decl(react.d.ts, 2355, 27))

// OK
function Bar<T extends {prop: number}>(arg: T) {
>Bar : Symbol(Bar, Decl(file.tsx, 20, 89))
>T : Symbol(T, Decl(file.tsx, 23, 13))
>prop : Symbol(prop, Decl(file.tsx, 23, 24))
>arg : Symbol(arg, Decl(file.tsx, 23, 39))
>T : Symbol(T, Decl(file.tsx, 23, 13))

    let a1 = <ComponentSpecific {...arg} ignore-prop="hi" />;  // U is number
>a1 : Symbol(a1, Decl(file.tsx, 24, 7))
>ComponentSpecific : Symbol(ComponentSpecific, Decl(file.tsx, 17, 1))
>arg : Symbol(arg, Decl(file.tsx, 23, 39))
>ignore-prop : Symbol(ignore-prop, Decl(file.tsx, 24, 40))

    let a2 = <ComponentSpecific1 {...arg} ignore-prop={10} />;  // U is number
>a2 : Symbol(a2, Decl(file.tsx, 25, 7))
>ComponentSpecific1 : Symbol(ComponentSpecific1, Decl(file.tsx, 19, 65))
>arg : Symbol(arg, Decl(file.tsx, 23, 39))
>ignore-prop : Symbol(ignore-prop, Decl(file.tsx, 25, 41))

    let a3 = <ComponentSpecific {...arg} prop="hello" />;   // U is "hello"
>a3 : Symbol(a3, Decl(file.tsx, 26, 7))
>ComponentSpecific : Symbol(ComponentSpecific, Decl(file.tsx, 17, 1))
>arg : Symbol(arg, Decl(file.tsx, 23, 39))
>prop : Symbol(prop, Decl(file.tsx, 26, 40))
}

declare function Link<U>(l: {func: (arg: U)=>void}): JSX.Element;
>Link : Symbol(Link, Decl(file.tsx, 27, 1))
>U : Symbol(U, Decl(file.tsx, 29, 22))
>l : Symbol(l, Decl(file.tsx, 29, 25))
>func : Symbol(func, Decl(file.tsx, 29, 29))
>arg : Symbol(arg, Decl(file.tsx, 29, 36))
>U : Symbol(U, Decl(file.tsx, 29, 22))
>JSX : Symbol(JSX, Decl(react.d.ts, 2352, 1))
>Element : Symbol(JSX.Element, Decl(react.d.ts, 2355, 27))

// OK
function createLink(func: (a: number)=>void) {
>createLink : Symbol(createLink, Decl(file.tsx, 29, 65))
>func : Symbol(func, Decl(file.tsx, 32, 20))
>a : Symbol(a, Decl(file.tsx, 32, 27))

    let o = <Link func={func} />
>o : Symbol(o, Decl(file.tsx, 33, 7))
>Link : Symbol(Link, Decl(file.tsx, 27, 1))
>func : Symbol(func, Decl(file.tsx, 33, 17))
>func : Symbol(func, Decl(file.tsx, 32, 20))
}

function createLink1(func: (a: number)=>boolean) {
>createLink1 : Symbol(createLink1, Decl(file.tsx, 34, 1))
>func : Symbol(func, Decl(file.tsx, 36, 21))
>a : Symbol(a, Decl(file.tsx, 36, 28))

    let o = <Link func={func} />
>o : Symbol(o, Decl(file.tsx, 37, 7))
>Link : Symbol(Link, Decl(file.tsx, 27, 1))
>func : Symbol(func, Decl(file.tsx, 37, 17))
>func : Symbol(func, Decl(file.tsx, 36, 21))
}


