=== tests/cases/conformance/es2017/useObjectValuesAndEntries4.ts ===
var o = { a: 1, b: 2 };
>o : { a: number; b: number; }
>{ a: 1, b: 2 } : { a: number; b: number; }
>a : number
>1 : 1
>b : number
>2 : 2

for (var x of Object.values(o)) {
>x : number
>Object.values(o) : number[]
>Object.values : <T extends {}>(o: T) => (T extends { [index: string]: infer V; } ? V : T extends ArrayLike<infer V> ? V : any)[]
>Object : ObjectConstructor
>values : <T extends {}>(o: T) => (T extends { [index: string]: infer V; } ? V : T extends ArrayLike<infer V> ? V : any)[]
>o : { a: number; b: number; }

    let y = x;
>y : number
>x : number
}

var entries = Object.entries(o);
>entries : [string, number][]
>Object.entries(o) : [string, number][]
>Object.entries : <T extends {}>(o: T) => [string, T extends { [index: string]: infer V; } ? V : T extends ArrayLike<infer V> ? V : any][]
>Object : ObjectConstructor
>entries : <T extends {}>(o: T) => [string, T extends { [index: string]: infer V; } ? V : T extends ArrayLike<infer V> ? V : any][]
>o : { a: number; b: number; }

