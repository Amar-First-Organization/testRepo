=== tests/cases/conformance/statements/for-ofStatements/ES5For-ofTypeCheck10.ts ===
// In ES3/5, you cannot for...of over an arbitrary iterable.
class StringIterator {
>StringIterator : Symbol(StringIterator, Decl(ES5For-ofTypeCheck10.ts, 0, 0))

    next() {
>next : Symbol(StringIterator.next, Decl(ES5For-ofTypeCheck10.ts, 1, 22))

        return {
            done: true,
>done : Symbol(done, Decl(ES5For-ofTypeCheck10.ts, 3, 16))

            value: ""
>value : Symbol(value, Decl(ES5For-ofTypeCheck10.ts, 4, 23))

        };
    }
    [Symbol.iterator]() {
>[Symbol.iterator] : Symbol(StringIterator[Symbol.iterator], Decl(ES5For-ofTypeCheck10.ts, 7, 5))
>Symbol.iterator : Symbol(SymbolConstructor.iterator, Decl(lib.es2015.iterable.d.ts, --, --))
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --))
>iterator : Symbol(SymbolConstructor.iterator, Decl(lib.es2015.iterable.d.ts, --, --))

        return this;
>this : Symbol(StringIterator, Decl(ES5For-ofTypeCheck10.ts, 0, 0))
    }
}

for (var v of new StringIterator) { }
>v : Symbol(v, Decl(ES5For-ofTypeCheck10.ts, 13, 8))
>StringIterator : Symbol(StringIterator, Decl(ES5For-ofTypeCheck10.ts, 0, 0))

