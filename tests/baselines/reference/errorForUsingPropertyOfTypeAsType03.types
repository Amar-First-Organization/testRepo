=== tests/cases/compiler/errorForUsingPropertyOfTypeAsType03.ts ===
namespace Test1 {
>Test1 : typeof Test1

    enum Color {
>Color : Color

        Red,
>Red : Color.Red

        Green,
>Green : Color.Green

        Blue
>Blue : Color.Blue
    }

    type C1 = Color;
>C1 : Color

    type C2 = typeof Color;
>C2 : typeof Color
>Color : typeof Color

    let a1: Color.Red.toString;
>a1 : any (error)
>Color : any (error)
>Red : any (error)

    let a2: Color.Red["toString"];
>a2 : (radix?: number) => string
>Color : any (error)

    let a3: Color["Red"]["toString"];
>a3 : any (error)

    //let b1: (typeof Color).Red.toString;
    //let b2: (typeof Color).Red["toString"];
    let b3: (typeof Color)["Red"]["toString"];
>b3 : (radix?: number) => string
>Color : typeof Color

    let c1: C1.Red.toString;
>c1 : any (error)
>C1 : any (error)
>Red : any (error)

    let c2: C1.Red["toString"];
>c2 : any (error)
>C1 : any (error)

    let c3: C1["Red"]["toString"];
>c3 : any (error)

    let d1: C2.Red.toString;
>d1 : any (error)
>C2 : any (error)
>Red : any (error)

    let d2: C2.Red["toString"];
>d2 : any (error)
>C2 : any (error)

    let d3: C2["Red"]["toString"];
>d3 : (radix?: number) => string
}
