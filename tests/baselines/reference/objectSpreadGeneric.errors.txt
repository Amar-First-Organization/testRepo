tests/cases/conformance/types/spread/objectSpreadGeneric.ts(9,5): error TS2322: Type 'spread(U)' is not assignable to type 'U'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(10,11): error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(spread(V, U), T)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(11,11): error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(spread(U, T), V)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(12,11): error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(U, V)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(13,11): error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(T, V)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(14,11): error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(T, U)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(16,11): error TS90010: Type 'spread(spread({ first: string; }, T), U)' is not assignable to type 'spread(spread({ first: string; }, T), U)'. Two different types with this name exist, but they are unrelated.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(19,11): error TS2322: Type '{}' is not assignable to type 'spread(T, U)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(26,11): error TS2322: Type 'spread(spread({ sn?: boolean; }, T), { sn?: string | number; })' is not assignable to type 'spread(T, { sn?: string | number | boolean; })'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(32,11): error TS90010: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })'. Two different types with this name exist, but they are unrelated.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(34,11): error TS2322: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })' is not assignable to type 'spread(spread({ first: string; second: string; }, T), { third: string; })'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(36,11): error TS90010: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; secondsecond: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; secondsecond: string; })'. Two different types with this name exist, but they are unrelated.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(38,11): error TS2322: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; secondsecond: string; })' is not assignable to type 'spread(spread({ first: string; second: string; secondsecond: string; third: string; }, T), U)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(42,11): error TS2322: Type 'spread(spread(spread(spread({ firrrrrrst: string; }, T), { second: string; }), U), { third: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(44,11): error TS2322: Type 'spread(spread(spread(spread({ first: string; }, T), { ssssssssecond: string; }), U), { third: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(46,11): error TS2322: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { thirrrrrrrd: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(57,5): error TS2322: Type 'spread(keyof U)' is not assignable to type 'spread(keyof T)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(58,5): error TS2322: Type 'spread(keyof T)' is not assignable to type 'spread(keyof U)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(61,5): error TS2322: Type 'spread(K)' is not assignable to type 'spread(keyof T)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(62,5): error TS2322: Type 'spread(keyof T)' is not assignable to type 'spread(K)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(63,5): error TS2322: Type 'spread(J)' is not assignable to type 'spread(keyof U)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(64,5): error TS2322: Type 'spread(keyof U)' is not assignable to type 'spread(J)'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(70,5): error TS2322: Type 'spread(U[J])' is not assignable to type 'spread(T[K])'.
tests/cases/conformance/types/spread/objectSpreadGeneric.ts(71,5): error TS2322: Type 'spread(T[K])' is not assignable to type 'spread(U[J])'.


==== tests/cases/conformance/types/spread/objectSpreadGeneric.ts (24 errors) ====
    function f<T, U, V>(t: T, u: U, v: V): void {
        let o: spread(spread(T, U), V);
        let uus: spread(U, U);
        let us: spread(U);
        const same: spread(spread(T, U), V) = o; // ok
        uus = us; // ok, multiple spreads are equivalent to a single one
        us = uus; // ok, multiple spreads are equivalent to a single one
        us = u;   // ok, type has at least all the properties of the spread
        u = us;   // error, might be missing a ton of stuff
        ~
!!! error TS2322: Type 'spread(U)' is not assignable to type 'U'.
        const reversed: spread(spread(V, U), T) = o; // error, reversed
              ~~~~~~~~
!!! error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(spread(V, U), T)'.
        const reversed2: spread(spread(U, T), V) = o; // error, U and T are still reversed
              ~~~~~~~~~
!!! error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(spread(U, T), V)'.
        const missingT: spread(U, V) = o; // error, missing T
              ~~~~~~~~
!!! error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(U, V)'.
        const missingU: spread(T, V) = o; // error, missing U
              ~~~~~~~~
!!! error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(T, V)'.
        const missingV: spread(T, U) = o; // error, missing V
              ~~~~~~~~
!!! error TS2322: Type 'spread(spread(T, U), V)' is not assignable to type 'spread(T, U)'.
        const atEnd: spread(spread(T, U), { second: string }) = { ...t, ...u, second: 'foo' }; // ok
        const atBeginning: spread(spread({ first: string }, T), U) = { first: 'foo', ...t, ...u }; // error, not assignable
              ~~~~~~~~~~~
!!! error TS90010: Type 'spread(spread({ first: string; }, T), U)' is not assignable to type 'spread(spread({ first: string; }, T), U)'. Two different types with this name exist, but they are unrelated.
    
        const emptyTarget: { } = { ...t, ...u } // ok
        const emptySource: spread(T, U) = { }; // error, {} is not assignable to U (or T)
              ~~~~~~~~~~~
!!! error TS2322: Type '{}' is not assignable to type 'spread(T, U)'.
    
        // error, { sn?: boolean } ...T ... { sn?: number | string } is not assignable to
        //        T ... { sn?: number | string | boolean }
        let optionalNumber: { sn?: number };
        let optionalString: { sn?: string };
        let optionalBoolean: { sn?: boolean };
        const unionCutoff: spread(T, { sn?: number | string | boolean }) =
              ~~~~~~~~~~~
!!! error TS2322: Type 'spread(spread({ sn?: boolean; }, T), { sn?: string | number; })' is not assignable to type 'spread(T, { sn?: string | number | boolean; })'.
            { ...optionalBoolean, ...t, ...optionalString, ...optionalNumber }
        unionCutoff.sn; // ok
        const optionalCutoff = { ...t, ...optionalNumber }; // ok
        optionalCutoff.sn; // ok
    
        const interspersed: spread(spread(spread(spread({ first: string }, T), { second: string }), U), { third: string }) =
              ~~~~~~~~~~~~
!!! error TS90010: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })'. Two different types with this name exist, but they are unrelated.
            { first: '1', ...t, second: '2', ...u, third: '3' }; // error, not assignable
        const interspersedMissingU: spread(spread({ first: string, second: string }, T), { third: string }) =
              ~~~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })' is not assignable to type 'spread(spread({ first: string; second: string; }, T), { third: string; })'.
            { first: '1', ...t, second: '2', ...u, third: '3' }; // error, 'U' is missing
        const interspersedOrder1: spread(spread(spread(spread({ first: string }, T), { second: string }), U), { third: string , secondsecond: string }) =
              ~~~~~~~~~~~~~~~~~~
!!! error TS90010: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; secondsecond: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; secondsecond: string; })'. Two different types with this name exist, but they are unrelated.
            { first: '1', ...t, second: '2', ...u, third: '3', secondsecond: 'false' }; // error, not assignable
        const interspersedOrder2: spread(spread({ first: string, second: string, secondsecond: string, third: string }, T), U) =
              ~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; secondsecond: string; })' is not assignable to type 'spread(spread({ first: string; second: string; secondsecond: string; third: string; }, T), U)'.
            { first: '1', ...t, second: '2', ...u, third: '3', secondsecond: 'false' }; // error, not assignable
    
    
        const mismatchFirst: spread(spread(spread(spread({ first: string }, T), { second: string }), U), { third: string }) =
              ~~~~~~~~~~~~~
!!! error TS2322: Type 'spread(spread(spread(spread({ firrrrrrst: string; }, T), { second: string; }), U), { third: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })'.
            { firrrrrrst: '1', ...t, second: '2', ...u, third: '3' }; // error, not assignable
        const mismatchSecond: spread(spread(spread(spread({ first: string }, T), { second: string }), U), { third: string }) =
              ~~~~~~~~~~~~~~
!!! error TS2322: Type 'spread(spread(spread(spread({ first: string; }, T), { ssssssssecond: string; }), U), { third: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })'.
            { first: '1', ...t, ssssssssecond: '2', ...u, third: '3' }; // error, not assignable
        const mismatchLast: spread(spread(spread(spread({ first: string }, T), { second: string }), U), { third: string }) =
              ~~~~~~~~~~~~
!!! error TS2322: Type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { thirrrrrrrd: string; })' is not assignable to type 'spread(spread(spread(spread({ first: string; }, T), { second: string; }), U), { third: string; })'.
            { first: '1', ...t, second: '2', ...u, thirrrrrrrd: '3' }; // error, not assignable
    }
    
    function indexAccessedTest<T, K extends keyof T, U, J extends keyof U>(t: T, u: U, key1: K, key2: J) {
        let k1: spread(keyof T);
        let k2: spread(keyof U);
        let k3: spread(K);
        let k4: spread(J);
        k1 = k1; // ok
        k2 = k2; // ok
        k1 = k2; // error
        ~~
!!! error TS2322: Type 'spread(keyof U)' is not assignable to type 'spread(keyof T)'.
        k2 = k1; // error
        ~~
!!! error TS2322: Type 'spread(keyof T)' is not assignable to type 'spread(keyof U)'.
        k3 = k3; // ok
        k4 = k4; // ok
        k1 = k3; // error
        ~~
!!! error TS2322: Type 'spread(K)' is not assignable to type 'spread(keyof T)'.
        k3 = k1; // error
        ~~
!!! error TS2322: Type 'spread(keyof T)' is not assignable to type 'spread(K)'.
        k2 = k4; // error
        ~~
!!! error TS2322: Type 'spread(J)' is not assignable to type 'spread(keyof U)'.
        k4 = k2; // error
        ~~
!!! error TS2322: Type 'spread(keyof U)' is not assignable to type 'spread(J)'.
    
        let i1: spread(T[K]);
        let i2: spread(U[J]);
        i1 = i1; // ok
        i2 = i2; // ok
        i1 = i2; // error
        ~~
!!! error TS2322: Type 'spread(U[J])' is not assignable to type 'spread(T[K])'.
        i2 = i1; // error
        ~~
!!! error TS2322: Type 'spread(T[K])' is not assignable to type 'spread(U[J])'.
    }
    