//// [tests/cases/conformance/es6/destructuring/bindingPatternWithNullableInitializer1.ts] ////

=== bindingPatternWithNullableInitializer1.ts ===
// https://github.com/microsoft/TypeScript/issues/60119

interface T {
  a?: unknown;
>a : unknown
>  : ^^^^^^^

  b?: unknown;
>b : unknown
>  : ^^^^^^^

  c?: unknown;
>c : unknown
>  : ^^^^^^^
}

function f1<L extends keyof T>(k: L, t: T | undefined) {
>f1 : <L extends keyof T>(k: L, t: T | undefined) => void
>   : ^ ^^^^^^^^^       ^^ ^^ ^^ ^^             ^^^^^^^^^
>k : L
>  : ^
>t : T | undefined
>  : ^^^^^^^^^^^^^

  const { [k]: v } = t;
>k : L
>  : ^
>v : (T | undefined)[L]
>  : ^^^^^^^^^^^^^^^^^^
>t : T | undefined
>  : ^^^^^^^^^^^^^
}

function f2<L extends keyof T>(k: L, t: T | null) {
>f2 : <L extends keyof T>(k: L, t: T | null) => void
>   : ^ ^^^^^^^^^       ^^ ^^ ^^ ^^        ^^^^^^^^^
>k : L
>  : ^
>t : T | null
>  : ^^^^^^^^

  const { [k]: v } = t;
>k : L
>  : ^
>v : (T | null)[L]
>  : ^^^^^^^^^^^^^
>t : T | null
>  : ^^^^^^^^
}

function f3<L extends keyof T>(k: L, t: T | null | undefined) {
>f3 : <L extends keyof T>(k: L, t: T | null | undefined) => void
>   : ^ ^^^^^^^^^       ^^ ^^ ^^ ^^                    ^^^^^^^^^
>k : L
>  : ^
>t : T | null | undefined
>  : ^^^^^^^^^^^^^^^^^^^^

  const { [k]: v } = t;
>k : L
>  : ^
>v : (T | null | undefined)[L]
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^
>t : T | null | undefined
>  : ^^^^^^^^^^^^^^^^^^^^
}

