//// [tests/cases/compiler/typeInfer1.ts] ////

=== typeInfer1.ts ===
interface ITextWriter2 {
    Write(s:string):void;
>Write : (s: string) => void
>      : ^ ^^      ^^^^^    
>s : string
>  : ^^^^^^

    WriteLine(s:string):void;
>WriteLine : (s: string) => void
>          : ^ ^^      ^^^^^    
>s : string
>  : ^^^^^^
}

var x: ITextWriter2 = {
>x : ITextWriter2
>  : ^^^^^^^^^^^^
>{    Write: function (s:string):void {},    WriteLine: function(s:string):void {}} : ITextWriter2
>                                                                                   : ^^^^^^^^^^^^

    Write: function (s:string):void {},
>Write : (s: string) => void
>      : ^ ^^      ^^^^^    
>function (s:string):void {} : (s: string) => void
>                            : ^ ^^      ^^^^^    
>s : string
>  : ^^^^^^

    WriteLine: function(s:string):void {}
>WriteLine : (s: string) => void
>          : ^ ^^      ^^^^^    
>function(s:string):void {} : (s: string) => void
>                           : ^ ^^      ^^^^^    
>s : string
>  : ^^^^^^
}

var yyyyyyyy: ITextWriter2 = {
>yyyyyyyy : ITextWriter2
>         : ^^^^^^^^^^^^
>{    Moo: function() { return "cow"; }} : ITextWriter2
>                                        : ^^^^^^^^^^^^

    Moo: function() { return "cow"; }
>Moo : () => string
>    : ^^^^^^^^^^^^
>function() { return "cow"; } : () => string
>                             : ^^^^^^^^^^^^
>"cow" : "cow"
>      : ^^^^^
}
