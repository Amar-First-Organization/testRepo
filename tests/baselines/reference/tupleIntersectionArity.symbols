=== tests/cases/conformance/types/rest/tupleIntersectionArity.ts ===
declare const tuple1: [number, number, number] & { _nominal_a: never };
>tuple1 : Symbol(tuple1, Decl(tupleIntersectionArity.ts, 0, 13))
>_nominal_a : Symbol(_nominal_a, Decl(tupleIntersectionArity.ts, 0, 50))

declare const tuple2: [number, number, number] & [string, string, string];
>tuple2 : Symbol(tuple2, Decl(tupleIntersectionArity.ts, 1, 13))

declare const f1: (...params: [number, number, number]) => void;
>f1 : Symbol(f1, Decl(tupleIntersectionArity.ts, 3, 13))
>params : Symbol(params, Decl(tupleIntersectionArity.ts, 3, 19))

f1(...tuple1);
>f1 : Symbol(f1, Decl(tupleIntersectionArity.ts, 3, 13))
>tuple1 : Symbol(tuple1, Decl(tupleIntersectionArity.ts, 0, 13))

f1(...tuple2); // Error
>f1 : Symbol(f1, Decl(tupleIntersectionArity.ts, 3, 13))
>tuple2 : Symbol(tuple2, Decl(tupleIntersectionArity.ts, 1, 13))

export {}

