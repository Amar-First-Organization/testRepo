tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedFunctionTypedArguments.ts(16,19): error TS2345: Argument of type '(x: string | boolean) => string | boolean' is not assignable to parameter of type '{ (x: boolean): boolean; (x: string): string; }'.
  Type 'string | boolean' is not assignable to type 'boolean'.
    Type 'string' is not assignable to type 'boolean'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedFunctionTypedArguments.ts(24,19): error TS2345: Argument of type '(x: number | {}) => number | {}' is not assignable to parameter of type '{ (x: {}): string; (x: number): {}; }'.
  Type 'number | {}' is not assignable to type 'string'.
    Type 'number' is not assignable to type 'string'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedFunctionTypedArguments.ts(32,19): error TS2345: Argument of type '(x: {}) => {}' is not assignable to parameter of type '{ (x: {}): string; (x: {}, y?: {}): string; }'.
  Type '{}' is not assignable to type 'string'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedFunctionTypedArguments.ts(40,23): error TS2345: Argument of type '(x: number) => number' is not assignable to parameter of type '{ (x: number): string; (x: number, y?: number): string; }'.
  Type 'number' is not assignable to type 'string'.


==== tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedFunctionTypedArguments.ts (4 errors) ====
    // Function typed arguments with multiple signatures must be passed an implementation that matches all of them
    // Inferences are made quadratic-pairwise to and from these overload sets
    
    module NonGenericParameter {
        var a: {
            (x: boolean): boolean;
            (x: string): string;
        }
    
        function foo4(cb: typeof a) {
            return cb;
        }
    
        var r = foo4(a);
        var r2 = foo4(<T>(x: T) => x);
        var r4 = foo4(x => x);    
                      ~~~~~~
!!! error TS2345: Argument of type '(x: string | boolean) => string | boolean' is not assignable to parameter of type '{ (x: boolean): boolean; (x: string): string; }'.
!!! error TS2345:   Type 'string | boolean' is not assignable to type 'boolean'.
!!! error TS2345:     Type 'string' is not assignable to type 'boolean'.
    }
    
    module GenericParameter {
        function foo5<T>(cb: { (x: T): string; (x: number): T }) {
            return cb;
        }
    
        var r5 = foo5(x => x); // any => string (+1 overload) [inferences are made for T, but lambda not contextually typed]. T is any
                      ~~~~~~
!!! error TS2345: Argument of type '(x: number | {}) => number | {}' is not assignable to parameter of type '{ (x: {}): string; (x: number): {}; }'.
!!! error TS2345:   Type 'number | {}' is not assignable to type 'string'.
!!! error TS2345:     Type 'number' is not assignable to type 'string'.
        var a: { <T>(x: T): string; <T>(x: number): T; }
        var r7 = foo5(a); // any => string (+1 overload)
    
        function foo6<T>(cb: { (x: T): string; (x: T, y?: T): string }) {
            return cb;
        }
    
        var r8 = foo6(x => x); // any => string (+1 overload) [inferences are made for T, but lambda not contextually typed]. T is any
                      ~~~~~~
!!! error TS2345: Argument of type '(x: {}) => {}' is not assignable to parameter of type '{ (x: {}): string; (x: {}, y?: {}): string; }'.
!!! error TS2345:   Type '{}' is not assignable to type 'string'.
        var r9 = foo6(<T>(x: T) => ''); // any => string (+1 overload)
        var r11 = foo6(<T>(x: T, y?: T) => ''); // any => string (+1 overload)
    
        function foo7<T>(x:T, cb: { (x: T): string; (x: T, y?: T): string }) {
            return cb;
        }
    
        var r12 = foo7(1, (x) => x); // any => string (+1 overload) [inferences are made for T, but lambda not contextually typed]
                          ~~~~~~~~
!!! error TS2345: Argument of type '(x: number) => number' is not assignable to parameter of type '{ (x: number): string; (x: number, y?: number): string; }'.
!!! error TS2345:   Type 'number' is not assignable to type 'string'.
        var r13 = foo7(1, <T>(x: T) => ''); // any => string (+1 overload) [inferences are made for T, but lambda not contextually typed]
        var a: { <T>(x: T): string; <T>(x: number): T; }
        var r14 = foo7(1, a); // any => string (+1 overload) [inferences are made for T, but lambda not contextually typed]
    }