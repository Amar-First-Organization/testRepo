decl.d.ts(1,1): error TS1046: Top-level declarations in .d.ts files must start with either a 'declare' or 'export' modifier.
decl.d.ts(3,17): error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
decl.d.ts(3,17): error TS2369: A parameter property is only allowed in a constructor implementation.


==== decl.d.ts (3 errors) ====
    class MyClassErr {
    ~~~~~
!!! error TS1046: Top-level declarations in .d.ts files must start with either a 'declare' or 'export' modifier.
        // No parameter properties
        constructor(public foo: string);
                    ~~~~~~~~~~~~~~~~~~
!!! error TS1294: This syntax is not allowed when 'erasableSyntaxOnly' is enabled.
                    ~~~~~~~~~~~~~~~~~~
!!! error TS2369: A parameter property is only allowed in a constructor implementation.
    }
    
    namespace IllegalBecauseInstantiated {
        export const m = 1;
    }
    
    namespace AlsoIllegalBecauseInstantiated {
        class PrivateClass {
    
        }
    }
    
    enum NotLegalEnum {
        B = 1
    }
    
    const enum NotLegalConstEnum {
        C = 2
    }
    
    // No errors after this point
    class MyClassOk {
        // Not a parameter property, ok
        constructor(foo: string);
    }
    namespace NotInstantiated {
        export interface JustAType { }
        export type ATypeInANamespace = {};
    }
    declare namespace AmbientIsNotInstantiated {
        export const stillOk = 12;
    }
    
    declare enum LegalEnum {
        A = 1
    }
    
    declare namespace AmbientStuff {
        namespace Nested {
            export const stillOk = 12;
        }
        enum EnumInAmbientContext {
            B = 1
        }
    }
    