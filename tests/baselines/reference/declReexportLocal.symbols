=== tests/cases/compiler/declReexportLocal.ts ===
declare namespace foo.bar {
>foo : Symbol(foo, Decl(declReexportLocal.ts, 0, 0))
>bar : Symbol(bar, Decl(declReexportLocal.ts, 0, 22))

  class Local {}
>Local : Symbol(Local, Decl(declReexportLocal.ts, 0, 27))

  export {Local as ExportedAlias};
>Local : Symbol(Local, Decl(declReexportLocal.ts, 0, 27))
>ExportedAlias : Symbol(ExportedAlias, Decl(declReexportLocal.ts, 2, 10))

  export class Exported {}
>Exported : Symbol(Exported, Decl(declReexportLocal.ts, 2, 34))
}

module m3 {
>m3 : Symbol(m3, Decl(declReexportLocal.ts, 4, 1))

  export const Exported = foo.bar.Exported;
>Exported : Symbol(Exported, Decl(declReexportLocal.ts, 7, 14))
>foo.bar.Exported : Symbol(foo.bar.Exported, Decl(declReexportLocal.ts, 2, 34))
>foo.bar : Symbol(foo.bar, Decl(declReexportLocal.ts, 0, 22))
>foo : Symbol(foo, Decl(declReexportLocal.ts, 0, 0))
>bar : Symbol(foo.bar, Decl(declReexportLocal.ts, 0, 22))
>Exported : Symbol(foo.bar.Exported, Decl(declReexportLocal.ts, 2, 34))

  export const ExportedAlias = foo.bar.ExportedAlias;
>ExportedAlias : Symbol(ExportedAlias, Decl(declReexportLocal.ts, 8, 14))
>foo.bar.ExportedAlias : Symbol(foo.bar.ExportedAlias, Decl(declReexportLocal.ts, 2, 10))
>foo.bar : Symbol(foo.bar, Decl(declReexportLocal.ts, 0, 22))
>foo : Symbol(foo, Decl(declReexportLocal.ts, 0, 0))
>bar : Symbol(foo.bar, Decl(declReexportLocal.ts, 0, 22))
>ExportedAlias : Symbol(foo.bar.ExportedAlias, Decl(declReexportLocal.ts, 2, 10))
}

