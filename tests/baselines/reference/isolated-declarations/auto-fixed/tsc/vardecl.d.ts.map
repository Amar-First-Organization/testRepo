//// [tests/cases/compiler/vardecl.ts] ////



/// [Declarations] ////



//// [vardecl.d.ts]
declare var simpleVar: any;
declare var anotherVar: any;
declare var varWithSimpleType: number;
declare var varWithArrayType: number[];
declare var varWithInitialValue: number;
declare var withComplicatedValue: {
    x: number;
    y: number;
    desc: string;
};
declare var declaredVar: any;
declare var declareVar2: any;
declare var declaredVar3: any;
declare var deckareVarWithType: number;
declare var arrayVar: string[];
declare var complicatedArrayVar: {
    x: number;
    y: string;
}[];
declare var n1: {
    [s: string]: number;
};
declare var c: {
    new?(): any;
};
declare var d: {
    foo?(): {
        x: number;
    };
};
declare var d3: {
    foo(): {
        x: number;
        y: number;
    };
};
declare var d2: {
    foo(): {
        x: number;
    };
};
declare var n2: {
    (): void;
};
declare var n4: {
    (): void;
}[];
declare var d4: {
    foo(n: string, x: {
        x: number;
        y: number;
    }): {
        x: number;
        y: number;
    };
};
declare namespace m2 {
    var a: any, b2: number, b: any;
    class C2 {
        b: any;
        constructor(b: any);
    }
    var mE: any;
    var d1E: any, d2E: any;
    var b2E: any;
    var v1E: any;
}
declare var a22: any, b22: number, c22: number;
declare var nn: any;
declare var da1: any, da2: any;
declare var normalVar: any;
declare var dv1: any;
declare var xl: any;
declare var x: any;
declare var z: any;
declare function foo(a2: any): void;
declare var b: number;
//# sourceMappingURL=vardecl.d.ts.map

/// [Declarations Maps] ////


//// [vardecl.d.ts.map]
{"version":3,"file":"vardecl.d.ts","sourceRoot":"","sources":["vardecl.ts"],"names":[],"mappings":"AAAA,QAAA,IAAI,SAAS,EAAE,GAAG,CAAC;AAEnB,QAAA,IAAI,UAAU,EAAE,GAAG,CAAC;AACpB,QAAA,IAAI,iBAAiB,EAAE,MAAM,CAAC;AAC9B,QAAA,IAAI,gBAAgB,EAAE,MAAM,EAAE,CAAC;AAE/B,QAAA,IAAI,mBAAmB,QAAK,CAAC;AAE7B,QAAA,IAAI,oBAAoB;;;;CAAqC,CAAC;AAE9D,OAAO,CAAC,IAAI,WAAW,EAAE,GAAG,CAAC;AAC7B,OAAO,CAAC,IAAI,WAAW,EAAE,GAAG,CAAA;AAE5B,OAAO,CAAC,IAAI,YAAY,EAAE,GAAG,CAAC;AAC9B,OAAO,CAAC,IAAI,kBAAkB,EAAE,MAAM,CAAC;AAEvC,QAAA,IAAI,QAAQ,EAAE,MAAM,EAAe,CAAC;AAEpC,QAAA,IAAI,mBAAmB,EAAE;IAAE,CAAC,EAAE,MAAM,CAAC;IAAC,CAAC,EAAE,MAAM,CAAC;CAAE,EAAE,CAAE;AAGtD,QAAA,IAAI,EAAE,EAAE;IAAE,CAAC,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC;CAAE,CAAC;AAEjC,QAAA,IAAI,CAAC,EAAG;IACA,GAAG,CAAC,IAAK,GAAG,CAAC;CAChB,CAAA;AAEL,QAAA,IAAI,CAAC,EAAE;IACH,GAAG,CAAC,IAAK;QACL,CAAC,EAAE,MAAM,CAAC;KACb,CAAC;CACL,CAAA;AAED,QAAA,IAAI,EAAE,EAAE;IACJ,GAAG,IAAI;QACH,CAAC,EAAE,MAAM,CAAC;QACV,CAAC,EAAE,MAAM,CAAC;KACb,CAAC;CACL,CAAA;AAED,QAAA,IAAI,EAAE,EAAE;IACJ,GAAG,IAAK;QACJ,CAAC,EAAE,MAAM,CAAC;KACb,CAAC;CACL,CAAA;AAED,QAAA,IAAI,EAAE,EAAE;IACJ,IAAI,IAAI,CAAC;CACZ,CAAA;AACD,QAAA,IAAI,EAAE,EAAE;IACJ,IAAI,IAAI,CAAC;CACZ,EAAE,CAAC;AAEJ,QAAA,IAAI,EAAE,EAAE;IACJ,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAAE,CAAC,EAAE,MAAM,CAAC;QAAC,CAAC,EAAE,MAAM,CAAC;KAAE,GAAG;QAC1C,CAAC,EAAE,MAAM,CAAC;QACV,CAAC,EAAE,MAAM,CAAC;KACb,CAAC;CACL,CAAA;AAED,kBAAO,EAAE,CAAC;IAEC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,MAAW,EAAE,CAAC,EAAE,GAAG,CAAC;IAU3C,MAAa,EAAE;QACS,CAAC,EAAE,GAAG;oBAAN,CAAC,EAAE,GAAG;KAE7B;IAKM,IAAI,EAAE,EAAE,GAAG,CAAC;IACJ,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC/B,IAAI,GAAG,EAAE,GAAG,CAAC;IACL,IAAI,GAAG,EAAE,GAAG,CAAC;CAC/B;AAED,QAAA,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,QAAK,EAAE,GAAG,QAAK,CAAC;AACjC,QAAA,IAAI,EAAE,EAAE,GAAG,CAAC;AAEZ,OAAO,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC/B,QAAA,IAAI,SAAS,EAAE,GAAG,CAAC;AACnB,OAAO,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC;AACrB,QAAA,IAAI,EAAE,EAAE,GAAG,CAAC;AACZ,QAAA,IAAI,CAAC,EAAE,GAAG,CAAC;AACX,QAAA,IAAI,CAAC,EAAE,GAAG,CAAC;AAEX,iBAAS,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,CAE1B;AAUD,QAAA,IAAI,CAAC,QAAK,CAAC"}

//// https://sokra.github.io/source-map-visualization#base64,ZGVjbGFyZSB2YXIgc2ltcGxlVmFyOiBhbnk7DQpkZWNsYXJlIHZhciBhbm90aGVyVmFyOiBhbnk7DQpkZWNsYXJlIHZhciB2YXJXaXRoU2ltcGxlVHlwZTogbnVtYmVyOw0KZGVjbGFyZSB2YXIgdmFyV2l0aEFycmF5VHlwZTogbnVtYmVyW107DQpkZWNsYXJlIHZhciB2YXJXaXRoSW5pdGlhbFZhbHVlOiBudW1iZXI7DQpkZWNsYXJlIHZhciB3aXRoQ29tcGxpY2F0ZWRWYWx1ZTogew0KICAgIHg6IG51bWJlcjsNCiAgICB5OiBudW1iZXI7DQogICAgZGVzYzogc3RyaW5nOw0KfTsNCmRlY2xhcmUgdmFyIGRlY2xhcmVkVmFyOiBhbnk7DQpkZWNsYXJlIHZhciBkZWNsYXJlVmFyMjogYW55Ow0KZGVjbGFyZSB2YXIgZGVjbGFyZWRWYXIzOiBhbnk7DQpkZWNsYXJlIHZhciBkZWNrYXJlVmFyV2l0aFR5cGU6IG51bWJlcjsNCmRlY2xhcmUgdmFyIGFycmF5VmFyOiBzdHJpbmdbXTsNCmRlY2xhcmUgdmFyIGNvbXBsaWNhdGVkQXJyYXlWYXI6IHsNCiAgICB4OiBudW1iZXI7DQogICAgeTogc3RyaW5nOw0KfVtdOw0KZGVjbGFyZSB2YXIgbjE6IHsNCiAgICBbczogc3RyaW5nXTogbnVtYmVyOw0KfTsNCmRlY2xhcmUgdmFyIGM6IHsNCiAgICBuZXc/KCk6IGFueTsNCn07DQpkZWNsYXJlIHZhciBkOiB7DQogICAgZm9vPygpOiB7DQogICAgICAgIHg6IG51bWJlcjsNCiAgICB9Ow0KfTsNCmRlY2xhcmUgdmFyIGQzOiB7DQogICAgZm9vKCk6IHsNCiAgICAgICAgeDogbnVtYmVyOw0KICAgICAgICB5OiBudW1iZXI7DQogICAgfTsNCn07DQpkZWNsYXJlIHZhciBkMjogew0KICAgIGZvbygpOiB7DQogICAgICAgIHg6IG51bWJlcjsNCiAgICB9Ow0KfTsNCmRlY2xhcmUgdmFyIG4yOiB7DQogICAgKCk6IHZvaWQ7DQp9Ow0KZGVjbGFyZSB2YXIgbjQ6IHsNCiAgICAoKTogdm9pZDsNCn1bXTsNCmRlY2xhcmUgdmFyIGQ0OiB7DQogICAgZm9vKG46IHN0cmluZywgeDogew0KICAgICAgICB4OiBudW1iZXI7DQogICAgICAgIHk6IG51bWJlcjsNCiAgICB9KTogew0KICAgICAgICB4OiBudW1iZXI7DQogICAgICAgIHk6IG51bWJlcjsNCiAgICB9Ow0KfTsNCmRlY2xhcmUgbmFtZXNwYWNlIG0yIHsNCiAgICB2YXIgYTogYW55LCBiMjogbnVtYmVyLCBiOiBhbnk7DQogICAgY2xhc3MgQzIgew0KICAgICAgICBiOiBhbnk7DQogICAgICAgIGNvbnN0cnVjdG9yKGI6IGFueSk7DQogICAgfQ0KICAgIHZhciBtRTogYW55Ow0KICAgIHZhciBkMUU6IGFueSwgZDJFOiBhbnk7DQogICAgdmFyIGIyRTogYW55Ow0KICAgIHZhciB2MUU6IGFueTsNCn0NCmRlY2xhcmUgdmFyIGEyMjogYW55LCBiMjI6IG51bWJlciwgYzIyOiBudW1iZXI7DQpkZWNsYXJlIHZhciBubjogYW55Ow0KZGVjbGFyZSB2YXIgZGExOiBhbnksIGRhMjogYW55Ow0KZGVjbGFyZSB2YXIgbm9ybWFsVmFyOiBhbnk7DQpkZWNsYXJlIHZhciBkdjE6IGFueTsNCmRlY2xhcmUgdmFyIHhsOiBhbnk7DQpkZWNsYXJlIHZhciB4OiBhbnk7DQpkZWNsYXJlIHZhciB6OiBhbnk7DQpkZWNsYXJlIGZ1bmN0aW9uIGZvbyhhMjogYW55KTogdm9pZDsNCmRlY2xhcmUgdmFyIGI6IG51bWJlcjsNCi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhcmRlY2wuZC50cy5tYXA=,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFyZGVjbC5kLnRzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmFyZGVjbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFBLElBQUksU0FBUyxFQUFFLEdBQUcsQ0FBQztBQUVuQixRQUFBLElBQUksVUFBVSxFQUFFLEdBQUcsQ0FBQztBQUNwQixRQUFBLElBQUksaUJBQWlCLEVBQUUsTUFBTSxDQUFDO0FBQzlCLFFBQUEsSUFBSSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUUvQixRQUFBLElBQUksbUJBQW1CLFFBQUssQ0FBQztBQUU3QixRQUFBLElBQUksb0JBQW9COzs7O0NBQXFDLENBQUM7QUFFOUQsT0FBTyxDQUFDLElBQUksV0FBVyxFQUFFLEdBQUcsQ0FBQztBQUM3QixPQUFPLENBQUMsSUFBSSxXQUFXLEVBQUUsR0FBRyxDQUFBO0FBRTVCLE9BQU8sQ0FBQyxJQUFJLFlBQVksRUFBRSxHQUFHLENBQUM7QUFDOUIsT0FBTyxDQUFDLElBQUksa0JBQWtCLEVBQUUsTUFBTSxDQUFDO0FBRXZDLFFBQUEsSUFBSSxRQUFRLEVBQUUsTUFBTSxFQUFlLENBQUM7QUFFcEMsUUFBQSxJQUFJLG1CQUFtQixFQUFFO0lBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQztJQUFDLENBQUMsRUFBRSxNQUFNLENBQUM7Q0FBRSxFQUFFLENBQUU7QUFHdEQsUUFBQSxJQUFJLEVBQUUsRUFBRTtJQUFFLENBQUMsQ0FBQyxFQUFFLE1BQU0sR0FBRyxNQUFNLENBQUM7Q0FBRSxDQUFDO0FBRWpDLFFBQUEsSUFBSSxDQUFDLEVBQUc7SUFDQSxHQUFHLENBQUMsSUFBSyxHQUFHLENBQUM7Q0FDaEIsQ0FBQTtBQUVMLFFBQUEsSUFBSSxDQUFDLEVBQUU7SUFDSCxHQUFHLENBQUMsSUFBSztRQUNMLENBQUMsRUFBRSxNQUFNLENBQUM7S0FDYixDQUFDO0NBQ0wsQ0FBQTtBQUVELFFBQUEsSUFBSSxFQUFFLEVBQUU7SUFDSixHQUFHLElBQUk7UUFDSCxDQUFDLEVBQUUsTUFBTSxDQUFDO1FBQ1YsQ0FBQyxFQUFFLE1BQU0sQ0FBQztLQUNiLENBQUM7Q0FDTCxDQUFBO0FBRUQsUUFBQSxJQUFJLEVBQUUsRUFBRTtJQUNKLEdBQUcsSUFBSztRQUNKLENBQUMsRUFBRSxNQUFNLENBQUM7S0FDYixDQUFDO0NBQ0wsQ0FBQTtBQUVELFFBQUEsSUFBSSxFQUFFLEVBQUU7SUFDSixJQUFJLElBQUksQ0FBQztDQUNaLENBQUE7QUFDRCxRQUFBLElBQUksRUFBRSxFQUFFO0lBQ0osSUFBSSxJQUFJLENBQUM7Q0FDWixFQUFFLENBQUM7QUFFSixRQUFBLElBQUksRUFBRSxFQUFFO0lBQ0osR0FBRyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFO1FBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQztRQUFDLENBQUMsRUFBRSxNQUFNLENBQUM7S0FBRSxHQUFHO1FBQzFDLENBQUMsRUFBRSxNQUFNLENBQUM7UUFDVixDQUFDLEVBQUUsTUFBTSxDQUFDO0tBQ2IsQ0FBQztDQUNMLENBQUE7QUFFRCxrQkFBTyxFQUFFLENBQUM7SUFFQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLE1BQVcsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDO0lBVTNDLE1BQWEsRUFBRTtRQUNTLENBQUMsRUFBRSxHQUFHO29CQUFOLENBQUMsRUFBRSxHQUFHO0tBRTdCO0lBS00sSUFBSSxFQUFFLEVBQUUsR0FBRyxDQUFDO0lBQ0osSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7SUFDL0IsSUFBSSxHQUFHLEVBQUUsR0FBRyxDQUFDO0lBQ0wsSUFBSSxHQUFHLEVBQUUsR0FBRyxDQUFDO0NBQy9CO0FBRUQsUUFBQSxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxRQUFLLEVBQUUsR0FBRyxRQUFLLENBQUM7QUFDakMsUUFBQSxJQUFJLEVBQUUsRUFBRSxHQUFHLENBQUM7QUFFWixPQUFPLENBQUMsSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7QUFDL0IsUUFBQSxJQUFJLFNBQVMsRUFBRSxHQUFHLENBQUM7QUFDbkIsT0FBTyxDQUFDLElBQUksR0FBRyxFQUFFLEdBQUcsQ0FBQztBQUNyQixRQUFBLElBQUksRUFBRSxFQUFFLEdBQUcsQ0FBQztBQUNaLFFBQUEsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDO0FBQ1gsUUFBQSxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUM7QUFFWCxpQkFBUyxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBRTFCO0FBVUQsUUFBQSxJQUFJLENBQUMsUUFBSyxDQUFDIn0=,dmFyIHNpbXBsZVZhcjogYW55OwoKdmFyIGFub3RoZXJWYXI6IGFueTsKdmFyIHZhcldpdGhTaW1wbGVUeXBlOiBudW1iZXI7CnZhciB2YXJXaXRoQXJyYXlUeXBlOiBudW1iZXJbXTsKCnZhciB2YXJXaXRoSW5pdGlhbFZhbHVlID0gMzA7Cgp2YXIgd2l0aENvbXBsaWNhdGVkVmFsdWUgPSB7IHg6IDMwLCB5OiA3MCwgZGVzYzogInBvc2l0aW9uIiB9OwoKZGVjbGFyZSB2YXIgZGVjbGFyZWRWYXI6IGFueTsKZGVjbGFyZSB2YXIgZGVjbGFyZVZhcjI6IGFueQoKZGVjbGFyZSB2YXIgZGVjbGFyZWRWYXIzOiBhbnk7CmRlY2xhcmUgdmFyIGRlY2thcmVWYXJXaXRoVHlwZTogbnVtYmVyOwoKdmFyIGFycmF5VmFyOiBzdHJpbmdbXSA9IFsnYScsICdiJ107Cgp2YXIgY29tcGxpY2F0ZWRBcnJheVZhcjogeyB4OiBudW1iZXI7IHk6IHN0cmluZzsgfVtdIDsKY29tcGxpY2F0ZWRBcnJheVZhci5wdXNoKHsgeDogMzAsIHkgOiAnaGVsbG8gd29ybGQnIH0pOwoKdmFyIG4xOiB7IFtzOiBzdHJpbmddOiBudW1iZXI7IH07Cgp2YXIgYyA6IHsKICAgICAgICBuZXc/ICgpOiBhbnk7CiAgICB9Cgp2YXIgZDogewogICAgZm9vPyAoKTogewogICAgICAgIHg6IG51bWJlcjsKICAgIH07Cn0KCnZhciBkMzogewogICAgZm9vKCk6IHsKICAgICAgICB4OiBudW1iZXI7CiAgICAgICAgeTogbnVtYmVyOwogICAgfTsKfQoKdmFyIGQyOiB7CiAgICBmb28gKCk6IHsKICAgICAgICB4OiBudW1iZXI7CiAgICB9Owp9Cgp2YXIgbjI6IHsKICAgICgpOiB2b2lkOwp9CnZhciBuNDogewogICAgKCk6IHZvaWQ7Cn1bXTsKCnZhciBkNDogewogICAgZm9vKG46IHN0cmluZywgeDogeyB4OiBudW1iZXI7IHk6IG51bWJlcjsgfSk6IHsKICAgICAgICB4OiBudW1iZXI7CiAgICAgICAgeTogbnVtYmVyOwogICAgfTsKfQoKbW9kdWxlIG0yIHsKCiAgICBleHBvcnQgdmFyIGE6IGFueSwgYjI6IG51bWJlciA9IDEwLCBiOiBhbnk7CiAgICB2YXIgbTE7CiAgICB2YXIgYTIsIGIyMjogbnVtYmVyID0gMTAsIGIyMjI7CiAgICB2YXIgbTM7CgogICAgY2xhc3MgQyB7CiAgICAgICAgY29uc3RydWN0b3IgKHB1YmxpYyBiKSB7CiAgICAgICAgfQogICAgfQoKICAgIGV4cG9ydCBjbGFzcyBDMiB7CiAgICAgICAgY29uc3RydWN0b3IgKHB1YmxpYyBiOiBhbnkpIHsKICAgICAgICB9CiAgICB9CiAgICB2YXIgbTsKICAgIGRlY2xhcmUgdmFyIGQxLCBkMjsKICAgIHZhciBiMjM7CiAgICBkZWNsYXJlIHZhciB2MTsKICAgIGV4cG9ydCB2YXIgbUU6IGFueTsKICAgIGV4cG9ydCBkZWNsYXJlIHZhciBkMUU6IGFueSwgZDJFOiBhbnk7CiAgICBleHBvcnQgdmFyIGIyRTogYW55OwogICAgZXhwb3J0IGRlY2xhcmUgdmFyIHYxRTogYW55Owp9Cgp2YXIgYTIyOiBhbnksIGIyMiA9IDEwLCBjMjIgPSAzMDsKdmFyIG5uOiBhbnk7CgpkZWNsYXJlIHZhciBkYTE6IGFueSwgZGEyOiBhbnk7CnZhciBub3JtYWxWYXI6IGFueTsKZGVjbGFyZSB2YXIgZHYxOiBhbnk7CnZhciB4bDogYW55Owp2YXIgeDogYW55Owp2YXIgejogYW55OwoKZnVuY3Rpb24gZm9vKGEyOiBhbnkpOiB2b2lkIHsKICAgIHZhciBhID0gMTA7Cn0KCmZvciAodmFyIGkgPSAwLCBqID0gMDsgaSA8IDEwOyBpKyspIHsKICAgIGorKzsKfQoKCmZvciAodmFyIGsgPSAwOyBrIDwgMzA7IGsrKykgewogICAgaysrOwp9CnZhciBiID0gMTA7Cg==

