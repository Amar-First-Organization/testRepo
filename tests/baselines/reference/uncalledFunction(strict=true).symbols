=== tests/cases/compiler/uncalledFunction.ts ===
function a() {}
>a : Symbol(a, Decl(uncalledFunction.ts, 0, 0))

a;
>a : Symbol(a, Decl(uncalledFunction.ts, 0, 0))

const b = () => {}
>b : Symbol(b, Decl(uncalledFunction.ts, 3, 5))

b;
>b : Symbol(b, Decl(uncalledFunction.ts, 3, 5))

const c = {
>c : Symbol(c, Decl(uncalledFunction.ts, 6, 5))

    d: () => {},
>d : Symbol(d, Decl(uncalledFunction.ts, 6, 11))

    e: {
>e : Symbol(e, Decl(uncalledFunction.ts, 7, 16))

        f: () => {}
>f : Symbol(f, Decl(uncalledFunction.ts, 8, 8))
    }
}

c.d;
>c.d : Symbol(d, Decl(uncalledFunction.ts, 6, 11))
>c : Symbol(c, Decl(uncalledFunction.ts, 6, 5))
>d : Symbol(d, Decl(uncalledFunction.ts, 6, 11))

c['d'];
>c : Symbol(c, Decl(uncalledFunction.ts, 6, 5))
>'d' : Symbol(d, Decl(uncalledFunction.ts, 6, 11))

c.e.f;
>c.e.f : Symbol(f, Decl(uncalledFunction.ts, 8, 8))
>c.e : Symbol(e, Decl(uncalledFunction.ts, 7, 16))
>c : Symbol(c, Decl(uncalledFunction.ts, 6, 5))
>e : Symbol(e, Decl(uncalledFunction.ts, 7, 16))
>f : Symbol(f, Decl(uncalledFunction.ts, 8, 8))

c.e['f'];
>c.e : Symbol(e, Decl(uncalledFunction.ts, 7, 16))
>c : Symbol(c, Decl(uncalledFunction.ts, 6, 5))
>e : Symbol(e, Decl(uncalledFunction.ts, 7, 16))
>'f' : Symbol(f, Decl(uncalledFunction.ts, 8, 8))

class C {
>C : Symbol(C, Decl(uncalledFunction.ts, 17, 9))

    m1() {}
>m1 : Symbol(C.m1, Decl(uncalledFunction.ts, 19, 9))

    m2() {
>m2 : Symbol(C.m2, Decl(uncalledFunction.ts, 20, 11))

        this.m1;
>this.m1 : Symbol(C.m1, Decl(uncalledFunction.ts, 19, 9))
>this : Symbol(C, Decl(uncalledFunction.ts, 17, 9))
>m1 : Symbol(C.m1, Decl(uncalledFunction.ts, 19, 9))

        this['m1'];
>this : Symbol(C, Decl(uncalledFunction.ts, 17, 9))
>'m1' : Symbol(C.m1, Decl(uncalledFunction.ts, 19, 9))
    }
}

