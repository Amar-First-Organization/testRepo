//// [tests/cases/conformance/types/uniqueSymbol/uniqueSymbolsDeclarationsErrors.ts] ////



/// [Declarations] ////



//// [uniqueSymbolsDeclarationsErrors.d.ts]
declare const s: unique symbol;
interface I {
    readonly readonlyType: unique symbol;
}
export declare const obj: {
    method1(p: typeof s): typeof s;
    method2(p: I["readonlyType"]): I["readonlyType"];
};
export declare const classExpression: {
    new (): {
        method1(p: typeof s): typeof s;
        method2(p: I["readonlyType"]): I["readonlyType"];
    };
};
export declare function funcInferredReturnType(obj: {
    method(p: typeof s): void;
}): {
    method(p: typeof s): void;
};
export interface InterfaceWithPrivateNamedProperties {
    [s]: any;
}
export interface InterfaceWithPrivateNamedMethods {
    [s](): any;
}
export type TypeLiteralWithPrivateNamedProperties = {
    [s]: any;
};
export type TypeLiteralWithPrivateNamedMethods = {
    [s](): any;
};
export declare class ClassWithPrivateNamedProperties {
    [s]: any;
    static [s]: any;
}
export declare class ClassWithPrivateNamedMethods {
    [s](): void;
    static [s](): void;
}
export declare class ClassWithPrivateNamedAccessors {
    get [s](): any;
    set [s](v: any);
    static get [s](): any;
    static set [s](v: any);
}
export {};
//# sourceMappingURL=uniqueSymbolsDeclarationsErrors.d.ts.map

/// [Declarations Maps] ////


//// [uniqueSymbolsDeclarationsErrors.d.ts.map]
{"version":3,"file":"uniqueSymbolsDeclarationsErrors.d.ts","sourceRoot":"","sources":["uniqueSymbolsDeclarationsErrors.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,MAAM,CAAC;AAC/B,UAAU,CAAC;IAAG,QAAQ,CAAC,YAAY,EAAE,OAAO,MAAM,CAAC;CAAE;AAIrD,eAAO,MAAM,GAAG;IACZ,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC;IAG9B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC;CAGnD,CAAC;AAEF,eAAO,MAAM,eAAe;;QACxB,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC;QAG9B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC;;CAGnD,CAAC;AAEF,wBAAgB,sBAAsB,CAAC,GAAG,EAAE;IAAE,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,IAAI,CAAA;CAAE,GAAG;IACxE,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC;CAC7B,CAEA;AAED,MAAM,WAAW,mCAAmC;IAChD,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;CACZ;AAED,MAAM,WAAW,gCAAgC;IAC7C,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;CACd;AAED,MAAM,MAAM,qCAAqC,GAAG;IAChD,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;CACZ,CAAA;AAED,MAAM,MAAM,kCAAkC,GAAG;IAC7C,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;CACd,CAAA;AAED,qBAAa,+BAA+B;IACxC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;IACT,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;CACnB;AAED,qBAAa,4BAA4B;IACrC,CAAC,CAAC,CAAC,IAAI,IAAI;IACX,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;CACrB;AAED,qBAAa,8BAA8B;IACvC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,CAAsB;IACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAK;IACnB,MAAM,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAsB;IAC3C,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAK;CAC7B"}

//// https://sokra.github.io/source-map-visualization#base64,ZGVjbGFyZSBjb25zdCBzOiB1bmlxdWUgc3ltYm9sOw0KaW50ZXJmYWNlIEkgew0KICAgIHJlYWRvbmx5IHJlYWRvbmx5VHlwZTogdW5pcXVlIHN5bWJvbDsNCn0NCmV4cG9ydCBkZWNsYXJlIGNvbnN0IG9iajogew0KICAgIG1ldGhvZDEocDogdHlwZW9mIHMpOiB0eXBlb2YgczsNCiAgICBtZXRob2QyKHA6IElbInJlYWRvbmx5VHlwZSJdKTogSVsicmVhZG9ubHlUeXBlIl07DQp9Ow0KZXhwb3J0IGRlY2xhcmUgY29uc3QgY2xhc3NFeHByZXNzaW9uOiB7DQogICAgbmV3ICgpOiB7DQogICAgICAgIG1ldGhvZDEocDogdHlwZW9mIHMpOiB0eXBlb2YgczsNCiAgICAgICAgbWV0aG9kMihwOiBJWyJyZWFkb25seVR5cGUiXSk6IElbInJlYWRvbmx5VHlwZSJdOw0KICAgIH07DQp9Ow0KZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gZnVuY0luZmVycmVkUmV0dXJuVHlwZShvYmo6IHsNCiAgICBtZXRob2QocDogdHlwZW9mIHMpOiB2b2lkOw0KfSk6IHsNCiAgICBtZXRob2QocDogdHlwZW9mIHMpOiB2b2lkOw0KfTsNCmV4cG9ydCBpbnRlcmZhY2UgSW50ZXJmYWNlV2l0aFByaXZhdGVOYW1lZFByb3BlcnRpZXMgew0KICAgIFtzXTogYW55Ow0KfQ0KZXhwb3J0IGludGVyZmFjZSBJbnRlcmZhY2VXaXRoUHJpdmF0ZU5hbWVkTWV0aG9kcyB7DQogICAgW3NdKCk6IGFueTsNCn0NCmV4cG9ydCB0eXBlIFR5cGVMaXRlcmFsV2l0aFByaXZhdGVOYW1lZFByb3BlcnRpZXMgPSB7DQogICAgW3NdOiBhbnk7DQp9Ow0KZXhwb3J0IHR5cGUgVHlwZUxpdGVyYWxXaXRoUHJpdmF0ZU5hbWVkTWV0aG9kcyA9IHsNCiAgICBbc10oKTogYW55Ow0KfTsNCmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsYXNzV2l0aFByaXZhdGVOYW1lZFByb3BlcnRpZXMgew0KICAgIFtzXTogYW55Ow0KICAgIHN0YXRpYyBbc106IGFueTsNCn0NCmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsYXNzV2l0aFByaXZhdGVOYW1lZE1ldGhvZHMgew0KICAgIFtzXSgpOiB2b2lkOw0KICAgIHN0YXRpYyBbc10oKTogdm9pZDsNCn0NCmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsYXNzV2l0aFByaXZhdGVOYW1lZEFjY2Vzc29ycyB7DQogICAgZ2V0IFtzXSgpOiBhbnk7DQogICAgc2V0IFtzXSh2OiBhbnkpOw0KICAgIHN0YXRpYyBnZXQgW3NdKCk6IGFueTsNCiAgICBzdGF0aWMgc2V0IFtzXSh2OiBhbnkpOw0KfQ0KZXhwb3J0IHt9Ow0KLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5pcXVlU3ltYm9sc0RlY2xhcmF0aW9uc0Vycm9ycy5kLnRzLm1hcA==,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pcXVlU3ltYm9sc0RlY2xhcmF0aW9uc0Vycm9ycy5kLnRzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidW5pcXVlU3ltYm9sc0RlY2xhcmF0aW9uc0Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxNQUFNLENBQUM7QUFDL0IsVUFBVSxDQUFDO0lBQUcsUUFBUSxDQUFDLFlBQVksRUFBRSxPQUFPLE1BQU0sQ0FBQztDQUFFO0FBSXJELGVBQU8sTUFBTSxHQUFHO0lBQ1osT0FBTyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsR0FBRyxPQUFPLENBQUM7SUFHOUIsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGNBQWMsQ0FBQztDQUduRCxDQUFDO0FBRUYsZUFBTyxNQUFNLGVBQWU7O1FBQ3hCLE9BQU8sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBRzlCLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxjQUFjLENBQUM7O0NBR25ELENBQUM7QUFFRix3QkFBZ0Isc0JBQXNCLENBQUMsR0FBRyxFQUFFO0lBQUUsTUFBTSxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUE7Q0FBRSxHQUFHO0lBQ3hFLE1BQU0sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDO0NBQzdCLENBRUE7QUFFRCxNQUFNLFdBQVcsbUNBQW1DO0lBQ2hELENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDO0NBQ1o7QUFFRCxNQUFNLFdBQVcsZ0NBQWdDO0lBQzdDLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDO0NBQ2Q7QUFFRCxNQUFNLE1BQU0scUNBQXFDLEdBQUc7SUFDaEQsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7Q0FDWixDQUFBO0FBRUQsTUFBTSxNQUFNLGtDQUFrQyxHQUFHO0lBQzdDLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDO0NBQ2QsQ0FBQTtBQUVELHFCQUFhLCtCQUErQjtJQUN4QyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztJQUNULE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztDQUNuQjtBQUVELHFCQUFhLDRCQUE0QjtJQUNyQyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUk7SUFDWCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJO0NBQ3JCO0FBRUQscUJBQWEsOEJBQThCO0lBQ3ZDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLENBQXNCO0lBQ3BDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFLO0lBQ25CLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBc0I7SUFDM0MsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBSztDQUM3QiJ9,ZGVjbGFyZSBjb25zdCBzOiB1bmlxdWUgc3ltYm9sOwppbnRlcmZhY2UgSSB7IHJlYWRvbmx5IHJlYWRvbmx5VHlwZTogdW5pcXVlIHN5bWJvbDsgfQoKLy8gbm90IGFsbG93ZWQgd2hlbiBlbWl0dGluZyBkZWNsYXJhdGlvbnMKCmV4cG9ydCBjb25zdCBvYmogPSB7CiAgICBtZXRob2QxKHA6IHR5cGVvZiBzKTogdHlwZW9mIHMgewogICAgICAgIHJldHVybiBwOwogICAgfSwKICAgIG1ldGhvZDIocDogSVsicmVhZG9ubHlUeXBlIl0pOiBJWyJyZWFkb25seVR5cGUiXSB7CiAgICAgICAgcmV0dXJuIHA7CiAgICB9Cn07CgpleHBvcnQgY29uc3QgY2xhc3NFeHByZXNzaW9uID0gY2xhc3MgewogICAgbWV0aG9kMShwOiB0eXBlb2Ygcyk6IHR5cGVvZiBzIHsKICAgICAgICByZXR1cm4gcDsKICAgIH0KICAgIG1ldGhvZDIocDogSVsicmVhZG9ubHlUeXBlIl0pOiBJWyJyZWFkb25seVR5cGUiXSB7CiAgICAgICAgcmV0dXJuIHA7CiAgICB9Cn07CgpleHBvcnQgZnVuY3Rpb24gZnVuY0luZmVycmVkUmV0dXJuVHlwZShvYmo6IHsgbWV0aG9kKHA6IHR5cGVvZiBzKTogdm9pZCB9KTogewogICAgbWV0aG9kKHA6IHR5cGVvZiBzKTogdm9pZDsKfSB7CiAgICByZXR1cm4gb2JqOwp9CgpleHBvcnQgaW50ZXJmYWNlIEludGVyZmFjZVdpdGhQcml2YXRlTmFtZWRQcm9wZXJ0aWVzIHsKICAgIFtzXTogYW55Owp9CgpleHBvcnQgaW50ZXJmYWNlIEludGVyZmFjZVdpdGhQcml2YXRlTmFtZWRNZXRob2RzIHsKICAgIFtzXSgpOiBhbnk7Cn0KCmV4cG9ydCB0eXBlIFR5cGVMaXRlcmFsV2l0aFByaXZhdGVOYW1lZFByb3BlcnRpZXMgPSB7CiAgICBbc106IGFueTsKfQoKZXhwb3J0IHR5cGUgVHlwZUxpdGVyYWxXaXRoUHJpdmF0ZU5hbWVkTWV0aG9kcyA9IHsKICAgIFtzXSgpOiBhbnk7Cn0KCmV4cG9ydCBjbGFzcyBDbGFzc1dpdGhQcml2YXRlTmFtZWRQcm9wZXJ0aWVzIHsKICAgIFtzXTogYW55OwogICAgc3RhdGljIFtzXTogYW55Owp9CgpleHBvcnQgY2xhc3MgQ2xhc3NXaXRoUHJpdmF0ZU5hbWVkTWV0aG9kcyB7CiAgICBbc10oKTogdm9pZCB7fQogICAgc3RhdGljIFtzXSgpOiB2b2lkIHt9Cn0KCmV4cG9ydCBjbGFzcyBDbGFzc1dpdGhQcml2YXRlTmFtZWRBY2Nlc3NvcnMgewogICAgZ2V0IFtzXSgpOiBhbnkgeyByZXR1cm4gdW5kZWZpbmVkOyB9CiAgICBzZXQgW3NdKHY6IGFueSkgeyB9CiAgICBzdGF0aWMgZ2V0IFtzXSgpOiBhbnkgeyByZXR1cm4gdW5kZWZpbmVkOyB9CiAgICBzdGF0aWMgc2V0IFtzXSh2OiBhbnkpIHsgfQp9

