=== tests/cases/compiler/autoLift2.ts ===
class A
>A : A

{
    constructor() {
        this.foo: any;
>this.foo : any (error)
>this : this
>foo : any (error)
>any : any (error)

        this.bar: any;
>this.bar : any (error)
>this : this
>bar : any (error)
>any : any (error)
    }


  baz() {
>baz : () => void

     this.foo = "foo";
>this.foo = "foo" : "foo"
>this.foo : any (error)
>this : this
>foo : any (error)
>"foo" : "foo"

     this.bar = "bar";
>this.bar = "bar" : "bar"
>this.bar : any (error)
>this : this
>bar : any (error)
>"bar" : "bar"

     [1, 2].forEach((p) => this.foo);
>[1, 2].forEach((p) => this.foo) : void
>[1, 2].forEach : (callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void
>[1, 2] : number[]
>1 : 1
>2 : 2
>forEach : (callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void
>(p) => this.foo : (p: number) => any (error)
>p : number
>this.foo : any (error)
>this : this
>foo : any (error)

     [1, 2].forEach((p) => this.bar);
>[1, 2].forEach((p) => this.bar) : void
>[1, 2].forEach : (callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void
>[1, 2] : number[]
>1 : 1
>2 : 2
>forEach : (callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void
>(p) => this.bar : (p: number) => any (error)
>p : number
>this.bar : any (error)
>this : this
>bar : any (error)

  }

}



var a = new A();
>a : A
>new A() : A
>A : typeof A

a.baz();
>a.baz() : void
>a.baz : () => void
>a : A
>baz : () => void



