tests/cases/conformance/jsx/file.tsx(9,34): error TS2698: Spread types may only be created from object types.
tests/cases/conformance/jsx/file.tsx(14,34): error TS2698: Spread types may only be created from object types.
tests/cases/conformance/jsx/file.tsx(21,19): error TS2322: Type '{ func: (a: number, b: string) => void; }' is not assignable to type 'IntrinsicAttributes & { func: (arg: number) => void; }'.
  Type '{ func: (a: number, b: string) => void; }' is not assignable to type '{ func: (arg: number) => void; }'.
    Types of property 'func' are incompatible.
      Type '(a: number, b: string) => void' is not assignable to type '(arg: number) => void'.


==== tests/cases/conformance/jsx/file.tsx (3 errors) ====
    
    import React = require('react')
    
    declare function ComponentSpecific1<U>(l: {prop: U, "ignore-prop": string}): JSX.Element;
    declare function ComponentSpecific2<U>(l: {prop: U}): JSX.Element;
    
    // Error
    function Bar<T extends {prop: number}>(arg: T) {
        let a1 = <ComponentSpecific1 {...arg} ignore-prop={10} />;
                                     ~~~~~~~~
!!! error TS2698: Spread types may only be created from object types.
     }
    
    // Error
    function Baz<T>(arg: T) {
        let a0 = <ComponentSpecific1 {...arg} />
                                     ~~~~~~~~
!!! error TS2698: Spread types may only be created from object types.
    }
    
    declare function Link<U>(l: {func: (arg: U)=>void}): JSX.Element;
    
    // Error
    function createLink(func: (a: number, b: string)=>void) {
        let o = <Link func={func} />
                      ~~~~~~~~~~~
!!! error TS2322: Type '{ func: (a: number, b: string) => void; }' is not assignable to type 'IntrinsicAttributes & { func: (arg: number) => void; }'.
!!! error TS2322:   Type '{ func: (a: number, b: string) => void; }' is not assignable to type '{ func: (arg: number) => void; }'.
!!! error TS2322:     Types of property 'func' are incompatible.
!!! error TS2322:       Type '(a: number, b: string) => void' is not assignable to type '(arg: number) => void'.
    }