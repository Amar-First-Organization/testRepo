=== tests/cases/compiler/numberFormatCurrencySignResolved.ts ===
const options = new Intl.NumberFormat('en-NZ', { style: 'currency', currency: 'NZD', currencySign: 'accounting' }).resolvedOptions();
>options : Symbol(options, Decl(numberFormatCurrencySignResolved.ts, 0, 5))
>new Intl.NumberFormat('en-NZ', { style: 'currency', currency: 'NZD', currencySign: 'accounting' }).resolvedOptions : Symbol(Intl.NumberFormat.resolvedOptions, Decl(lib.es5.d.ts, --, --))
>Intl.NumberFormat : Symbol(Intl.NumberFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>Intl : Symbol(Intl, Decl(lib.es5.d.ts, --, --))
>NumberFormat : Symbol(Intl.NumberFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>style : Symbol(style, Decl(numberFormatCurrencySignResolved.ts, 0, 48))
>currency : Symbol(currency, Decl(numberFormatCurrencySignResolved.ts, 0, 67))
>currencySign : Symbol(currencySign, Decl(numberFormatCurrencySignResolved.ts, 0, 84))
>resolvedOptions : Symbol(Intl.NumberFormat.resolvedOptions, Decl(lib.es5.d.ts, --, --))

const currencySign = options.currencySign;
>currencySign : Symbol(currencySign, Decl(numberFormatCurrencySignResolved.ts, 1, 5))
>options.currencySign : Symbol(Intl.ResolvedNumberFormatOptions.currencySign, Decl(lib.es5.d.ts, --, --))
>options : Symbol(options, Decl(numberFormatCurrencySignResolved.ts, 0, 5))
>currencySign : Symbol(Intl.ResolvedNumberFormatOptions.currencySign, Decl(lib.es5.d.ts, --, --))

