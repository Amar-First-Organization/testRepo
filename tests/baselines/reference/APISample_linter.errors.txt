typescript_standalone.d.ts(21,28): error TS1005: ';' expected.
typescript_standalone.d.ts(21,41): error TS1005: ';' expected.
typescript_standalone.d.ts(8913,28): error TS1005: ';' expected.
typescript_standalone.d.ts(8913,42): error TS1005: ';' expected.
typescript_standalone.d.ts(9173,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9173,46): error TS1005: ';' expected.
typescript_standalone.d.ts(9523,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9523,36): error TS1005: ';' expected.
typescript_standalone.d.ts(9547,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9547,36): error TS1005: ';' expected.
typescript_standalone.d.ts(9634,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9634,38): error TS1005: ';' expected.
typescript_standalone.d.ts(10799,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10799,57): error TS1005: ';' expected.
typescript_standalone.d.ts(10810,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10810,41): error TS1005: ';' expected.
typescript_standalone.d.ts(10820,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10820,48): error TS1005: ';' expected.
typescript_standalone.d.ts(10895,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10895,47): error TS1005: ';' expected.
typescript_standalone.d.ts(10952,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10952,47): error TS1005: ';' expected.
typescript_standalone.d.ts(11006,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11006,52): error TS1005: ';' expected.
typescript_standalone.d.ts(11026,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11026,44): error TS1005: ';' expected.
typescript_standalone.d.ts(11036,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11036,35): error TS1005: ';' expected.
typescript_standalone.d.ts(11070,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11070,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11073,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11073,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11077,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11077,45): error TS1005: ';' expected.
typescript_standalone.d.ts(11095,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11095,56): error TS1005: ';' expected.
typescript_standalone.d.ts(11121,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11121,36): error TS1005: ';' expected.
typescript_standalone.d.ts(11124,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11124,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11136,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11136,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11166,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11166,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11200,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11200,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11211,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11211,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11235,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11235,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11243,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11243,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11247,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11247,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11277,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11277,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11320,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11320,41): error TS1005: ';' expected.
typescript_standalone.d.ts(11507,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11507,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11509,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11509,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11513,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11513,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11515,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11515,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11517,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11517,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11519,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11519,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11521,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11521,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11530,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11530,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11532,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11532,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11534,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11534,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11536,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11536,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11538,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11538,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11540,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11540,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11542,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11542,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11544,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11544,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11546,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11546,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11548,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11548,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11550,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11550,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11552,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11552,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11554,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11554,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11556,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11556,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11558,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11558,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11568,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11568,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11570,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11570,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11572,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11572,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11574,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11574,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11576,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11576,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11578,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11578,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11580,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11580,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11582,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11582,72): error TS1005: ';' expected.
typescript_standalone.d.ts(11584,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11584,52): error TS1005: ';' expected.
typescript_standalone.d.ts(11656,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11656,72): error TS1005: ';' expected.
typescript_standalone.d.ts(11658,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11658,38): error TS1005: ';' expected.
typescript_standalone.d.ts(11660,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11660,71): error TS1005: ';' expected.
typescript_standalone.d.ts(11662,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11662,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11738,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11738,48): error TS1005: ';' expected.


==== tests/cases/compiler/APISample_linter.ts (0 errors) ====
    /*
     * Note: This test is a public API sample. The sample sources can be found 
             at: https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#traversing-the-ast-with-a-little-linter
     *       Please log a "breaking change" issue for any API breaking change affecting this issue
     */
    
    declare var process: any;
    declare var console: any;
    declare var readFileSync: any;
    
    import * as ts from "typescript";
    
    export function delint(sourceFile: ts.SourceFile) {
        delintNode(sourceFile);
    
        function delintNode(node: ts.Node) {
            switch (node.kind) {
                case ts.SyntaxKind.ForStatement:
                case ts.SyntaxKind.ForInStatement:
                case ts.SyntaxKind.WhileStatement:
                case ts.SyntaxKind.DoStatement:
                    if ((<ts.IterationStatement>node).statement.kind !== ts.SyntaxKind.Block) {
                        report(node, "A looping statement's contents should be wrapped in a block body.");
                    }
                    break;
    
                case ts.SyntaxKind.IfStatement:
                    let ifStatement = (<ts.IfStatement>node);
                    if (ifStatement.thenStatement.kind !== ts.SyntaxKind.Block) {
                        report(ifStatement.thenStatement, "An if statement's contents should be wrapped in a block body.");
                    }
                    if (ifStatement.elseStatement &&
                        ifStatement.elseStatement.kind !== ts.SyntaxKind.Block &&
                        ifStatement.elseStatement.kind !== ts.SyntaxKind.IfStatement) {
                        report(ifStatement.elseStatement, "An else statement's contents should be wrapped in a block body.");
                    }
                    break;
    
                case ts.SyntaxKind.BinaryExpression:
                    let op = (<ts.BinaryExpression>node).operatorToken.kind;
                    if (op === ts.SyntaxKind.EqualsEqualsToken || op == ts.SyntaxKind.ExclamationEqualsToken) {
                        report(node, "Use '===' and '!=='.")
                    }
                    break;
            }
    
            ts.forEachChild(node, delintNode);
        }
    
        function report(node: ts.Node, message: string) {
            let { line, character } = sourceFile.getLineAndCharacterOfPosition(node.getStart());
            console.log(`${sourceFile.fileName} (${line + 1},${character + 1}): ${message}`);
        }
    }
    
    const fileNames: string[] = process.argv.slice(2);
    fileNames.forEach(fileName => {
        // Parse a file
        let sourceFile = ts.createSourceFile(fileName, readFileSync(fileName).toString(), ts.ScriptTarget.ES2015, /*setParentNodes */ true);
    
        // delint it
        delint(sourceFile);
    });