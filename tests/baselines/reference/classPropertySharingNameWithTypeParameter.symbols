//// [tests/cases/compiler/classPropertySharingNameWithTypeParameter.ts] ////

=== classPropertySharingNameWithTypeParameter.ts ===
class Leg {}
>Leg : Symbol(Leg, Decl(classPropertySharingNameWithTypeParameter.ts, 0, 0))

class Foo<t> extends Leg {
>Foo : Symbol(Foo, Decl(classPropertySharingNameWithTypeParameter.ts, 0, 12))
>t : Symbol(t, Decl(classPropertySharingNameWithTypeParameter.ts, 2, 10), Decl(classPropertySharingNameWithTypeParameter.ts, 2, 26))
>Leg : Symbol(Leg, Decl(classPropertySharingNameWithTypeParameter.ts, 0, 0))

    t = {} as t
>t : Symbol(t, Decl(classPropertySharingNameWithTypeParameter.ts, 2, 10), Decl(classPropertySharingNameWithTypeParameter.ts, 2, 26))
>t : Symbol(t, Decl(classPropertySharingNameWithTypeParameter.ts, 2, 10), Decl(classPropertySharingNameWithTypeParameter.ts, 2, 26))

    // should allow this access since t was declared as a property on Foo
    foo = this.t 
>foo : Symbol(Foo.foo, Decl(classPropertySharingNameWithTypeParameter.ts, 3, 15))
>this.t : Symbol(t, Decl(classPropertySharingNameWithTypeParameter.ts, 2, 10), Decl(classPropertySharingNameWithTypeParameter.ts, 2, 26))
>this : Symbol(Foo, Decl(classPropertySharingNameWithTypeParameter.ts, 0, 12))
>t : Symbol(t, Decl(classPropertySharingNameWithTypeParameter.ts, 2, 10), Decl(classPropertySharingNameWithTypeParameter.ts, 2, 26))
}
