tests/cases/conformance/types/typeRelationships/recursiveTypes/recursiveTypeInGenericConstraint.ts(13,18): error TS2344: Type 'D<string>' does not satisfy the constraint 'G<D<string>>'.
  Types of property 'x' are incompatible.
    Type 'G<G<string>>' is not assignable to type 'G<G<D<string>>>'.
      Type 'G<string>' is not assignable to type 'G<D<string>>'.
        Type 'string' is not assignable to type 'D<string>'.


==== tests/cases/conformance/types/typeRelationships/recursiveTypes/recursiveTypeInGenericConstraint.ts (1 errors) ====
    class G<T> {
        x: G<G<T>>; // infinitely expanding type reference
    }
    
    class Foo<T extends G<T>> { // error, constraint referencing itself
        bar: T;
    }
    
    class D<T> {
        x: G<G<T>>; 
    }
    
    var c1 = new Foo<D<string>>(); // ok, circularity in assignment compat check causes success
                     ~~~~~~~~~
!!! error TS2344: Type 'D<string>' does not satisfy the constraint 'G<D<string>>'.
!!! error TS2344:   Types of property 'x' are incompatible.
!!! error TS2344:     Type 'G<G<string>>' is not assignable to type 'G<G<D<string>>>'.
!!! error TS2344:       Type 'G<string>' is not assignable to type 'G<D<string>>'.
!!! error TS2344:         Type 'string' is not assignable to type 'D<string>'.