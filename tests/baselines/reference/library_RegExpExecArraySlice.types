=== tests/cases/compiler/library_RegExpExecArraySlice.ts ===
// RegExpExecArray.slice can have zero, one, or two arguments
var regExpExecArrayValue: RegExpExecArray;
>regExpExecArrayValue : RegExpExecArray
>RegExpExecArray : RegExpExecArray

regExpExecArrayValue.slice();
>regExpExecArrayValue.slice() : RegExpExecArray
>regExpExecArrayValue.slice : { (): RegExpExecArray; (start?: number, end?: number): string[]; }
>regExpExecArrayValue : RegExpExecArray
>slice : { (): RegExpExecArray; (start?: number, end?: number): string[]; }

regExpExecArrayValue.slice(0);
>regExpExecArrayValue.slice(0) : string[]
>regExpExecArrayValue.slice : { (): RegExpExecArray; (start?: number, end?: number): string[]; }
>regExpExecArrayValue : RegExpExecArray
>slice : { (): RegExpExecArray; (start?: number, end?: number): string[]; }
>0 : number

regExpExecArrayValue.slice(0,1);
>regExpExecArrayValue.slice(0,1) : string[]
>regExpExecArrayValue.slice : { (): RegExpExecArray; (start?: number, end?: number): string[]; }
>regExpExecArrayValue : RegExpExecArray
>slice : { (): RegExpExecArray; (start?: number, end?: number): string[]; }
>0 : number
>1 : number

