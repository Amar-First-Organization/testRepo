=== tests/cases/compiler/valueUsedAsTypeArgument.ts ===
type Foo<T> = { items: T };
>Foo : Foo<T>
>items : T

type Other<U> = {};
>Other : Other<U>

const Something = [];
>Something : any[]
>[] : undefined[]

// Type argument, should show new error
type SomeFoo = Foo<Something>;
>SomeFoo : Foo<any>

// Type alias
type SomeBar = Something;
>SomeBar : any

// Nested type arguments, should show new error
type SomeOther = Other<Foo<Something>>;
>SomeOther : Other<Foo<any>>

// Misuse of value
const x: Something = [];
>x : any
>[] : undefined[]

// Numeric literal type
type LiteralNumberFoo = Foo<1>;
>LiteralNumberFoo : Foo<1>

// String literal type
type LiteralStringFoo = Foo<'test'>;
>LiteralStringFoo : Foo<"test">

