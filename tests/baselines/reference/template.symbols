=== tests/cases/conformance/es2018/template.ts ===
function tag (str: any, ...args: any[]): string {
>tag : Symbol(tag, Decl(template.ts, 0, 0))
>str : Symbol(str, Decl(template.ts, 0, 14))
>args : Symbol(args, Decl(template.ts, 0, 23))

  return str
>str : Symbol(str, Decl(template.ts, 0, 14))
}

const x = tag`\u{hello} ${ 100 } \xtraordinary ${ 200 } wonderful ${ 300 } \uworld`;
>x : Symbol(x, Decl(template.ts, 4, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const y = `\u{hello} ${ 100 } \xtraordinary ${ 200 } wonderful ${ 300 } \uworld`;
>y : Symbol(y, Decl(template.ts, 5, 5))

const a1 = tag`${ 100 }\0` // \0
>a1 : Symbol(a1, Decl(template.ts, 7, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a2 = tag`${ 100 }\00` // \\00
>a2 : Symbol(a2, Decl(template.ts, 8, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a3 = tag`${ 100 }\u` // \\u
>a3 : Symbol(a3, Decl(template.ts, 9, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a4 = tag`${ 100 }\u0` // \\u0
>a4 : Symbol(a4, Decl(template.ts, 10, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a5 = tag`${ 100 }\u00` // \\u00
>a5 : Symbol(a5, Decl(template.ts, 11, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a6 = tag`${ 100 }\u000` // \\u000
>a6 : Symbol(a6, Decl(template.ts, 12, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a7 = tag`${ 100 }\u0000` // \u0000
>a7 : Symbol(a7, Decl(template.ts, 13, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a8 = tag`${ 100 }\u{` // \\u{
>a8 : Symbol(a8, Decl(template.ts, 14, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a9 = tag`${ 100 }\u{10FFFF` // \\u{10FFFF
>a9 : Symbol(a9, Decl(template.ts, 15, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a10 = tag`${ 100 }\u{1d306` // \\u{1d306
>a10 : Symbol(a10, Decl(template.ts, 16, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a11 = tag`${ 100 }\u{1d306}` // \u{1d306}
>a11 : Symbol(a11, Decl(template.ts, 17, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a12 = tag`${ 100 }\x` // \\x
>a12 : Symbol(a12, Decl(template.ts, 18, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

const a13 = tag`${ 100 }\x0` // \\x0
>a13 : Symbol(a13, Decl(template.ts, 19, 5))
>tag : Symbol(tag, Decl(template.ts, 0, 0))

