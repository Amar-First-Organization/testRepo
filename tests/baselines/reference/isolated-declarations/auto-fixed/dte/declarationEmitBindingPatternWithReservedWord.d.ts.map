//// [tests/cases/compiler/declarationEmitBindingPatternWithReservedWord.ts] ////

//// [declarationEmitBindingPatternWithReservedWord.ts]
type LocaleData = Record<string, never>
type ConvertLocaleConfig<T extends LocaleData = LocaleData> = Record<
  string,
  T
>;
type LocaleConfig<T extends LocaleData = LocaleData> = Record<string, Partial<T>>;

export interface GetLocalesOptions<T extends LocaleData> {
    app: unknown;
    default: ConvertLocaleConfig<T>;
    config?: LocaleConfig<T> | undefined;
    name?: string;
}

export const getLocales = <T extends LocaleData>({
    app,
    name,
    default: defaultLocalesConfig,
    config: userLocalesConfig = {},
}: GetLocalesOptions<T>): ConvertLocaleConfig<T> => {
    return defaultLocalesConfig;
};


/// [Declarations] ////



//// [declarationEmitBindingPatternWithReservedWord.d.ts]
type LocaleData = Record<string, never>;
type ConvertLocaleConfig<T extends LocaleData = LocaleData> = Record<string, T>;
type LocaleConfig<T extends LocaleData = LocaleData> = Record<string, Partial<T>>;
export interface GetLocalesOptions<T extends LocaleData> {
    app: unknown;
    default: ConvertLocaleConfig<T>;
    config?: LocaleConfig<T> | undefined;
    name?: string;
}
export declare const getLocales: <T extends LocaleData>({ app, name, default: defaultLocalesConfig, config: userLocalesConfig, }: GetLocalesOptions<T>) => ConvertLocaleConfig<T>;
export {};
//# sourceMappingURL=declarationEmitBindingPatternWithReservedWord.d.ts.map

/// [Declarations Maps] ////


//// [declarationEmitBindingPatternWithReservedWord.d.ts.map]
{"version":3,"file":"declarationEmitBindingPatternWithReservedWord.d.ts","sourceRoot":"","sources":["declarationEmitBindingPatternWithReservedWord.ts"],"names":[],"mappings":"AAAA,KAAK,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;AACvC,KAAK,mBAAmB,CAAC,CAAC,SAAS,UAAU,GAAG,UAAU,IAAI,MAAM,CAClE,MAAM,EACN,CAAC,CACF,CAAC;AACF,KAAK,YAAY,CAAC,CAAC,SAAS,UAAU,GAAG,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAElF,MAAM,WAAW,iBAAiB,CAAC,CAAC,SAAS,UAAU;IACnD,GAAG,EAAE,OAAO,CAAC;IACb,OAAO,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAChC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IACrC,IAAI,CAAC,EAAE,MAAM,CAAC;CACjB;AAED,eAAO,MAAM,UAAU,GAAI,CAAC,SAAS,UAAU,EAAE,EAC7C,GAAG,EACH,IAAI,EACJ,OAAO,EAAE,oBAAoB,EAC7B,MAAM,EAAE,iBAAsB,GACjC,EAAE,iBAAiB,CAAC,CAAC,CAAC,KAAG,mBAAmB,CAAC,CAAC,CAE9C,CAAC"}

//// https://sokra.github.io/source-map-visualization#base64,dHlwZSBMb2NhbGVEYXRhID0gUmVjb3JkPHN0cmluZywgbmV2ZXI+Ow0KdHlwZSBDb252ZXJ0TG9jYWxlQ29uZmlnPFQgZXh0ZW5kcyBMb2NhbGVEYXRhID0gTG9jYWxlRGF0YT4gPSBSZWNvcmQ8c3RyaW5nLCBUPjsNCnR5cGUgTG9jYWxlQ29uZmlnPFQgZXh0ZW5kcyBMb2NhbGVEYXRhID0gTG9jYWxlRGF0YT4gPSBSZWNvcmQ8c3RyaW5nLCBQYXJ0aWFsPFQ+PjsNCmV4cG9ydCBpbnRlcmZhY2UgR2V0TG9jYWxlc09wdGlvbnM8VCBleHRlbmRzIExvY2FsZURhdGE+IHsNCiAgICBhcHA6IHVua25vd247DQogICAgZGVmYXVsdDogQ29udmVydExvY2FsZUNvbmZpZzxUPjsNCiAgICBjb25maWc/OiBMb2NhbGVDb25maWc8VD4gfCB1bmRlZmluZWQ7DQogICAgbmFtZT86IHN0cmluZzsNCn0NCmV4cG9ydCBkZWNsYXJlIGNvbnN0IGdldExvY2FsZXM6IDxUIGV4dGVuZHMgTG9jYWxlRGF0YT4oeyBhcHAsIG5hbWUsIGRlZmF1bHQ6IGRlZmF1bHRMb2NhbGVzQ29uZmlnLCBjb25maWc6IHVzZXJMb2NhbGVzQ29uZmlnLCB9OiBHZXRMb2NhbGVzT3B0aW9uczxUPikgPT4gQ29udmVydExvY2FsZUNvbmZpZzxUPjsNCmV4cG9ydCB7fTsNCi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY2xhcmF0aW9uRW1pdEJpbmRpbmdQYXR0ZXJuV2l0aFJlc2VydmVkV29yZC5kLnRzLm1hcA==,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjbGFyYXRpb25FbWl0QmluZGluZ1BhdHRlcm5XaXRoUmVzZXJ2ZWRXb3JkLmQudHMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkZWNsYXJhdGlvbkVtaXRCaW5kaW5nUGF0dGVybldpdGhSZXNlcnZlZFdvcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsS0FBSyxVQUFVLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQTtBQUN2QyxLQUFLLG1CQUFtQixDQUFDLENBQUMsU0FBUyxVQUFVLEdBQUcsVUFBVSxJQUFJLE1BQU0sQ0FDbEUsTUFBTSxFQUNOLENBQUMsQ0FDRixDQUFDO0FBQ0YsS0FBSyxZQUFZLENBQUMsQ0FBQyxTQUFTLFVBQVUsR0FBRyxVQUFVLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUVsRixNQUFNLFdBQVcsaUJBQWlCLENBQUMsQ0FBQyxTQUFTLFVBQVU7SUFDbkQsR0FBRyxFQUFFLE9BQU8sQ0FBQztJQUNiLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoQyxNQUFNLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDO0lBQ3JDLElBQUksQ0FBQyxFQUFFLE1BQU0sQ0FBQztDQUNqQjtBQUVELGVBQU8sTUFBTSxVQUFVLEdBQUksQ0FBQyxTQUFTLFVBQVUsRUFBRSxFQUM3QyxHQUFHLEVBQ0gsSUFBSSxFQUNKLE9BQU8sRUFBRSxvQkFBb0IsRUFDN0IsTUFBTSxFQUFFLGlCQUFzQixHQUNqQyxFQUFFLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxLQUFHLG1CQUFtQixDQUFDLENBQUMsQ0FFOUMsQ0FBQyJ9,dHlwZSBMb2NhbGVEYXRhID0gUmVjb3JkPHN0cmluZywgbmV2ZXI+CnR5cGUgQ29udmVydExvY2FsZUNvbmZpZzxUIGV4dGVuZHMgTG9jYWxlRGF0YSA9IExvY2FsZURhdGE+ID0gUmVjb3JkPAogIHN0cmluZywKICBUCj47CnR5cGUgTG9jYWxlQ29uZmlnPFQgZXh0ZW5kcyBMb2NhbGVEYXRhID0gTG9jYWxlRGF0YT4gPSBSZWNvcmQ8c3RyaW5nLCBQYXJ0aWFsPFQ+PjsKCmV4cG9ydCBpbnRlcmZhY2UgR2V0TG9jYWxlc09wdGlvbnM8VCBleHRlbmRzIExvY2FsZURhdGE+IHsKICAgIGFwcDogdW5rbm93bjsKICAgIGRlZmF1bHQ6IENvbnZlcnRMb2NhbGVDb25maWc8VD47CiAgICBjb25maWc/OiBMb2NhbGVDb25maWc8VD4gfCB1bmRlZmluZWQ7CiAgICBuYW1lPzogc3RyaW5nOwp9CgpleHBvcnQgY29uc3QgZ2V0TG9jYWxlcyA9IDxUIGV4dGVuZHMgTG9jYWxlRGF0YT4oewogICAgYXBwLAogICAgbmFtZSwKICAgIGRlZmF1bHQ6IGRlZmF1bHRMb2NhbGVzQ29uZmlnLAogICAgY29uZmlnOiB1c2VyTG9jYWxlc0NvbmZpZyA9IHt9LAp9OiBHZXRMb2NhbGVzT3B0aW9uczxUPik6IENvbnZlcnRMb2NhbGVDb25maWc8VD4gPT4gewogICAgcmV0dXJuIGRlZmF1bHRMb2NhbGVzQ29uZmlnOwp9Owo=

