//// [tests/cases/conformance/node/nodeModulesDeclarationEmitWithPackageExports.ts] ////

=== index.ts ===
// esm format file
import * as cjs from "package/cjs";
>cjs : any
>    : ^^^

import * as mjs from "package/mjs";
>mjs : any
>    : ^^^

import * as type from "package";
>type : any
>     : ^^^

export const a = cjs;
>a : any
>  : ^^^
>cjs : any
>    : ^^^

export const b = mjs;
>b : any
>  : ^^^
>mjs : any
>    : ^^^

export const c = type;
>c : any
>  : ^^^
>type : any
>     : ^^^

import * as cjsi from "inner/cjs";
>cjsi : any
>     : ^^^

import * as mjsi from "inner/mjs";
>mjsi : any
>     : ^^^

import * as typei from "inner";
>typei : any
>      : ^^^

export const d = cjsi;
>d : any
>  : ^^^
>cjsi : any
>     : ^^^

export const e = mjsi;
>e : any
>  : ^^^
>mjsi : any
>     : ^^^

export const f = typei;
>f : any
>  : ^^^
>typei : any
>      : ^^^

=== index.mts ===
// esm format file
import * as cjs from "package/cjs";
>cjs : any
>    : ^^^

import * as mjs from "package/mjs";
>mjs : any
>    : ^^^

import * as type from "package";
>type : any
>     : ^^^

export const a = cjs;
>a : any
>  : ^^^
>cjs : any
>    : ^^^

export const b = mjs;
>b : any
>  : ^^^
>mjs : any
>    : ^^^

export const c = type;
>c : any
>  : ^^^
>type : any
>     : ^^^

import * as cjsi from "inner/cjs";
>cjsi : any
>     : ^^^

import * as mjsi from "inner/mjs";
>mjsi : any
>     : ^^^

import * as typei from "inner";
>typei : any
>      : ^^^

export const d = cjsi;
>d : any
>  : ^^^
>cjsi : any
>     : ^^^

export const e = mjsi;
>e : any
>  : ^^^
>mjsi : any
>     : ^^^

export const f = typei;
>f : any
>  : ^^^
>typei : any
>      : ^^^

=== index.cts ===
// cjs format file
import * as cjs from "package/cjs";
>cjs : any
>    : ^^^

import * as mjs from "package/mjs";
>mjs : any
>    : ^^^

import * as type from "package";
>type : any
>     : ^^^

export const a = cjs;
>a : any
>  : ^^^
>cjs : any
>    : ^^^

export const b = mjs;
>b : any
>  : ^^^
>mjs : any
>    : ^^^

export const c = type;
>c : any
>  : ^^^
>type : any
>     : ^^^

import * as cjsi from "inner/cjs";
>cjsi : any
>     : ^^^

import * as mjsi from "inner/mjs";
>mjsi : any
>     : ^^^

import * as typei from "inner";
>typei : any
>      : ^^^

export const d = cjsi;
>d : any
>  : ^^^
>cjsi : any
>     : ^^^

export const e = mjsi;
>e : any
>  : ^^^
>mjsi : any
>     : ^^^

export const f = typei;
>f : any
>  : ^^^
>typei : any
>      : ^^^

=== node_modules/inner/index.d.ts ===
// cjs format file
import * as cjs from "inner/cjs";
>cjs : any
>    : ^^^

import * as mjs from "inner/mjs";
>mjs : any
>    : ^^^

import * as type from "inner";
>type : any
>     : ^^^

cjs;
>cjs : any
>    : ^^^

mjs;
>mjs : any
>    : ^^^

type;
>type : any
>     : ^^^

export const cjsMain = true;
>cjsMain : true
>        : ^^^^
>true : true
>     : ^^^^

=== node_modules/inner/index.d.mts ===
// esm format file
import * as cjs from "inner/cjs";
>cjs : any
>    : ^^^

import * as mjs from "inner/mjs";
>mjs : any
>    : ^^^

import * as type from "inner";
>type : any
>     : ^^^

cjs;
>cjs : any
>    : ^^^

mjs;
>mjs : any
>    : ^^^

type;
>type : any
>     : ^^^

export const esm = true;
>esm : true
>    : ^^^^
>true : true
>     : ^^^^

=== node_modules/inner/index.d.cts ===
// cjs format file
import * as cjs from "inner/cjs";
>cjs : any
>    : ^^^

import * as mjs from "inner/mjs";
>mjs : any
>    : ^^^

import * as type from "inner";
>type : any
>     : ^^^

cjs;
>cjs : any
>    : ^^^

mjs;
>mjs : any
>    : ^^^

type;
>type : any
>     : ^^^

export const cjsNonmain = true;
>cjsNonmain : true
>           : ^^^^
>true : true
>     : ^^^^

