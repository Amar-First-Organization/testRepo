=== tests/cases/compiler/overloadSelection.ts ===
interface Match {
>Match : Symbol(Match, Decl(overloadSelection.ts, 0, 0))

  (o: object): 0;
>o : Symbol(o, Decl(overloadSelection.ts, 1, 3))

  (o: any): 1;
>o : Symbol(o, Decl(overloadSelection.ts, 2, 3))
}
type Wrap = <T>(v: T) => Match(T);
>Wrap : Symbol(Wrap, Decl(overloadSelection.ts, 3, 1))
>T : Symbol(T, Decl(overloadSelection.ts, 4, 13))
>v : Symbol(v, Decl(overloadSelection.ts, 4, 16))
>T : Symbol(T, Decl(overloadSelection.ts, 4, 13))
>Match : Symbol(Match, Decl(overloadSelection.ts, 0, 0))
>T : Symbol(T, Decl(overloadSelection.ts, 4, 13))

type A = Wrap(RegExp);
>A : Symbol(A, Decl(overloadSelection.ts, 4, 34))
>Wrap : Symbol(Wrap, Decl(overloadSelection.ts, 3, 1))
>RegExp : Symbol(RegExp, Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --))

