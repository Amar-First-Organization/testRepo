=== tests/cases/compiler/functionsWithImplicitReturnTypeAssignableToUndefined.ts ===
function f1(): unknown {
>f1 : Symbol(f1, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 0, 0))

    if (Math.random() < 0.5) return true;
>Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))

    // Implicit return, but undefined is always assignable to unknown.
}

function f2(): any {
>f2 : Symbol(f2, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 4, 1))

    // Implicit return, but undefined is always assignable to any.
}

function f3(): void {
>f3 : Symbol(f3, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 8, 1))

    // Implicit return, but undefined is always assignable to void.
}

function f4(): {} {
>f4 : Symbol(f4, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 12, 1))

    if (Math.random() < 0.5) return {};
>Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))

    // Implicit return, but undefined is assignable to object when strictNullChecks is off.
}

function f5(): Record<string, any> {
>f5 : Symbol(f5, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 18, 1))
>Record : Symbol(Record, Decl(lib.es5.d.ts, --, --))

    if (Math.random() < 0.5) return { "foo": true };
>Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>"foo" : Symbol("foo", Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 21, 37))

    // Implicit return, but undefined is assignable to records (which are just fancy objects)
    // when strictNullChecks is off.
}

function f6(): null {
>f6 : Symbol(f6, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 25, 1))

    if (Math.random() < 0.5) return null;
>Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))

    // Implicit return, but undefined is assignable to null when strictNullChecks is off.
}

function f7(): string | null {
>f7 : Symbol(f7, Decl(functionsWithImplicitReturnTypeAssignableToUndefined.ts, 31, 1))

    if (Math.random() < 0.5) return "foo";
>Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))

    // Implicit return, but undefined is assignable to null when strictNullChecks is off.
}

