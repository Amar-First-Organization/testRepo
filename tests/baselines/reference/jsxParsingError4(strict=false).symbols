//// [tests/cases/conformance/jsx/jsxParsingError4.tsx] ////

=== a.tsx ===
declare const React: any
>React : Symbol(React, Decl(a.tsx, 0, 13))

declare namespace JSX {
>JSX : Symbol(JSX, Decl(a.tsx, 0, 24))

    interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(a.tsx, 1, 23))

        [k: string]: any
>k : Symbol(k, Decl(a.tsx, 3, 9))
    }
    interface Element<P, T> { props: P; type: T; }
>Element : Symbol(Element, Decl(a.tsx, 4, 5))
>P : Symbol(P, Decl(a.tsx, 5, 22))
>T : Symbol(T, Decl(a.tsx, 5, 24))
>props : Symbol(Element.props, Decl(a.tsx, 5, 29))
>P : Symbol(P, Decl(a.tsx, 5, 22))
>type : Symbol(Element.type, Decl(a.tsx, 5, 39))
>T : Symbol(T, Decl(a.tsx, 5, 24))
}

const a = (
>a : Symbol(a, Decl(a.tsx, 8, 5))

  <public-foo></public-foo>
>public-foo : Symbol(JSX.IntrinsicElements.__index, Decl(a.tsx, 2, 33))
>public-foo : Symbol(JSX.IntrinsicElements.__index, Decl(a.tsx, 2, 33))

);

const b = (
>b : Symbol(b, Decl(a.tsx, 12, 5))

  <public></public>
>public : Symbol(JSX.IntrinsicElements.__index, Decl(a.tsx, 2, 33))
>public : Symbol(JSX.IntrinsicElements.__index, Decl(a.tsx, 2, 33))

);

