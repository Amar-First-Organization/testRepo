//// [tests/cases/conformance/types/typeRelationships/typeInference/intraExpressionInferences.ts] ////



/// [Declarations] ////



//// [intraExpressionInferences.d.ts]
declare function callIt<T>(obj: {
    produce: (n: number) => T;
    consume: (x: T) => void;
}): void;
declare function callItT<T>(obj: [(n: number) => T, (x: T) => void]): void;
interface MyInterface<T> {
    retrieveGeneric: (parameter: string) => T;
    operateWithGeneric: (generic: T) => string;
}
declare const inferTypeFn: <T>(generic: MyInterface<T>) => MyInterface<T>;
declare const myGeneric: MyInterface<number>;
declare function make<M>(o: {
    mutations: M;
    action: (m: M) => void;
}): void;
declare function foo<A>(options: {
    a: A;
    b: (a: A) => void;
}): void;
type Chain<R1, R2> = {
    a(): R1;
    b(a: R1): R2;
    c(b: R2): void;
};
declare function test<R1, R2>(foo: Chain<R1, R2>): void;
declare class Wrapper<T = any> {
    value?: T;
}
type WrappedMap = Record<string, Wrapper>;
type Unwrap<D extends WrappedMap> = {
    [K in keyof D]: D[K] extends Wrapper<infer T> ? T : never;
};
type MappingComponent<I extends WrappedMap, O extends WrappedMap> = {
    setup(): {
        inputs: I;
        outputs: O;
    };
    map?: (inputs: Unwrap<I>) => Unwrap<O>;
};
declare function createMappingComponent<I extends WrappedMap, O extends WrappedMap>(def: MappingComponent<I, O>): void;
declare function simplified<T>(props: {
    generator: () => T;
    receiver: (t: T) => any;
}): void;
declare function whatIWant<T>(props: {
    generator: (bob: any) => T;
    receiver: (t: T) => any;
}): void;
declare function nonObject<T>(generator: (bob: any) => T, receiver: (t: T) => any): void;
interface Opts<TParams, TDone, TMapped> {
    fetch: (params: TParams, foo: number) => TDone;
    map: (data: TDone) => TMapped;
}
declare function example<TParams, TDone, TMapped>(options: Opts<TParams, TDone, TMapped>): (params: TParams) => TMapped;
interface Params {
    one: number;
    two: string;
}
declare const branch: <T, U extends T>(_: {
    test: T;
    if: (t: T) => t is U;
    then: (u: U) => void;
}) => void;
declare const x: "a" | "b";
interface Props<T> {
    a: (x: string) => T;
    b: (arg: T) => void;
}
declare function Foo<T>(props: Props<T>): null;
declare function nested<T>(arg: {
    prop: {
        produce: (arg1: number) => T;
        consume: (arg2: T) => void;
    };
}): T;
declare const resNested: number[];
declare function twoConsumers<T>(arg: {
    a: (arg: string) => T;
    consume1: (arg1: T) => void;
    consume2: (arg2: T) => void;
}): T;
declare const resTwoConsumers: string[];
declare function multipleProducersBeforeConsumers<T, T2>(arg: {
    a: (arg: string) => T;
    b: (arg: string) => T2;
    consume1: (arg1: T) => void;
    consume2: (arg2: T2) => void;
}): [T, T2];
declare const resMultipleProducersBeforeConsumers: [
    string[],
    number
];
declare function withConditionalExpression<T, T2, T3>(arg: {
    a: (arg1: string) => T;
    b: (arg2: T) => T2;
    c: (arg2: T2) => T3;
}): [T, T2, T3];
declare const resWithConditionalExpression: [
    string[],
    "first" | "two",
    boolean
];
declare function onion<T, T2, T3>(arg: {
    a: (arg1: string) => T;
    nested: {
        b: (arg2: T) => T2;
        nested2: {
            c: (arg2: T2) => T3;
        };
    };
}): [T, T2, T3];
declare const resOnion: [
    string[],
    string,
    boolean
];
declare function onion2<T, T2, T3, T4>(arg: {
    a: (arg1: string) => T;
    nested: {
        b: (arg2: T) => T2;
        c: (arg3: T) => T3;
        nested2: {
            d: (arg4: T3) => T4;
        };
    };
}): [T, T2, T3, T4];
declare const resOnion2: [
    string[],
    string,
    number,
    boolean
];
declare function distant<T>(args: {
    foo: {
        bar: {
            baz: {
                producer: (arg: string) => T;
            };
        };
    };
    consumer: (val: T) => unknown;
}): T;
declare const distantRes: number;
//# sourceMappingURL=intraExpressionInferences.d.ts.map

/// [Declarations Maps] ////


//// [intraExpressionInferences.d.ts.map]
{"version":3,"file":"intraExpressionInferences.d.ts","sourceRoot":"","sources":["intraExpressionInferences.ts"],"names":[],"mappings":"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"}

//// https://sokra.github.io/source-map-visualization#base64,ZGVjbGFyZSBmdW5jdGlvbiBjYWxsSXQ8VD4ob2JqOiB7DQogICAgcHJvZHVjZTogKG46IG51bWJlcikgPT4gVDsNCiAgICBjb25zdW1lOiAoeDogVCkgPT4gdm9pZDsNCn0pOiB2b2lkOw0KZGVjbGFyZSBmdW5jdGlvbiBjYWxsSXRUPFQ+KG9iajogWyhuOiBudW1iZXIpID0+IFQsICh4OiBUKSA9PiB2b2lkXSk6IHZvaWQ7DQppbnRlcmZhY2UgTXlJbnRlcmZhY2U8VD4gew0KICAgIHJldHJpZXZlR2VuZXJpYzogKHBhcmFtZXRlcjogc3RyaW5nKSA9PiBUOw0KICAgIG9wZXJhdGVXaXRoR2VuZXJpYzogKGdlbmVyaWM6IFQpID0+IHN0cmluZzsNCn0NCmRlY2xhcmUgY29uc3QgaW5mZXJUeXBlRm46IDxUPihnZW5lcmljOiBNeUludGVyZmFjZTxUPikgPT4gTXlJbnRlcmZhY2U8VD47DQpkZWNsYXJlIGNvbnN0IG15R2VuZXJpYzogTXlJbnRlcmZhY2U8bnVtYmVyPjsNCmRlY2xhcmUgZnVuY3Rpb24gbWFrZTxNPihvOiB7DQogICAgbXV0YXRpb25zOiBNOw0KICAgIGFjdGlvbjogKG06IE0pID0+IHZvaWQ7DQp9KTogdm9pZDsNCmRlY2xhcmUgZnVuY3Rpb24gZm9vPEE+KG9wdGlvbnM6IHsNCiAgICBhOiBBOw0KICAgIGI6IChhOiBBKSA9PiB2b2lkOw0KfSk6IHZvaWQ7DQp0eXBlIENoYWluPFIxLCBSMj4gPSB7DQogICAgYSgpOiBSMTsNCiAgICBiKGE6IFIxKTogUjI7DQogICAgYyhiOiBSMik6IHZvaWQ7DQp9Ow0KZGVjbGFyZSBmdW5jdGlvbiB0ZXN0PFIxLCBSMj4oZm9vOiBDaGFpbjxSMSwgUjI+KTogdm9pZDsNCmRlY2xhcmUgY2xhc3MgV3JhcHBlcjxUID0gYW55PiB7DQogICAgdmFsdWU/OiBUOw0KfQ0KdHlwZSBXcmFwcGVkTWFwID0gUmVjb3JkPHN0cmluZywgV3JhcHBlcj47DQp0eXBlIFVud3JhcDxEIGV4dGVuZHMgV3JhcHBlZE1hcD4gPSB7DQogICAgW0sgaW4ga2V5b2YgRF06IERbS10gZXh0ZW5kcyBXcmFwcGVyPGluZmVyIFQ+ID8gVCA6IG5ldmVyOw0KfTsNCnR5cGUgTWFwcGluZ0NvbXBvbmVudDxJIGV4dGVuZHMgV3JhcHBlZE1hcCwgTyBleHRlbmRzIFdyYXBwZWRNYXA+ID0gew0KICAgIHNldHVwKCk6IHsNCiAgICAgICAgaW5wdXRzOiBJOw0KICAgICAgICBvdXRwdXRzOiBPOw0KICAgIH07DQogICAgbWFwPzogKGlucHV0czogVW53cmFwPEk+KSA9PiBVbndyYXA8Tz47DQp9Ow0KZGVjbGFyZSBmdW5jdGlvbiBjcmVhdGVNYXBwaW5nQ29tcG9uZW50PEkgZXh0ZW5kcyBXcmFwcGVkTWFwLCBPIGV4dGVuZHMgV3JhcHBlZE1hcD4oZGVmOiBNYXBwaW5nQ29tcG9uZW50PEksIE8+KTogdm9pZDsNCmRlY2xhcmUgZnVuY3Rpb24gc2ltcGxpZmllZDxUPihwcm9wczogew0KICAgIGdlbmVyYXRvcjogKCkgPT4gVDsNCiAgICByZWNlaXZlcjogKHQ6IFQpID0+IGFueTsNCn0pOiB2b2lkOw0KZGVjbGFyZSBmdW5jdGlvbiB3aGF0SVdhbnQ8VD4ocHJvcHM6IHsNCiAgICBnZW5lcmF0b3I6IChib2I6IGFueSkgPT4gVDsNCiAgICByZWNlaXZlcjogKHQ6IFQpID0+IGFueTsNCn0pOiB2b2lkOw0KZGVjbGFyZSBmdW5jdGlvbiBub25PYmplY3Q8VD4oZ2VuZXJhdG9yOiAoYm9iOiBhbnkpID0+IFQsIHJlY2VpdmVyOiAodDogVCkgPT4gYW55KTogdm9pZDsNCmludGVyZmFjZSBPcHRzPFRQYXJhbXMsIFREb25lLCBUTWFwcGVkPiB7DQogICAgZmV0Y2g6IChwYXJhbXM6IFRQYXJhbXMsIGZvbzogbnVtYmVyKSA9PiBURG9uZTsNCiAgICBtYXA6IChkYXRhOiBURG9uZSkgPT4gVE1hcHBlZDsNCn0NCmRlY2xhcmUgZnVuY3Rpb24gZXhhbXBsZTxUUGFyYW1zLCBURG9uZSwgVE1hcHBlZD4ob3B0aW9uczogT3B0czxUUGFyYW1zLCBURG9uZSwgVE1hcHBlZD4pOiAocGFyYW1zOiBUUGFyYW1zKSA9PiBUTWFwcGVkOw0KaW50ZXJmYWNlIFBhcmFtcyB7DQogICAgb25lOiBudW1iZXI7DQogICAgdHdvOiBzdHJpbmc7DQp9DQpkZWNsYXJlIGNvbnN0IGJyYW5jaDogPFQsIFUgZXh0ZW5kcyBUPihfOiB7DQogICAgdGVzdDogVDsNCiAgICBpZjogKHQ6IFQpID0+IHQgaXMgVTsNCiAgICB0aGVuOiAodTogVSkgPT4gdm9pZDsNCn0pID0+IHZvaWQ7DQpkZWNsYXJlIGNvbnN0IHg6ICJhIiB8ICJiIjsNCmludGVyZmFjZSBQcm9wczxUPiB7DQogICAgYTogKHg6IHN0cmluZykgPT4gVDsNCiAgICBiOiAoYXJnOiBUKSA9PiB2b2lkOw0KfQ0KZGVjbGFyZSBmdW5jdGlvbiBGb288VD4ocHJvcHM6IFByb3BzPFQ+KTogbnVsbDsNCmRlY2xhcmUgZnVuY3Rpb24gbmVzdGVkPFQ+KGFyZzogew0KICAgIHByb3A6IHsNCiAgICAgICAgcHJvZHVjZTogKGFyZzE6IG51bWJlcikgPT4gVDsNCiAgICAgICAgY29uc3VtZTogKGFyZzI6IFQpID0+IHZvaWQ7DQogICAgfTsNCn0pOiBUOw0KZGVjbGFyZSBjb25zdCByZXNOZXN0ZWQ6IG51bWJlcltdOw0KZGVjbGFyZSBmdW5jdGlvbiB0d29Db25zdW1lcnM8VD4oYXJnOiB7DQogICAgYTogKGFyZzogc3RyaW5nKSA9PiBUOw0KICAgIGNvbnN1bWUxOiAoYXJnMTogVCkgPT4gdm9pZDsNCiAgICBjb25zdW1lMjogKGFyZzI6IFQpID0+IHZvaWQ7DQp9KTogVDsNCmRlY2xhcmUgY29uc3QgcmVzVHdvQ29uc3VtZXJzOiBzdHJpbmdbXTsNCmRlY2xhcmUgZnVuY3Rpb24gbXVsdGlwbGVQcm9kdWNlcnNCZWZvcmVDb25zdW1lcnM8VCwgVDI+KGFyZzogew0KICAgIGE6IChhcmc6IHN0cmluZykgPT4gVDsNCiAgICBiOiAoYXJnOiBzdHJpbmcpID0+IFQyOw0KICAgIGNvbnN1bWUxOiAoYXJnMTogVCkgPT4gdm9pZDsNCiAgICBjb25zdW1lMjogKGFyZzI6IFQyKSA9PiB2b2lkOw0KfSk6IFtULCBUMl07DQpkZWNsYXJlIGNvbnN0IHJlc011bHRpcGxlUHJvZHVjZXJzQmVmb3JlQ29uc3VtZXJzOiBbDQogICAgc3RyaW5nW10sDQogICAgbnVtYmVyDQpdOw0KZGVjbGFyZSBmdW5jdGlvbiB3aXRoQ29uZGl0aW9uYWxFeHByZXNzaW9uPFQsIFQyLCBUMz4oYXJnOiB7DQogICAgYTogKGFyZzE6IHN0cmluZykgPT4gVDsNCiAgICBiOiAoYXJnMjogVCkgPT4gVDI7DQogICAgYzogKGFyZzI6IFQyKSA9PiBUMzsNCn0pOiBbVCwgVDIsIFQzXTsNCmRlY2xhcmUgY29uc3QgcmVzV2l0aENvbmRpdGlvbmFsRXhwcmVzc2lvbjogWw0KICAgIHN0cmluZ1tdLA0KICAgICJmaXJzdCIgfCAidHdvIiwNCiAgICBib29sZWFuDQpdOw0KZGVjbGFyZSBmdW5jdGlvbiBvbmlvbjxULCBUMiwgVDM+KGFyZzogew0KICAgIGE6IChhcmcxOiBzdHJpbmcpID0+IFQ7DQogICAgbmVzdGVkOiB7DQogICAgICAgIGI6IChhcmcyOiBUKSA9PiBUMjsNCiAgICAgICAgbmVzdGVkMjogew0KICAgICAgICAgICAgYzogKGFyZzI6IFQyKSA9PiBUMzsNCiAgICAgICAgfTsNCiAgICB9Ow0KfSk6IFtULCBUMiwgVDNdOw0KZGVjbGFyZSBjb25zdCByZXNPbmlvbjogWw0KICAgIHN0cmluZ1tdLA0KICAgIHN0cmluZywNCiAgICBib29sZWFuDQpdOw0KZGVjbGFyZSBmdW5jdGlvbiBvbmlvbjI8VCwgVDIsIFQzLCBUND4oYXJnOiB7DQogICAgYTogKGFyZzE6IHN0cmluZykgPT4gVDsNCiAgICBuZXN0ZWQ6IHsNCiAgICAgICAgYjogKGFyZzI6IFQpID0+IFQyOw0KICAgICAgICBjOiAoYXJnMzogVCkgPT4gVDM7DQogICAgICAgIG5lc3RlZDI6IHsNCiAgICAgICAgICAgIGQ6IChhcmc0OiBUMykgPT4gVDQ7DQogICAgICAgIH07DQogICAgfTsNCn0pOiBbVCwgVDIsIFQzLCBUNF07DQpkZWNsYXJlIGNvbnN0IHJlc09uaW9uMjogWw0KICAgIHN0cmluZ1tdLA0KICAgIHN0cmluZywNCiAgICBudW1iZXIsDQogICAgYm9vbGVhbg0KXTsNCmRlY2xhcmUgZnVuY3Rpb24gZGlzdGFudDxUPihhcmdzOiB7DQogICAgZm9vOiB7DQogICAgICAgIGJhcjogew0KICAgICAgICAgICAgYmF6OiB7DQogICAgICAgICAgICAgICAgcHJvZHVjZXI6IChhcmc6IHN0cmluZykgPT4gVDsNCiAgICAgICAgICAgIH07DQogICAgICAgIH07DQogICAgfTsNCiAgICBjb25zdW1lcjogKHZhbDogVCkgPT4gdW5rbm93bjsNCn0pOiBUOw0KZGVjbGFyZSBjb25zdCBkaXN0YW50UmVzOiBudW1iZXI7DQovLyMgc291cmNlTWFwcGluZ1VSTD1pbnRyYUV4cHJlc3Npb25JbmZlcmVuY2VzLmQudHMubWFw,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50cmFFeHByZXNzaW9uSW5mZXJlbmNlcy5kLnRzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW50cmFFeHByZXNzaW9uSW5mZXJlbmNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLFVBQVUsTUFBTSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDNUIsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLE1BQU0sS0FBSyxDQUFDLENBQUM7SUFDMUIsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxJQUFJLENBQUE7Q0FDMUIsR0FBRyxJQUFJLENBQUM7QUFtQlQsT0FBTyxVQUFVLE9BQU8sQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBTzNFLFVBQVUsV0FBVyxDQUFDLENBQUM7SUFDbkIsZUFBZSxFQUFFLENBQUMsU0FBUyxFQUFFLE1BQU0sS0FBSyxDQUFDLENBQUM7SUFDMUMsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLE1BQU0sQ0FBQTtDQUM3QztBQUVELFFBQUEsTUFBTSxXQUFXLGVBQWdCLFlBQVksQ0FBQyxDQUFDLEtBQUcsWUFBWSxDQUFDLENBQVksQ0FBQztBQUU1RSxRQUFBLE1BQU0sU0FBUyxFQUFFLFdBQVcsQ0FBQyxNQUFNLENBR2pDLENBQUM7QUFJSCxpQkFBUyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7SUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLElBQUksQ0FBQTtDQUFFLEdBQUcsSUFBSSxDQUFJO0FBV3hFLE9BQU8sVUFBVSxHQUFHLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRTtJQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7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,

