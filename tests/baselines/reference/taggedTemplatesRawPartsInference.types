=== tests/cases/conformance/es6/templates/taggedTemplatesRawPartsInference.ts ===
function tag<TParts extends readonly string[], TRaw extends readonly string[], U extends readonly unknown[]>(strs: TemplateStringsArray<TParts, TRaw>, ...args: U): {parts: TParts; raw: TRaw; args: U} {
>tag : <TParts extends readonly string[], TRaw extends readonly string[], U extends readonly unknown[]>(strs: TemplateStringsArray<TParts, TRaw>, ...args: U) => {    parts: TParts;    raw: TRaw;    args: U;}
>strs : TemplateStringsArray<TParts, TRaw>
>args : U
>parts : TParts
>raw : TRaw
>args : U

    return null;
>null : null
}

var a = tag `part\1${''}part\2`;
>a : { parts: ["part1", "part2"]; raw: ["part\\1", "part\\2"]; args: [string]; }
>tag `part\1${''}part\2` : { parts: ["part1", "part2"]; raw: ["part\\1", "part\\2"]; args: [string]; }
>tag : <TParts extends readonly string[], TRaw extends readonly string[], U extends readonly unknown[]>(strs: TemplateStringsArray<TParts, TRaw>, ...args: U) => { parts: TParts; raw: TRaw; args: U; }
>`part\1${''}part\2` : string
>'' : ""

var a: {};
>a : { parts: ["part1", "part2"]; raw: ["part\\1", "part\\2"]; args: [string]; }

