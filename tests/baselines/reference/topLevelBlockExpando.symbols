=== tests/cases/compiler/topLevelBlockExpando.ts ===
// https://github.com/microsoft/TypeScript/issues/31972
interface Person {
>Person : Symbol(Person, Decl(topLevelBlockExpando.ts, 0, 0))

  first: string;
>first : Symbol(Person.first, Decl(topLevelBlockExpando.ts, 1, 18))

  last: string;
>last : Symbol(Person.last, Decl(topLevelBlockExpando.ts, 2, 16))
}

{
  const dice = () => Math.floor(Math.random() * 6);
>dice : Symbol(dice, Decl(topLevelBlockExpando.ts, 7, 7))
>Math.floor : Symbol(Math.floor, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>floor : Symbol(Math.floor, Decl(lib.es5.d.ts, --, --))
>Math.random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))
>Math : Symbol(Math, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>random : Symbol(Math.random, Decl(lib.es5.d.ts, --, --))

  dice.first = 'Rando';  
>dice.first : Symbol(dice.first, Decl(topLevelBlockExpando.ts, 7, 51))
>dice : Symbol(dice, Decl(topLevelBlockExpando.ts, 7, 7))
>first : Symbol(dice.first, Decl(topLevelBlockExpando.ts, 7, 51))

  dice.last = 'Calrissian';
>dice.last : Symbol(dice.last, Decl(topLevelBlockExpando.ts, 8, 23))
>dice : Symbol(dice, Decl(topLevelBlockExpando.ts, 7, 7))
>last : Symbol(dice.last, Decl(topLevelBlockExpando.ts, 8, 23))

  const diceP: Person = dice;  
>diceP : Symbol(diceP, Decl(topLevelBlockExpando.ts, 10, 7))
>Person : Symbol(Person, Decl(topLevelBlockExpando.ts, 0, 0))
>dice : Symbol(dice, Decl(topLevelBlockExpando.ts, 7, 7))
}

