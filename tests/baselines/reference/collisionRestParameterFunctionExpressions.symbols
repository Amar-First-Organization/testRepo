=== tests/cases/compiler/collisionRestParameterFunctionExpressions.ts ===
function foo() {
>foo : Symbol(foo, Decl(collisionRestParameterFunctionExpressions.ts, 0, 0))

    function f1(_i: number, ...restParameters) { //_i is error
>f1 : Symbol(f1, Decl(collisionRestParameterFunctionExpressions.ts, 0, 16))
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 1, 16), Decl(collisionRestParameterFunctionExpressions.ts, 3, 11))
>restParameters : Symbol(restParameters, Decl(collisionRestParameterFunctionExpressions.ts, 1, 27))

        restParameters;
>restParameters : Symbol(restParameters, Decl(collisionRestParameterFunctionExpressions.ts, 1, 27))

        var _i = 10; // no error
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 1, 16), Decl(collisionRestParameterFunctionExpressions.ts, 3, 11))
    }
    function f1NoError(_i: number) { // no error
>f1NoError : Symbol(f1NoError, Decl(collisionRestParameterFunctionExpressions.ts, 4, 5))
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 5, 23), Decl(collisionRestParameterFunctionExpressions.ts, 6, 11))

        var _i = 10; // no error
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 5, 23), Decl(collisionRestParameterFunctionExpressions.ts, 6, 11))
    }
    function f3(...restParameters) {
>f3 : Symbol(f3, Decl(collisionRestParameterFunctionExpressions.ts, 7, 5))
>restParameters : Symbol(restParameters, Decl(collisionRestParameterFunctionExpressions.ts, 8, 16))

        restParameters;
>restParameters : Symbol(restParameters, Decl(collisionRestParameterFunctionExpressions.ts, 8, 16))

        var _i = 10; // no error
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 10, 11))
    }
    function f3NoError() {
>f3NoError : Symbol(f3NoError, Decl(collisionRestParameterFunctionExpressions.ts, 11, 5))

        var _i = 10; // no error
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 13, 11))
    }

    function f4(_i: number, ...rest); // no codegen no error
>f4 : Symbol(f4, Decl(collisionRestParameterFunctionExpressions.ts, 14, 5), Decl(collisionRestParameterFunctionExpressions.ts, 16, 37), Decl(collisionRestParameterFunctionExpressions.ts, 17, 37))
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 16, 16))
>rest : Symbol(rest, Decl(collisionRestParameterFunctionExpressions.ts, 16, 27))

    function f4(_i: string, ...rest); // no codegen no error
>f4 : Symbol(f4, Decl(collisionRestParameterFunctionExpressions.ts, 14, 5), Decl(collisionRestParameterFunctionExpressions.ts, 16, 37), Decl(collisionRestParameterFunctionExpressions.ts, 17, 37))
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 17, 16))
>rest : Symbol(rest, Decl(collisionRestParameterFunctionExpressions.ts, 17, 27))

    function f4(_i: any, ...rest) { // error
>f4 : Symbol(f4, Decl(collisionRestParameterFunctionExpressions.ts, 14, 5), Decl(collisionRestParameterFunctionExpressions.ts, 16, 37), Decl(collisionRestParameterFunctionExpressions.ts, 17, 37))
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 18, 16))
>rest : Symbol(rest, Decl(collisionRestParameterFunctionExpressions.ts, 18, 24))

        rest;
>rest : Symbol(rest, Decl(collisionRestParameterFunctionExpressions.ts, 18, 24))
    }

    function f4NoError(_i: number); // no error
>f4NoError : Symbol(f4NoError, Decl(collisionRestParameterFunctionExpressions.ts, 20, 5), Decl(collisionRestParameterFunctionExpressions.ts, 22, 35), Decl(collisionRestParameterFunctionExpressions.ts, 23, 35))
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 22, 23))

    function f4NoError(_i: string); // no error
>f4NoError : Symbol(f4NoError, Decl(collisionRestParameterFunctionExpressions.ts, 20, 5), Decl(collisionRestParameterFunctionExpressions.ts, 22, 35), Decl(collisionRestParameterFunctionExpressions.ts, 23, 35))
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 23, 23))

    function f4NoError(_i: any) { // no error
>f4NoError : Symbol(f4NoError, Decl(collisionRestParameterFunctionExpressions.ts, 20, 5), Decl(collisionRestParameterFunctionExpressions.ts, 22, 35), Decl(collisionRestParameterFunctionExpressions.ts, 23, 35))
>_i : Symbol(_i, Decl(collisionRestParameterFunctionExpressions.ts, 24, 23))
    }
}
