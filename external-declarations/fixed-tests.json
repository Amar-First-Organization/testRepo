{
    "error-categories": {
        "with-isolated-declaration-errors": [
            9007 // Declaration_emit_for_this_file_requires_type_resolution_An_explicit_type_annotation_may_unblock_declaration_emit
        ], 
        "with-unreliable-errors": [
            2314, // Generic type '{0}' requires {1} type argument(s)
            1166, // A_computed_property_name_in_a_class_property_declaration_must_have_a_simple_literal_type_or_a_unique_symbol_type
            2784, // 'get' and 'set' accessors cannot declare 'this' parameters.
            1162, // An object member cannot be declared optional.
        ]
    },
    "test-categories": {
        "with-unreliable-errors": [
            "thisTypeErrors", // Assertion to this in static context produces this in DTE and any in TSC
            "parseInvalidNonNullableTypes", // Prefix ! operator
            "parseInvalidNullableTypes",  // Prefix ? operator
            "ArrowFunction1", // Missing type annotation syntax error
            "parserX_ArrowFunction1", // Missing type annotation syntax error
            "typeParameterDirectlyConstrainedToItself", // Circular type constraints makes emit unreliable
            "typeParameterIndirectlyConstrainedToItself", // Circular type constraints makes emit unreliable
            "callSignaturesWithAccessibilityModifiersOnParameters", // Accessibility modifiers on function parameters
            // Duplicate properties and variables
            "duplicateObjectLiteralProperty",
            "duplicateVariablesWithAny",
            "duplicateVarsAcrossFileBoundaries",
            "gettersAndSettersErrors",
            "jsFileCompilationDuplicateVariableErrorReported",
            "varBlock",
            "duplicatePropertiesInTypeAssertions01",
            "duplicatePropertiesInTypeAssertions02",
            "parserCastVersusArrowFunction1",
            "invalidMultipleVariableDeclarations",
            "validMultipleVariableDeclarations", 
            "augmentedTypesVar",
            "objectLiteralErrors",
            "duplicateObjectLiteralProperty_computedName2", 
            "castingTuple", // contains both duplicate variables and print differences.
            // Identifier expected.
            "FunctionPropertyAssignments2_es6",
            "FunctionPropertyAssignments3_es6",
            "FunctionPropertyAssignments6_es6",
            // Generic type '{0}' requires {1} type argument(s)
            "genericTypeReferenceWithoutTypeArgument",
            "genericTypeReferenceWithoutTypeArgument2",
            // A computed property name in a method overload must refer to an expression whose type is a literal type or a 'unique symbol' type.
            "overloadsWithComputedNames",
            // A_computed_property_name_must_be_of_type_string_number_symbol_or_any,
            "bigintIndex",
            "symbolProperty59",
            "computedPropertyNames14_ES5",
            "computedPropertyNames14_ES6",
            "computedPropertyNames15_ES5",
            "computedPropertyNames15_ES6",
            "computedPropertyNames17_ES5",
            "computedPropertyNames17_ES6",
            "parserES5ComputedPropertyName5",
            "parserIndexSignature5",
            "parserES5SymbolProperty1",
            "parserES5SymbolProperty2",
            "parserComputedPropertyName20",
            "parserComputedPropertyName21",
            "typeUsedAsTypeLiteralIndex",
            "parser.asyncGenerators.classMethods.es2018",
            // Invalid escape sequences 
            "invalidTaggedTemplateEscapeSequences",
            "objectTypeWithStringNamedPropertyOfIllegalCharacters",
            "noUsedBeforeDefinedErrorInTypeContext", // Variable used before definition in type context
            "accessorBodyInTypeContext", //An implementation cannot be declared in ambient contexts.
        ],
        "with-isolated-declaration-errors": [
            "typeFromPropertyAssignment38", // Nested expando functions. Can in principle be detected, but are not yet implemented
            "contextualReturnTypeOfIIFE2", // Nested expando functions. Can in principle be detected, but are not yet implemented
            // Computed property errors a DTE can't detect 
            "complicatedPrivacy",
            "declarationEmitMappedTypeTemplateTypeofSymbol",
            "declarationEmitReadonlyComputedProperty",
            "propertyAssignment",
            "ES5SymbolProperty2",
            "ES5SymbolProperty3",
            "ES5SymbolProperty4",
            "ES5SymbolProperty5",
            "ES5SymbolProperty6",
            "ES5SymbolProperty7",
            "computedPropertyNames13_ES5",
            "computedPropertyNames13_ES6",
            "MemberFunctionDeclaration3_es6",
            "superSymbolIndexedAccess1",
            "superSymbolIndexedAccess3",
            "superSymbolIndexedAccess4",
            "superSymbolIndexedAccess5",
            "superSymbolIndexedAccess6",
            "parserES5ComputedPropertyName11",
            "parserES5ComputedPropertyName8",
            "parserES5SymbolProperty3",
            "parserES5SymbolProperty7",
            "parserES5SymbolProperty8",
            "parserES5SymbolProperty9",
            "parserComputedPropertyName11",
            "parserComputedPropertyName12",
            "parserComputedPropertyName13",
            "parserComputedPropertyName14",
            "parserComputedPropertyName15",
            "parserComputedPropertyName18",
            "parserComputedPropertyName19",
            "parserComputedPropertyName23",
            "parserComputedPropertyName32",
            "parserComputedPropertyName38",
            "parserComputedPropertyName39",
            "ES5For-ofTypeCheck10",
        ],
        "possible-ts-bugs": [
             // Type parameter renamed
            "objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts",
            "objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterNames",
            "objectTypesIdentityWithGenericConstructSignaturesDifferingTypeParameterCounts",
            // Default type parameters is written in declarations
            "conditionalTypesSimplifyWhenTrivial", 
            // https://github.com/microsoft/TypeScript/issues/55571 
            "reExportAliasMakesInstantiated"
        ],        
        // Needs TS Fix
        "binding-patterns": [
            "declarationsAndAssignments",
            "excessPropertyCheckWithSpread",
            "destructuringParameterDeclaration1ES5",
            "destructuringParameterDeclaration1ES5iterable",
            "destructuringParameterDeclaration1ES6",
            "sourceMapValidationDestructuringParameterNestedObjectBindingPattern",
            "sourceMapValidationDestructuringParameterNestedObjectBindingPatternDefaultValues",
            "sourceMapValidationDestructuringParameterObjectBindingPattern",
            "sourceMapValidationDestructuringParameterObjectBindingPatternDefaultValues",
            "declarationEmitBindingPatterns",
            "declarationEmitDuplicateParameterDestructuring",
            "declarationEmitKeywordDestructuring",
            "paramterDestrcuturingDeclaration",
            "renamingDestructuredPropertyInFunctionType",
            "restParameterWithBindingPattern3",
            "destructuringInFunctionType",
        ],
        // Just Printing differences
        "print-differences": [
            "arrayFind",
            "contextualTyping",
            "contextualTyping38",
            "contextualTyping39",
            "correlatedUnions",
            "declarationEmitNoNonRequiredParens",
            "declarationEmitShadowingInferNotRenamed",
            "declarationEmitTupleRestSignatureLeadingVariadic",
            "es5SetterparameterDestructuringNotElided",
            "hugeDeclarationOutputGetsTruncatedWithError",
            "inKeywordAndIntersection",
            "mapConstructor",
            "mappedTypeInferenceAliasSubstitution",
            "mappedTypeWithAsClauseAndLateBoundProperty2",
            "parseArrowFunctionWithFunctionReturnType",
            "parseTypes",
            "asOperator1",
            "generatedContextualTyping",
            "objectLiteralGettersAndSetters",
            "optionalChainingInference",
            "noUncheckedIndexedAccess",
            "conditionalTypes1",
            "stringLiteralsWithTypeAssertions01",
            "castingTuple",
            "emptyTuplesTypeAssertion01",
            "emptyTuplesTypeAssertion02",
            "namedTupleMembers",
            "optionalMethods",
            "optionalParameterProperty",
            "optionalParameterRetainsNull",
            "escapedIdentifiers",
            "parseBigInt",
            "commentsFunction",
            "declarationEmitDistributiveConditionalWithInfer",
            "declarationEmitInlinedDistributiveConditional",
            "declarationEmitParameterProperty",
            "declarationsForFileShadowingGlobalNoError",
            "mappedTypeGenericInstantiationPreservesHomomorphism",
            "mappedTypeGenericInstantiationPreservesInlineForm",
            "unusedTypeParametersCheckedByNoUnusedParameters",
            "unusedTypeParametersNotCheckedByNoUnusedLocals",
            "mixinClassesAnonymous",
            "nodeModulesTripleSlashReferenceModeDeclarationEmit6",
            "keyofAndIndexedAccess",
            "subtypingWithCallSignatures2",
            "conditionalTypesSimplifyWhenTrivial", // Default type parameter is inlined
            "emitArrowFunctionES6",
            "stringLiteralTypesInImplementationSignatures",
            "stringLiteralTypesInImplementationSignatures2",
            "computedPropertyNames7_ES6",
            "computedPropertyNames7_ES5",
            "objectLiteralEnumPropertyNames",
            "objectLiteralComputedNameNoDeclarationError",
            "identityAndDivergentNormalizedTypes",
            "genericFunctionsAndConditionalInference",
            "dynamicNames",
            "declarationEmitWithDefaultAsComputedName2",
            "declarationEmitWithDefaultAsComputedName",
            "declarationEmitComputedNameConstEnumAlias",
            "capturedParametersInInitializers1",
            "declarationEmitPropertyNumericStringKey",
            "templateLiteralsSourceMap" // template literal is evaluated in constant value.
        ],
        // Investigate in reference DTE
        "references-import-diffs": [
            "commonJsExportTypeDeclarationError",
            "declarationEmitForModuleImportingModuleAugmentationRetainsImport",
            "declarationEmitHasTypesRefOnNamespaceUse",
            "declarationFilesWithTypeReferences2",
            "decoratorMetadataWithImportDeclarationNameCollision7",
            "jsxCallElaborationCheckNoCrash1",
            "nodeModulesImportTypeModeDeclarationEmit1",
            "nodeModulesImportTypeModeDeclarationEmitErrors1",
            "typeReferenceDirectives1",
            "typeReferenceDirectives11",
            "typeReferenceDirectives12",
            "typeReferenceDirectives13",
            "typeReferenceDirectives2",
            "typeReferenceDirectives5",
            "typeReferenceDirectives6",
            "typeReferenceDirectives8",
            "typeReferenceDirectives9",
            "typeReferenceRelatedFiles",
            "jsxNamespaceGlobalReexport",
            "parseAssertEntriesError",
            "declarationEmitPrefersPathKindBasedOnBundling2"
        ],
        "bug-binding-pattern-inference": [
            "destructuringWithLiteralInitializers",
            "parameterInitializersBackwardReferencing"
        ],
        "bug-preserve-comments": [
            "commentsOnObjectLiteral4"
        ],
    }
}

