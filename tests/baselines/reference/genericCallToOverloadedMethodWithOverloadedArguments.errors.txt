tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts(23,38): error TS2345: Argument of type '{ (n: number): Promise<number>; (s: string): Promise<string>; }' is not assignable to parameter of type '(x: number) => Promise<string>'.
  Type 'Promise<number>' is not assignable to type 'Promise<string>'.
    Type 'number' is not assignable to type 'string'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts(52,38): error TS2345: Argument of type '{ (n: number): Promise<number>; (s: string): Promise<string>; }' is not assignable to parameter of type '(x: number) => Promise<string>'.
  Type 'Promise<number>' is not assignable to type 'Promise<string>'.
    Type 'number' is not assignable to type 'string'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts(68,38): error TS2345: Argument of type '{ (n: number): Promise<number>; (s: string): Promise<string>; }' is not assignable to parameter of type '(x: number) => Promise<string>'.
  Type 'Promise<number>' is not assignable to type 'Promise<string>'.
    Type 'number' is not assignable to type 'string'.
tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts(84,38): error TS2345: Argument of type '{ (n: number): Promise<number>; (s: string): Promise<string>; (b: boolean): Promise<boolean>; }' is not assignable to parameter of type '(x: number) => Promise<boolean>'.
  Type 'Promise<number>' is not assignable to type 'Promise<boolean>'.
    Type 'number' is not assignable to type 'boolean'.


==== tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts (4 errors) ====
    module m1 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
    }
    
    //////////////////////////////////////
    
    module m2 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
        declare function testFunction(s: string): Promise<string>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
                                         ~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ (n: number): {|Promise|0|}<number>; (s: string): {|Promise|1|}<string>; }' is not assignable to parameter of type '(x: number) => {|Promise|2|}<string>'.
!!! error TS2345:   Type '{|Promise|3|}<number>' is not assignable to type '{|Promise|4|}<string>'.
!!! error TS2345:     Type 'number' is not assignable to type 'string'.
!!! annotated symbol 0 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:15:15
!!! annotated symbol 1 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:15:15
!!! annotated symbol 2 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:15:15
!!! annotated symbol 3 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:15:15
!!! annotated symbol 4 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:15:15
    }
    
    //////////////////////////////////////
    
    module m3 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
    }
    
    //////////////////////////////////////
    
    module m4 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
        declare function testFunction(s: string): Promise<string>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
                                         ~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ (n: number): {|Promise|0|}<number>; (s: string): {|Promise|1|}<string>; }' is not assignable to parameter of type '(x: number) => {|Promise|2|}<string>'.
!!! error TS2345:   Type '{|Promise|3|}<number>' is not assignable to type '{|Promise|4|}<string>'.
!!! error TS2345:     Type 'number' is not assignable to type 'string'.
!!! annotated symbol 0 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:43:15
!!! annotated symbol 1 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:43:15
!!! annotated symbol 2 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:43:15
!!! annotated symbol 3 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:43:15
!!! annotated symbol 4 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:43:15
    }
    
    //////////////////////////////////////
    
    module m5 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => U, progress?: (preservation: any) => void): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
        declare function testFunction(s: string): Promise<string>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
                                         ~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ (n: number): {|Promise|0|}<number>; (s: string): {|Promise|1|}<string>; }' is not assignable to parameter of type '(x: number) => {|Promise|2|}<string>'.
!!! error TS2345:   Type '{|Promise|3|}<number>' is not assignable to type '{|Promise|4|}<string>'.
!!! error TS2345:     Type 'number' is not assignable to type 'string'.
!!! annotated symbol 0 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:58:15
!!! annotated symbol 1 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:58:15
!!! annotated symbol 2 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:58:15
!!! annotated symbol 3 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:58:15
!!! annotated symbol 4 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:58:15
    }
    
    //////////////////////////////////////
    
    module m6 {
        interface Promise<T> {
            then<U>(cb: (x: T) => Promise<U>): Promise<U>;
            then<U>(cb: (x: T) => Promise<U>, error?: (error: any) => Promise<U>): Promise<U>;
        }
    
        declare function testFunction(n: number): Promise<number>;
        declare function testFunction(s: string): Promise<string>;
        declare function testFunction(b: boolean): Promise<boolean>;
    
        var numPromise: Promise<number>;
        var newPromise = numPromise.then(testFunction);
                                         ~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ (n: number): {|Promise|0|}<number>; (s: string): {|Promise|1|}<string>; (b: boolean): {|Promise|2|}<boolean>; }' is not assignable to parameter of type '(x: number) => {|Promise|3|}<boolean>'.
!!! error TS2345:   Type '{|Promise|4|}<number>' is not assignable to type '{|Promise|5|}<boolean>'.
!!! error TS2345:     Type 'number' is not assignable to type 'boolean'.
!!! annotated symbol 0 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:74:15
!!! annotated symbol 1 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:74:15
!!! annotated symbol 2 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:74:15
!!! annotated symbol 3 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:74:15
!!! annotated symbol 4 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:74:15
!!! annotated symbol 5 tests/cases/conformance/types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts:74:15
    }
    