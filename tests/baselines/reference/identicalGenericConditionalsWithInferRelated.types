=== tests/cases/compiler/identicalGenericConditionalsWithInferRelated.ts ===
function f<X>(arg: X) {
>f : <X>(arg: X) => void
>arg : X

    type Cond1 = X extends [infer A] ? A : never;
>Cond1 : X extends [infer A] ? A : never

    type Cond2 = X extends [infer A] ? A : never;
>Cond2 : X extends [infer A] ? A : never

    let x: Cond1 = null as any;
>x : X extends [infer A] ? A : never
>null as any : any
>null : null

    let y: Cond2 = null as any;
>y : X extends [infer A] ? A : never
>null as any : any
>null : null

    x = y; // is err, should be ok
>x = y : X extends [infer A] ? A : never
>x : X extends [infer A] ? A : never
>y : X extends [infer A] ? A : never

    y = x; // is err, should be ok
>y = x : X extends [infer A] ? A : never
>y : X extends [infer A] ? A : never
>x : X extends [infer A] ? A : never
}

