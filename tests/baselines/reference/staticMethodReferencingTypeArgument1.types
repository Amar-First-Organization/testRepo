=== tests/cases/compiler/staticMethodReferencingTypeArgument1.ts ===
module Editor {
>Editor : typeof Editor

    export class List<T> {
>List : List<T>

        next: List<T>;
>next : List<T>

        prev: List<T>;
>prev : List<T>

        constructor(public isHead: boolean, public data: T) {
>isHead : boolean
>data : T
        }

        static MakeHead(): List<T> {
>MakeHead : () => List<any (error)>

            var entry: List<T> = new List<T>(true, null); // can't access T here
>entry : List<any (error)>
>new List<T>(true, null) : List<any (error)>
>List : typeof List
>true : true
>null : null

            entry.prev = entry;
>entry.prev = entry : List<any (error)>
>entry.prev : List<any (error)>
>entry : List<any (error)>
>prev : List<any (error)>
>entry : List<any (error)>

            entry.next = entry;
>entry.next = entry : List<any (error)>
>entry.next : List<any (error)>
>entry : List<any (error)>
>next : List<any (error)>
>entry : List<any (error)>

            return entry;
>entry : List<any (error)>
        }
    }
}
