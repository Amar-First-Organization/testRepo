//// [tests/cases/compiler/commentsVarDecl.ts] ////

//// [commentsVarDecl.ts]
/** Variable comments*/
var myVariable = 10; // This trailing Comment1

/** This is another variable comment*/
var anotherVariable = 30;

// shouldn't appear
var aVar = "";

/** this is multiline comment
  * All these variables are of number type */
var anotherAnotherVariable = 70; /* these are multiple trailing comments */ /* multiple trailing comments */

/** Triple slash multiline comment*/
/** another line in the comment*/
/** comment line 2*/
var x = 70; /* multiline trailing comment 
this is multiline trailing comment */
/** Triple slash comment on the assignment shouldnt be in .d.ts file*/
x = myVariable;

/** triple slash comment1*/
/** jsdocstyle comment - only this comment should be in .d.ts file*/
var n = 30;

/** var deckaration with comment on type as well*/
var y = /** value comment */ 20;

/// var deckaration with comment on type as well
var yy =
    /// value comment
    20;

/** comment2 */
var z = /** lambda comment */ (x: number, y: number): number => x + y;

var z2: /** type comment*/ (x: number) => string;

var x2: (x: number) => string = z2;

var n4: (x: number) => string;
n4 = z2;

/// [Declarations] ////



//// [commentsVarDecl.d.ts]
/** Variable comments*/
declare var myVariable: number;
/** This is another variable comment*/
declare var anotherVariable: number;
declare var aVar: string;
/** this is multiline comment
  * All these variables are of number type */
declare var anotherAnotherVariable: number;
/** Triple slash multiline comment*/
/** another line in the comment*/
/** comment line 2*/
declare var x: number;
/** triple slash comment1*/
/** jsdocstyle comment - only this comment should be in .d.ts file*/
declare var n: number;
/** var deckaration with comment on type as well*/
declare var y: number;
declare var yy: number;
/** comment2 */
declare var z: (x: number, y: number) => number;
declare var z2: (x: number) => string;
declare var x2: (x: number) => string;
declare var n4: (x: number) => string;
//# sourceMappingURL=commentsVarDecl.d.ts.map

/// [Declarations Maps] ////


//// [commentsVarDecl.d.ts.map]
{"version":3,"file":"commentsVarDecl.d.ts","sourceRoot":"","sources":["commentsVarDecl.ts"],"names":[],"mappings":"AAAA,uBAAuB;AACvB,QAAA,IAAI,UAAU,QAAK,CAAC;AAEpB,sCAAsC;AACtC,QAAA,IAAI,eAAe,QAAK,CAAC;AAGzB,QAAA,IAAI,IAAI,QAAK,CAAC;AAEd;6CAC6C;AAC7C,QAAA,IAAI,sBAAsB,QAAK,CAAC;AAEhC,oCAAoC;AACpC,iCAAiC;AACjC,oBAAoB;AACpB,QAAA,IAAI,CAAC,QAAK,CAAC;AAKX,2BAA2B;AAC3B,oEAAoE;AACpE,QAAA,IAAI,CAAC,QAAK,CAAC;AAEX,kDAAkD;AAClD,QAAA,IAAI,CAAC,QAA0B,CAAC;AAGhC,QAAA,IAAI,EAAE,QAEA,CAAC;AAEP,eAAe;AACf,QAAA,IAAI,CAAC,GAA0B,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,KAAG,MAAe,CAAC;AAEtE,QAAA,IAAI,EAAE,EAAqB,CAAC,CAAC,EAAE,MAAM,KAAK,MAAM,CAAC;AAEjD,QAAA,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,KAAK,MAAW,CAAC;AAEnC,QAAA,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,KAAK,MAAM,CAAC"}

//// https://sokra.github.io/source-map-visualization#base64,LyoqIFZhcmlhYmxlIGNvbW1lbnRzKi8NCmRlY2xhcmUgdmFyIG15VmFyaWFibGU6IG51bWJlcjsNCi8qKiBUaGlzIGlzIGFub3RoZXIgdmFyaWFibGUgY29tbWVudCovDQpkZWNsYXJlIHZhciBhbm90aGVyVmFyaWFibGU6IG51bWJlcjsNCmRlY2xhcmUgdmFyIGFWYXI6IHN0cmluZzsNCi8qKiB0aGlzIGlzIG11bHRpbGluZSBjb21tZW50DQogICogQWxsIHRoZXNlIHZhcmlhYmxlcyBhcmUgb2YgbnVtYmVyIHR5cGUgKi8NCmRlY2xhcmUgdmFyIGFub3RoZXJBbm90aGVyVmFyaWFibGU6IG51bWJlcjsNCi8qKiBUcmlwbGUgc2xhc2ggbXVsdGlsaW5lIGNvbW1lbnQqLw0KLyoqIGFub3RoZXIgbGluZSBpbiB0aGUgY29tbWVudCovDQovKiogY29tbWVudCBsaW5lIDIqLw0KZGVjbGFyZSB2YXIgeDogbnVtYmVyOw0KLyoqIHRyaXBsZSBzbGFzaCBjb21tZW50MSovDQovKioganNkb2NzdHlsZSBjb21tZW50IC0gb25seSB0aGlzIGNvbW1lbnQgc2hvdWxkIGJlIGluIC5kLnRzIGZpbGUqLw0KZGVjbGFyZSB2YXIgbjogbnVtYmVyOw0KLyoqIHZhciBkZWNrYXJhdGlvbiB3aXRoIGNvbW1lbnQgb24gdHlwZSBhcyB3ZWxsKi8NCmRlY2xhcmUgdmFyIHk6IG51bWJlcjsNCmRlY2xhcmUgdmFyIHl5OiBudW1iZXI7DQovKiogY29tbWVudDIgKi8NCmRlY2xhcmUgdmFyIHo6ICh4OiBudW1iZXIsIHk6IG51bWJlcikgPT4gbnVtYmVyOw0KZGVjbGFyZSB2YXIgejI6ICh4OiBudW1iZXIpID0+IHN0cmluZzsNCmRlY2xhcmUgdmFyIHgyOiAoeDogbnVtYmVyKSA9PiBzdHJpbmc7DQpkZWNsYXJlIHZhciBuNDogKHg6IG51bWJlcikgPT4gc3RyaW5nOw0KLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tbWVudHNWYXJEZWNsLmQudHMubWFw,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudHNWYXJEZWNsLmQudHMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjb21tZW50c1ZhckRlY2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCO0FBQ3ZCLFFBQUEsSUFBSSxVQUFVLFFBQUssQ0FBQztBQUVwQixzQ0FBc0M7QUFDdEMsUUFBQSxJQUFJLGVBQWUsUUFBSyxDQUFDO0FBR3pCLFFBQUEsSUFBSSxJQUFJLFFBQUssQ0FBQztBQUVkOzZDQUM2QztBQUM3QyxRQUFBLElBQUksc0JBQXNCLFFBQUssQ0FBQztBQUVoQyxvQ0FBb0M7QUFDcEMsaUNBQWlDO0FBQ2pDLG9CQUFvQjtBQUNwQixRQUFBLElBQUksQ0FBQyxRQUFLLENBQUM7QUFLWCwyQkFBMkI7QUFDM0Isb0VBQW9FO0FBQ3BFLFFBQUEsSUFBSSxDQUFDLFFBQUssQ0FBQztBQUVYLGtEQUFrRDtBQUNsRCxRQUFBLElBQUksQ0FBQyxRQUEwQixDQUFDO0FBR2hDLFFBQUEsSUFBSSxFQUFFLFFBRUEsQ0FBQztBQUVQLGVBQWU7QUFDZixRQUFBLElBQUksQ0FBQyxHQUEwQixDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEtBQUcsTUFBZSxDQUFDO0FBRXRFLFFBQUEsSUFBSSxFQUFFLEVBQXFCLENBQUMsQ0FBQyxFQUFFLE1BQU0sS0FBSyxNQUFNLENBQUM7QUFFakQsUUFBQSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxNQUFNLEtBQUssTUFBVyxDQUFDO0FBRW5DLFFBQUEsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsTUFBTSxLQUFLLE1BQU0sQ0FBQyJ9,LyoqIFZhcmlhYmxlIGNvbW1lbnRzKi8KdmFyIG15VmFyaWFibGUgPSAxMDsgLy8gVGhpcyB0cmFpbGluZyBDb21tZW50MQoKLyoqIFRoaXMgaXMgYW5vdGhlciB2YXJpYWJsZSBjb21tZW50Ki8KdmFyIGFub3RoZXJWYXJpYWJsZSA9IDMwOwoKLy8gc2hvdWxkbid0IGFwcGVhcgp2YXIgYVZhciA9ICIiOwoKLyoqIHRoaXMgaXMgbXVsdGlsaW5lIGNvbW1lbnQKICAqIEFsbCB0aGVzZSB2YXJpYWJsZXMgYXJlIG9mIG51bWJlciB0eXBlICovCnZhciBhbm90aGVyQW5vdGhlclZhcmlhYmxlID0gNzA7IC8qIHRoZXNlIGFyZSBtdWx0aXBsZSB0cmFpbGluZyBjb21tZW50cyAqLyAvKiBtdWx0aXBsZSB0cmFpbGluZyBjb21tZW50cyAqLwoKLyoqIFRyaXBsZSBzbGFzaCBtdWx0aWxpbmUgY29tbWVudCovCi8qKiBhbm90aGVyIGxpbmUgaW4gdGhlIGNvbW1lbnQqLwovKiogY29tbWVudCBsaW5lIDIqLwp2YXIgeCA9IDcwOyAvKiBtdWx0aWxpbmUgdHJhaWxpbmcgY29tbWVudCAKdGhpcyBpcyBtdWx0aWxpbmUgdHJhaWxpbmcgY29tbWVudCAqLwovKiogVHJpcGxlIHNsYXNoIGNvbW1lbnQgb24gdGhlIGFzc2lnbm1lbnQgc2hvdWxkbnQgYmUgaW4gLmQudHMgZmlsZSovCnggPSBteVZhcmlhYmxlOwoKLyoqIHRyaXBsZSBzbGFzaCBjb21tZW50MSovCi8qKiBqc2RvY3N0eWxlIGNvbW1lbnQgLSBvbmx5IHRoaXMgY29tbWVudCBzaG91bGQgYmUgaW4gLmQudHMgZmlsZSovCnZhciBuID0gMzA7CgovKiogdmFyIGRlY2thcmF0aW9uIHdpdGggY29tbWVudCBvbiB0eXBlIGFzIHdlbGwqLwp2YXIgeSA9IC8qKiB2YWx1ZSBjb21tZW50ICovIDIwOwoKLy8vIHZhciBkZWNrYXJhdGlvbiB3aXRoIGNvbW1lbnQgb24gdHlwZSBhcyB3ZWxsCnZhciB5eSA9CiAgICAvLy8gdmFsdWUgY29tbWVudAogICAgMjA7CgovKiogY29tbWVudDIgKi8KdmFyIHogPSAvKiogbGFtYmRhIGNvbW1lbnQgKi8gKHg6IG51bWJlciwgeTogbnVtYmVyKTogbnVtYmVyID0+IHggKyB5OwoKdmFyIHoyOiAvKiogdHlwZSBjb21tZW50Ki8gKHg6IG51bWJlcikgPT4gc3RyaW5nOwoKdmFyIHgyOiAoeDogbnVtYmVyKSA9PiBzdHJpbmcgPSB6MjsKCnZhciBuNDogKHg6IG51bWJlcikgPT4gc3RyaW5nOwpuNCA9IHoyOw==

