=== tests/cases/compiler/index.ts ===

export * from "./a";
export {Detail} from "./b";
>Detail : Symbol(Detail, Decl(index.ts, 2, 8))

export interface Inner {
>Inner : Symbol(Inner, Decl(index.ts, 2, 27))

	item4: number;
>item4 : Symbol(item4, Decl(index.ts, 4, 24))
}

=== tests/cases/compiler/a.ts ===
import {Main as BaseMain, Inner as Middle} from "./b";
>Main : Symbol(BaseMain, Decl(a.ts, 0, 8))
>BaseMain : Symbol(BaseMain, Decl(a.ts, 0, 8))
>Inner : Symbol(Middle, Decl(a.ts, 0, 25))
>Middle : Symbol(Middle, Decl(a.ts, 0, 25))

export class Main extends BaseMain {
>Main : Symbol(Main, Decl(a.ts, 0, 54))
>BaseMain : Symbol(BaseMain, Decl(a.ts, 0, 8))

	memberc: Middle;
>memberc : Symbol(memberc, Decl(a.ts, 2, 36))
>Middle : Symbol(Middle, Decl(a.ts, 0, 25))
}

export interface Inner {
>Inner : Symbol(Inner, Decl(a.ts, 4, 1))

	item3: number;
>item3 : Symbol(item3, Decl(a.ts, 6, 24))
}

=== tests/cases/compiler/b.ts ===
import {Main as BaseMain, Inner as Innermost} from "./c";
>Main : Symbol(BaseMain, Decl(b.ts, 0, 8))
>BaseMain : Symbol(BaseMain, Decl(b.ts, 0, 8))
>Inner : Symbol(Innermost, Decl(b.ts, 0, 25))
>Innermost : Symbol(Innermost, Decl(b.ts, 0, 25))
>Main_2 : Symbol((Missing), Decl(b.ts, 0, 57))
>Inner_2 : Symbol((Missing), Decl(b.ts, 5, 1))

export class Main extends BaseMain {
>BaseMain : Symbol(BaseMain, Decl(b.ts, 0, 8))

	member2: Innermost;
>member2 : Symbol(member2, Decl(b.ts, 2, 36))
>Innermost : Symbol(Innermost, Decl(b.ts, 0, 25))

	details: Detail;
>details : Symbol(details, Decl(b.ts, 3, 20))
>Detail : Symbol(Detail, Decl(b.ts, 9, 1))
}

export interface Inner {
	item2: number;
>item2 : Symbol(item2, Decl(b.ts, 7, 24))
}

export interface Detail {
>Detail : Symbol(Detail, Decl(b.ts, 9, 1))

	id: string;
>id : Symbol(id, Decl(b.ts, 11, 25))
}

=== tests/cases/compiler/c.ts ===
export class Main {
>Main_1 : Symbol((Missing), Decl(c.ts, 0, 0))
>Inner_1 : Symbol((Missing), Decl(c.ts, 2, 1))

	member1: string;
>member1 : Symbol(member1, Decl(c.ts, 0, 19))
}

export interface Inner {
	item: number;
>item : Symbol(item, Decl(c.ts, 4, 24))
}
