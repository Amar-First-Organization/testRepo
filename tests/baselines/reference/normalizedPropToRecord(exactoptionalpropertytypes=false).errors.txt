normalizedPropToRecord.ts(13,7): error TS2322: Type '{ stuff: { a: number; b?: undefined; }; } | { stuff: { b: number; a?: undefined; }; }' is not assignable to type 'Foo'.
  Type '{ stuff: { a: number; b?: undefined; }; }' is not assignable to type 'Foo'.
    Types of property 'stuff' are incompatible.
      Type '{ a: number; b?: undefined; }' is not assignable to type 'Record<string, number>'.
        Property 'b' is incompatible with index signature.
          Type 'undefined' is not assignable to type 'number'.


==== normalizedPropToRecord.ts (1 errors) ====
    type Foo = {
        stuff: Record<string, number>;
    };
    function getFoo() {
        if (Math.random() > 0.5) {
            return { stuff: { a: 42 } };
        } else {
            return { stuff: { b: 99 } };
        }
    }
    
    // Actually fine, but claimed not to be
    const p: Foo = getFoo();
          ~
!!! error TS2322: Type '{ stuff: { a: number; b?: undefined; }; } | { stuff: { b: number; a?: undefined; }; }' is not assignable to type 'Foo'.
!!! error TS2322:   Type '{ stuff: { a: number; b?: undefined; }; }' is not assignable to type 'Foo'.
!!! error TS2322:     Types of property 'stuff' are incompatible.
!!! error TS2322:       Type '{ a: number; b?: undefined; }' is not assignable to type 'Record<string, number>'.
!!! error TS2322:         Property 'b' is incompatible with index signature.
!!! error TS2322:           Type 'undefined' is not assignable to type 'number'.