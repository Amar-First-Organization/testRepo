=== tests/cases/conformance/structs/structPropertyMemberDeclarations/structMemberFunctionDeclarations/structStaticFactory1.ts ===
// doc 4.2
// In a static member function, this represents the constructor function object on which
// the static member function was invoked. Thus, a call to ‘new this()’ may actually invoke
// a derived struct constructor.
// ok
struct Base {
>Base : Symbol(Base, Decl(structStaticFactory1.ts, 0, 0))

    foo() { return 1; }
>foo : Symbol(foo, Decl(structStaticFactory1.ts, 5, 13))

    static create() {
>create : Symbol(Base.create, Decl(structStaticFactory1.ts, 6, 23))

        return new this();
>this : Symbol(Base, Decl(structStaticFactory1.ts, 0, 0))
    }
}

struct Derived extends Base {
>Derived : Symbol(Derived, Decl(structStaticFactory1.ts, 10, 1))
>Base : Symbol(Base, Decl(structStaticFactory1.ts, 0, 0))

    foo() { return 2; }
>foo : Symbol(foo, Decl(structStaticFactory1.ts, 12, 29))
}
var d = Derived.create(); // new B()
>d : Symbol(d, Decl(structStaticFactory1.ts, 15, 3))
>Derived.create : Symbol(Base.create, Decl(structStaticFactory1.ts, 6, 23))
>Derived : Symbol(Derived, Decl(structStaticFactory1.ts, 10, 1))
>create : Symbol(Base.create, Decl(structStaticFactory1.ts, 6, 23))

d.foo(); // 2
>d.foo : Symbol(Base.foo, Decl(structStaticFactory1.ts, 5, 13))
>d : Symbol(d, Decl(structStaticFactory1.ts, 15, 3))
>foo : Symbol(Base.foo, Decl(structStaticFactory1.ts, 5, 13))

