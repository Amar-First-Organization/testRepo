=== tests/cases/conformance/types/typeRelationships/assignmentCompatibility/undefinedAssignableToEveryType.ts ===
class C {
>C : C

    foo: string;
>foo : string
}
var ac: C;
>ac : C
>C : C

interface I {
>I : I

    foo: string;
>foo : string
}
var ai: I;
>ai : I
>I : I

enum E { A }
>E : E
>A : E

var ae: E;
>ae : E
>E : E

var b: number = undefined;
>b : number
>undefined : number

var c: string = undefined;
>c : string
>undefined : string

var d: boolean = undefined;
>d : boolean
>undefined : boolean

var e: Date = undefined;
>e : Date
>Date : Date
>undefined : Date

var f: any = undefined;
>f : any
>undefined : any

var g: void = undefined;
>g : void
>undefined : void

var h: Object = undefined;
>h : Object
>Object : Object
>undefined : Object

var i: {} = undefined;
>i : {}
>undefined : {}

var j: () => {} = undefined;
>j : () => {}
>undefined : () => {}

var k: Function = undefined;
>k : Function
>Function : Function
>undefined : Function

var l: (x: number) => string = undefined;
>l : (x: number) => string
>x : number
>undefined : (x: number) => string

ac = undefined;
>ac = undefined : C
>ac : C
>undefined : C

ai = undefined;
>ai = undefined : I
>ai : I
>undefined : I

ae = undefined;
>ae = undefined : E
>ae : E
>undefined : E

var m: number[] = undefined;
>m : number[]
>undefined : number[]

var n: { foo: string } = undefined;
>n : { foo: string; }
>foo : string
>undefined : { foo: string; }

var o: <T>(x: T) => T = undefined;
>o : <T>(x: T) => T
>T : T
>x : T
>T : T
>T : T
>undefined : <T>(x: T) => T

var p: Number = undefined;
>p : Number
>Number : Number
>undefined : Number

var q: String = undefined;
>q : String
>String : String
>undefined : String

function foo<T, U, V extends Date>(x: T, y: U, z: V) {
>foo : <T, U, V extends Date>(x: T, y: U, z: V) => void
>T : T
>U : U
>V : V
>Date : Date
>x : T
>T : T
>y : U
>U : U
>z : V
>V : V

    x = undefined;
>x = undefined : T
>x : T
>undefined : T

    y = undefined;
>y = undefined : U
>y : U
>undefined : U

    z = undefined;
>z = undefined : V
>z : V
>undefined : V
}
//function foo<T, U extends T, V extends Date>(x: T, y: U, z: V) {
//    x = undefined;
//    y = undefined;
//    z = undefined;
//}
