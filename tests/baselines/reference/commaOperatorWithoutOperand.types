=== tests/cases/conformance/expressions/commaOperator/commaOperatorWithoutOperand.ts ===
var ANY: any;
>ANY : any

var BOOLEAN: boolean;
>BOOLEAN : boolean

var NUMBER: number;
>NUMBER : number

var STRING: string;
>STRING : string

var OBJECT: Object;
>OBJECT : Object

// Expect to have compiler errors
// Missing the second operand
(ANY, );
>(ANY, ) : any (error)
>ANY, : any (error)
>ANY : any
> : any (error)

(BOOLEAN, );
>(BOOLEAN, ) : any (error)
>BOOLEAN, : any (error)
>BOOLEAN : boolean
> : any (error)

(NUMBER, );
>(NUMBER, ) : any (error)
>NUMBER, : any (error)
>NUMBER : number
> : any (error)

(STRING, );
>(STRING, ) : any (error)
>STRING, : any (error)
>STRING : string
> : any (error)

(OBJECT, );
>(OBJECT, ) : any (error)
>OBJECT, : any (error)
>OBJECT : Object
> : any (error)

// Missing the first operand
(, ANY);
>(, ANY) : any
>, ANY : any
> : any (error)
>ANY : any

(, BOOLEAN);
>(, BOOLEAN) : boolean
>, BOOLEAN : boolean
> : any (error)
>BOOLEAN : boolean

(, NUMBER);
>(, NUMBER) : number
>, NUMBER : number
> : any (error)
>NUMBER : number

(, STRING);
>(, STRING) : string
>, STRING : string
> : any (error)
>STRING : string

(, OBJECT);
>(, OBJECT) : Object
>, OBJECT : Object
> : any (error)
>OBJECT : Object

// Missing all operands
( , );
>( , ) : any (error)
>, : any (error)
> : any (error)
> : any (error)

