=== tests/cases/conformance/es6/templates/taggedTemplatesRawPartsInference.ts ===
function tag<TParts extends readonly string[], TRaw extends readonly string[], U extends readonly unknown[]>(strs: TemplateStringsArray<TParts, TRaw>, ...args: U): {parts: TParts; raw: TRaw; args: U} {
>tag : Symbol(tag, Decl(taggedTemplatesRawPartsInference.ts, 0, 0))
>TParts : Symbol(TParts, Decl(taggedTemplatesRawPartsInference.ts, 0, 13))
>TRaw : Symbol(TRaw, Decl(taggedTemplatesRawPartsInference.ts, 0, 46))
>U : Symbol(U, Decl(taggedTemplatesRawPartsInference.ts, 0, 78))
>strs : Symbol(strs, Decl(taggedTemplatesRawPartsInference.ts, 0, 109))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))
>TParts : Symbol(TParts, Decl(taggedTemplatesRawPartsInference.ts, 0, 13))
>TRaw : Symbol(TRaw, Decl(taggedTemplatesRawPartsInference.ts, 0, 46))
>args : Symbol(args, Decl(taggedTemplatesRawPartsInference.ts, 0, 150))
>U : Symbol(U, Decl(taggedTemplatesRawPartsInference.ts, 0, 78))
>parts : Symbol(parts, Decl(taggedTemplatesRawPartsInference.ts, 0, 165))
>TParts : Symbol(TParts, Decl(taggedTemplatesRawPartsInference.ts, 0, 13))
>raw : Symbol(raw, Decl(taggedTemplatesRawPartsInference.ts, 0, 179))
>TRaw : Symbol(TRaw, Decl(taggedTemplatesRawPartsInference.ts, 0, 46))
>args : Symbol(args, Decl(taggedTemplatesRawPartsInference.ts, 0, 190))
>U : Symbol(U, Decl(taggedTemplatesRawPartsInference.ts, 0, 78))

    return null;
}

var a = tag `part\1${''}part\2`;
>a : Symbol(a, Decl(taggedTemplatesRawPartsInference.ts, 4, 3), Decl(taggedTemplatesRawPartsInference.ts, 5, 3))
>tag : Symbol(tag, Decl(taggedTemplatesRawPartsInference.ts, 0, 0))

var a: {};
>a : Symbol(a, Decl(taggedTemplatesRawPartsInference.ts, 4, 3), Decl(taggedTemplatesRawPartsInference.ts, 5, 3))

