=== tests/cases/compiler/inferTypeParameterFromApplicableContextualType.ts ===
declare function useCallback<T extends Function>(fn: T): T;
>useCallback : Symbol(useCallback, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 0))
>T : Symbol(T, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 29))
>Function : Symbol(Function, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>fn : Symbol(fn, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 49))
>T : Symbol(T, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 29))
>T : Symbol(T, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 29))

declare function ex1(callback: (x: number) => void): void;
>ex1 : Symbol(ex1, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 59))
>callback : Symbol(callback, Decl(inferTypeParameterFromApplicableContextualType.ts, 2, 21))
>x : Symbol(x, Decl(inferTypeParameterFromApplicableContextualType.ts, 2, 32))

ex1(useCallback(x => {}));
>ex1 : Symbol(ex1, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 59))
>useCallback : Symbol(useCallback, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 0))
>x : Symbol(x, Decl(inferTypeParameterFromApplicableContextualType.ts, 3, 16))

declare function ex2(callback?: (x: number) => void): void;
>ex2 : Symbol(ex2, Decl(inferTypeParameterFromApplicableContextualType.ts, 3, 26))
>callback : Symbol(callback, Decl(inferTypeParameterFromApplicableContextualType.ts, 5, 21))
>x : Symbol(x, Decl(inferTypeParameterFromApplicableContextualType.ts, 5, 33))

ex2(useCallback(x => {}));
>ex2 : Symbol(ex2, Decl(inferTypeParameterFromApplicableContextualType.ts, 3, 26))
>useCallback : Symbol(useCallback, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 0))
>x : Symbol(x, Decl(inferTypeParameterFromApplicableContextualType.ts, 6, 16))

declare function ex3(callback: ((x: number) => void) | 5): void;
>ex3 : Symbol(ex3, Decl(inferTypeParameterFromApplicableContextualType.ts, 6, 26))
>callback : Symbol(callback, Decl(inferTypeParameterFromApplicableContextualType.ts, 8, 21))
>x : Symbol(x, Decl(inferTypeParameterFromApplicableContextualType.ts, 8, 33))

ex3(useCallback(x => {}));
>ex3 : Symbol(ex3, Decl(inferTypeParameterFromApplicableContextualType.ts, 6, 26))
>useCallback : Symbol(useCallback, Decl(inferTypeParameterFromApplicableContextualType.ts, 0, 0))
>x : Symbol(x, Decl(inferTypeParameterFromApplicableContextualType.ts, 9, 16))

