unconstrainedTypeComparisons.ts(2,10): error TS18049: 'a' is possibly 'null' or 'undefined'.
unconstrainedTypeComparisons.ts(2,14): error TS18049: 'b' is possibly 'null' or 'undefined'.
unconstrainedTypeComparisons.ts(6,10): error TS18049: 'a' is possibly 'null' or 'undefined'.
unconstrainedTypeComparisons.ts(6,14): error TS18049: 'b' is possibly 'null' or 'undefined'.
unconstrainedTypeComparisons.ts(10,10): error TS18049: 'a' is possibly 'null' or 'undefined'.
unconstrainedTypeComparisons.ts(10,14): error TS18049: 'b' is possibly 'null' or 'undefined'.
unconstrainedTypeComparisons.ts(18,10): error TS18047: 'a' is possibly 'null'.
unconstrainedTypeComparisons.ts(18,14): error TS18049: 'b' is possibly 'null' or 'undefined'.


==== unconstrainedTypeComparisons.ts (8 errors) ====
    function f<T extends {} | undefined | null>(a: T, b: T): boolean {
      return a > b;
             ~
!!! error TS18049: 'a' is possibly 'null' or 'undefined'.
                 ~
!!! error TS18049: 'b' is possibly 'null' or 'undefined'.
    }
    
    function g<T>(a: T, b: T): boolean {
      return a > b;
             ~
!!! error TS18049: 'a' is possibly 'null' or 'undefined'.
                 ~
!!! error TS18049: 'b' is possibly 'null' or 'undefined'.
    }
    
    function h<T extends unknown>(a: T, b: T): boolean {
      return a > b;
             ~
!!! error TS18049: 'a' is possibly 'null' or 'undefined'.
                 ~
!!! error TS18049: 'b' is possibly 'null' or 'undefined'.
    }
    
    function i<T>(a: T, b: T): boolean {
      if (a === undefined) {
          return true;
      }
    
      return a > b;
             ~
!!! error TS18047: 'a' is possibly 'null'.
                 ~
!!! error TS18049: 'b' is possibly 'null' or 'undefined'.
    }