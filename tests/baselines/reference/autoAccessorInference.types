//// [tests/cases/conformance/classes/propertyMemberDeclarations/autoAccessorInference.ts] ////

=== autoAccessorInference.ts ===
class A {
>A : A
>  : ^

    accessor value;
>value : number | null
>      : ^^^^^^^^^^^^^

    constructor(n: number) {
>n : number
>  : ^^^^^^

        this.value = n
>this.value = n : number
>               : ^^^^^^
>this.value : number | null
>           : ^^^^^^^^^^^^^
>this : this
>     : ^^^^
>value : number | null
>      : ^^^^^^^^^^^^^
>n : number
>  : ^^^^^^

        if (n < 0) {
>n < 0 : boolean
>      : ^^^^^^^
>n : number
>  : ^^^^^^
>0 : 0
>  : ^

            this.value = null
>this.value = null : null
>                  : ^^^^
>this.value : number | null
>           : ^^^^^^^^^^^^^
>this : this
>     : ^^^^
>value : number | null
>      : ^^^^^^^^^^^^^
        }
    }
}

declare var n: number;
>n : number
>  : ^^^^^^

class B {
>B : B
>  : ^

    static accessor value;
>value : number | null
>      : ^^^^^^^^^^^^^

    static {
        this.value = n;
>this.value = n : number
>               : ^^^^^^
>this.value : number | null
>           : ^^^^^^^^^^^^^
>this : typeof B
>     : ^^^^^^^^
>value : number | null
>      : ^^^^^^^^^^^^^
>n : number
>  : ^^^^^^

        if (n < 0) {
>n < 0 : boolean
>      : ^^^^^^^
>n : number
>  : ^^^^^^
>0 : 0
>  : ^

            this.value = null;
>this.value = null : null
>                  : ^^^^
>this.value : number | null
>           : ^^^^^^^^^^^^^
>this : typeof B
>     : ^^^^^^^^
>value : number | null
>      : ^^^^^^^^^^^^^
        }
    }
}

