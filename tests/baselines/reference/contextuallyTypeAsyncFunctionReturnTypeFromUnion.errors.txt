tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts(11,23): error TS2322: Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }> | StateMachine<{ count: number; }>'.
  Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }>'.
    Type '{ count: number; } | StateMachine<{ count: number; }>' is not assignable to type '{ count: number; }'.
      Property 'count' is missing in type 'StateMachine<{ count: number; }>' but required in type '{ count: number; }'.
tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts(12,11): error TS2322: Type '() => Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type '() => Promise<{ count: number; }> | StateMachine<{ count: number; }>'.
  Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }> | StateMachine<{ count: number; }>'.
    Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }>'.
tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts(19,22): error TS2322: Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }> | StateMachine<{ count: number; }>'.
  Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }>'.
    Type '{ count: number; } | StateMachine<{ count: number; }>' is not assignable to type '{ count: number; }'.
      Property 'count' is missing in type 'StateMachine<{ count: number; }>' but required in type '{ count: number; }'.


==== tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts (3 errors) ====
    declare class StateMachine<T> {
      onDone: (a: T) => void;
    }
    
    declare function createMachine<T>(implementations: {
      services: Record<string, () => Promise<T> | StateMachine<T>>;
    }): void;
    
    createMachine<{ count: number }>({
      services: {
        test: async () => Promise.reject("some err"),
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }> | StateMachine<{ count: number; }>'.
!!! error TS2322:   Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }>'.
!!! error TS2322:     Type '{ count: number; } | StateMachine<{ count: number; }>' is not assignable to type '{ count: number; }'.
!!! error TS2322:       Property 'count' is missing in type 'StateMachine<{ count: number; }>' but required in type '{ count: number; }'.
!!! related TS2728 tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts:9:17: 'count' is declared here.
!!! related TS6502 tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts:6:28: The expected type comes from the return type of this signature.
        async test2() {
              ~~~~~
!!! error TS2322: Type '() => Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type '() => Promise<{ count: number; }> | StateMachine<{ count: number; }>'.
!!! error TS2322:   Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }> | StateMachine<{ count: number; }>'.
!!! error TS2322:     Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }>'.
          return Promise.reject("some err");
        },
      },
    });
    
    function fn1(): () => Promise<{ count: number }> | StateMachine<{ count: number }> {
      return async () => Promise.reject('some err')
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }> | StateMachine<{ count: number; }>'.
!!! error TS2322:   Type 'Promise<{ count: number; } | StateMachine<{ count: number; }>>' is not assignable to type 'Promise<{ count: number; }>'.
!!! error TS2322:     Type '{ count: number; } | StateMachine<{ count: number; }>' is not assignable to type '{ count: number; }'.
!!! error TS2322:       Property 'count' is missing in type 'StateMachine<{ count: number; }>' but required in type '{ count: number; }'.
!!! related TS2728 tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts:18:33: 'count' is declared here.
!!! related TS6502 tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnTypeFromUnion.ts:18:17: The expected type comes from the return type of this signature.
    }
    