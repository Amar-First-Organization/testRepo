=== tests/cases/compiler/normalizedIntersectionTooComplex.ts ===
// Repro from #30050

interface Obj<T> {
	ref: T;
>ref : T
}
interface Func<T> {
	(x: T): void;
>x : T
}
type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never;
>UnionToIntersection : UnionToIntersection<U>
>k : U
>k : I

type CtorOf<T> = (arg: UnionToIntersection<T>) => T;
>CtorOf : CtorOf<T>
>arg : UnionToIntersection<T>

interface Big {
    "0": { common?: string; "0"?: number, ref?: Obj<Big["0"]> | Func<Big["0"]>; }
>"0" : type _a = { common?: string | undefined; "0"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"0" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "0"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "0"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "1": { common?: string; "1"?: number, ref?: Obj<Big["1"]> | Func<Big["1"]>; }
>"1" : type _a = { common?: string | undefined; "1"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"1" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "1"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "1"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "2": { common?: string; "2"?: number, ref?: Obj<Big["2"]> | Func<Big["2"]>; }
>"2" : type _a = { common?: string | undefined; "2"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"2" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "2"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "2"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "3": { common?: string; "3"?: number, ref?: Obj<Big["3"]> | Func<Big["3"]>; }
>"3" : type _a = { common?: string | undefined; "3"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"3" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "3"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "3"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "4": { common?: string; "4"?: number, ref?: Obj<Big["4"]> | Func<Big["4"]>; }
>"4" : type _a = { common?: string | undefined; "4"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"4" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "4"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "4"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "5": { common?: string; "5"?: number, ref?: Obj<Big["5"]> | Func<Big["5"]>; }
>"5" : type _a = { common?: string | undefined; "5"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"5" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "5"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "5"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "6": { common?: string; "6"?: number, ref?: Obj<Big["6"]> | Func<Big["6"]>; }
>"6" : type _a = { common?: string | undefined; "6"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"6" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "6"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "6"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "7": { common?: string; "7"?: number, ref?: Obj<Big["7"]> | Func<Big["7"]>; }
>"7" : type _a = { common?: string | undefined; "7"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"7" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "7"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "7"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "8": { common?: string; "8"?: number, ref?: Obj<Big["8"]> | Func<Big["8"]>; }
>"8" : type _a = { common?: string | undefined; "8"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"8" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "8"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "8"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "9": { common?: string; "9"?: number, ref?: Obj<Big["9"]> | Func<Big["9"]>; }
>"9" : type _a = { common?: string | undefined; "9"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"9" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "9"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "9"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "10": { common?: string; "10"?: number, ref?: Obj<Big["10"]> | Func<Big["10"]>; }
>"10" : type _a = { common?: string | undefined; "10"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"10" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "10"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "10"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "11": { common?: string; "11"?: number, ref?: Obj<Big["11"]> | Func<Big["11"]>; }
>"11" : type _a = { common?: string | undefined; "11"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"11" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "11"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "11"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "12": { common?: string; "12"?: number, ref?: Obj<Big["12"]> | Func<Big["12"]>; }
>"12" : type _a = { common?: string | undefined; "12"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"12" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "12"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "12"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "13": { common?: string; "13"?: number, ref?: Obj<Big["13"]> | Func<Big["13"]>; }
>"13" : type _a = { common?: string | undefined; "13"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"13" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "13"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "13"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "14": { common?: string; "14"?: number, ref?: Obj<Big["14"]> | Func<Big["14"]>; }
>"14" : type _a = { common?: string | undefined; "14"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"14" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "14"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "14"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "15": { common?: string; "15"?: number, ref?: Obj<Big["15"]> | Func<Big["15"]>; }
>"15" : type _a = { common?: string | undefined; "15"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"15" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "15"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "15"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "16": { common?: string; "16"?: number, ref?: Obj<Big["16"]> | Func<Big["16"]>; }
>"16" : type _a = { common?: string | undefined; "16"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"16" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "16"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "16"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined

    "17": { common?: string; "17"?: number, ref?: Obj<Big["17"]> | Func<Big["17"]>; }
>"17" : type _a = { common?: string | undefined; "17"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }
>common : string | undefined
>"17" : number | undefined
>ref : Obj<type _a = { common?: string | undefined; "17"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | Func<type _a = { common?: string | undefined; "17"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; }> | undefined
}
declare function getCtor<T extends keyof Big>(comp: T): CtorOf<Big[T]>
>getCtor : <T extends "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "14" | "15" | "16" | "17">(comp: T) => CtorOf<Big[T]>
>comp : T

declare var all: keyof Big;
>all : "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "14" | "15" | "16" | "17"

const ctor = getCtor(all);
>ctor : CtorOf<type _a = { common?: string | undefined; "0"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; } | type _b = { common?: string | undefined; "1"?: number | undefined; ref?: Obj<_b> | Func<_b> | undefined; } | type _c = { common?: string | undefined; "2"?: number | undefined; ref?: Obj<_c> | Func<_c> | undefined; } | type _d = { common?: string | undefined; "3"?: number | undefined; ref?: Obj<_d> | Func<_d> | undefined; } | type _e = { common?: string | undefined; "4"?: number | undefined; ref?: Obj<_e> | Func<_e> | undefined; } | type _f = { common?: string | undefined; "5"?: number | undefined; ref?: Obj<_f> | Func<_f> | undefined; } | type _g = { common?: string | undefined; "6"?: number | undefined; ref?: Obj<_g> | Func<_g> | undefined; } | type _h = { common?: string | undefined; "7"?: number | undefined; ref?: Obj<_h> | Func<_h> | undefined; } | type _j = { common?: string | undefined; "8"?: number | undefined; ref?: Obj<_j> | Func<_j> | undefined; } | type _k = { common?: string | undefined; "9"?: number | undefined; ref?: Obj<_k> | Func<_k> | undefined; } | type _l = { common?: string | undefined; "10"?: number | undefined; ref?: Obj<_l> | Func<_l> | undefined; } | type _m = { common?: string | undefined; "11"?: number | undefined; ref?: Obj<_m> | Func<_m> | undefined; } | type _o = { common?: string | undefined; "12"?: number | undefined; ref?: Obj<_o> | Func<_o> | undefined; } | type _p = { common?: string | undefined; "13"?: number | undefined; ref?: Obj<_p> | Func<_p> | undefined; } | type _q = { common?: string | undefined; "14"?: number | undefined; ref?: Obj<_q> | Func<_q> | undefined; } | type _r = { common?: string | undefined; "15"?: number | undefined; ref?: Obj<_r> | Func<_r> | undefined; } | type _s = { common?: string | undefined; "16"?: number | undefined; ref?: Obj<_s> | Func<_s> | undefined; } | type _t = { common?: string | undefined; "17"?: number | undefined; ref?: Obj<_t> | Func<_t> | undefined; }>
>getCtor(all) : CtorOf<type _a = { common?: string | undefined; "0"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; } | type _b = { common?: string | undefined; "1"?: number | undefined; ref?: Obj<_b> | Func<_b> | undefined; } | type _c = { common?: string | undefined; "2"?: number | undefined; ref?: Obj<_c> | Func<_c> | undefined; } | type _d = { common?: string | undefined; "3"?: number | undefined; ref?: Obj<_d> | Func<_d> | undefined; } | type _e = { common?: string | undefined; "4"?: number | undefined; ref?: Obj<_e> | Func<_e> | undefined; } | type _f = { common?: string | undefined; "5"?: number | undefined; ref?: Obj<_f> | Func<_f> | undefined; } | type _g = { common?: string | undefined; "6"?: number | undefined; ref?: Obj<_g> | Func<_g> | undefined; } | type _h = { common?: string | undefined; "7"?: number | undefined; ref?: Obj<_h> | Func<_h> | undefined; } | type _j = { common?: string | undefined; "8"?: number | undefined; ref?: Obj<_j> | Func<_j> | undefined; } | type _k = { common?: string | undefined; "9"?: number | undefined; ref?: Obj<_k> | Func<_k> | undefined; } | type _l = { common?: string | undefined; "10"?: number | undefined; ref?: Obj<_l> | Func<_l> | undefined; } | type _m = { common?: string | undefined; "11"?: number | undefined; ref?: Obj<_m> | Func<_m> | undefined; } | type _o = { common?: string | undefined; "12"?: number | undefined; ref?: Obj<_o> | Func<_o> | undefined; } | type _p = { common?: string | undefined; "13"?: number | undefined; ref?: Obj<_p> | Func<_p> | undefined; } | type _q = { common?: string | undefined; "14"?: number | undefined; ref?: Obj<_q> | Func<_q> | undefined; } | type _r = { common?: string | undefined; "15"?: number | undefined; ref?: Obj<_r> | Func<_r> | undefined; } | type _s = { common?: string | undefined; "16"?: number | undefined; ref?: Obj<_s> | Func<_s> | undefined; } | type _t = { common?: string | undefined; "17"?: number | undefined; ref?: Obj<_t> | Func<_t> | undefined; }>
>getCtor : <T extends "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "14" | "15" | "16" | "17">(comp: T) => CtorOf<Big[T]>
>all : "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "14" | "15" | "16" | "17"

const comp = ctor({ common: "ok", ref: x => console.log(x) });
>comp : type _a = { common?: string | undefined; "0"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; } | type _b = { common?: string | undefined; "1"?: number | undefined; ref?: Obj<_b> | Func<_b> | undefined; } | type _c = { common?: string | undefined; "2"?: number | undefined; ref?: Obj<_c> | Func<_c> | undefined; } | type _d = { common?: string | undefined; "3"?: number | undefined; ref?: Obj<_d> | Func<_d> | undefined; } | type _e = { common?: string | undefined; "4"?: number | undefined; ref?: Obj<_e> | Func<_e> | undefined; } | type _f = { common?: string | undefined; "5"?: number | undefined; ref?: Obj<_f> | Func<_f> | undefined; } | type _g = { common?: string | undefined; "6"?: number | undefined; ref?: Obj<_g> | Func<_g> | undefined; } | type _h = { common?: string | undefined; "7"?: number | undefined; ref?: Obj<_h> | Func<_h> | undefined; } | type _j = { common?: string | undefined; "8"?: number | undefined; ref?: Obj<_j> | Func<_j> | undefined; } | type _k = { common?: string | undefined; "9"?: number | undefined; ref?: Obj<_k> | Func<_k> | undefined; } | type _l = { common?: string | undefined; "10"?: number | undefined; ref?: Obj<_l> | Func<_l> | undefined; } | type _m = { common?: string | undefined; "11"?: number | undefined; ref?: Obj<_m> | Func<_m> | undefined; } | type _o = { common?: string | undefined; "12"?: number | undefined; ref?: Obj<_o> | Func<_o> | undefined; } | type _p = { common?: string | undefined; "13"?: number | undefined; ref?: Obj<_p> | Func<_p> | undefined; } | type _q = { common?: string | undefined; "14"?: number | undefined; ref?: Obj<_q> | Func<_q> | undefined; } | type _r = { common?: string | undefined; "15"?: number | undefined; ref?: Obj<_r> | Func<_r> | undefined; } | type _s = { common?: string | undefined; "16"?: number | undefined; ref?: Obj<_s> | Func<_s> | undefined; } | type _t = { common?: string | undefined; "17"?: number | undefined; ref?: Obj<_t> | Func<_t> | undefined; }
>ctor({ common: "ok", ref: x => console.log(x) }) : type _a = { common?: string | undefined; "0"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; } | type _b = { common?: string | undefined; "1"?: number | undefined; ref?: Obj<_b> | Func<_b> | undefined; } | type _c = { common?: string | undefined; "2"?: number | undefined; ref?: Obj<_c> | Func<_c> | undefined; } | type _d = { common?: string | undefined; "3"?: number | undefined; ref?: Obj<_d> | Func<_d> | undefined; } | type _e = { common?: string | undefined; "4"?: number | undefined; ref?: Obj<_e> | Func<_e> | undefined; } | type _f = { common?: string | undefined; "5"?: number | undefined; ref?: Obj<_f> | Func<_f> | undefined; } | type _g = { common?: string | undefined; "6"?: number | undefined; ref?: Obj<_g> | Func<_g> | undefined; } | type _h = { common?: string | undefined; "7"?: number | undefined; ref?: Obj<_h> | Func<_h> | undefined; } | type _j = { common?: string | undefined; "8"?: number | undefined; ref?: Obj<_j> | Func<_j> | undefined; } | type _k = { common?: string | undefined; "9"?: number | undefined; ref?: Obj<_k> | Func<_k> | undefined; } | type _l = { common?: string | undefined; "10"?: number | undefined; ref?: Obj<_l> | Func<_l> | undefined; } | type _m = { common?: string | undefined; "11"?: number | undefined; ref?: Obj<_m> | Func<_m> | undefined; } | type _o = { common?: string | undefined; "12"?: number | undefined; ref?: Obj<_o> | Func<_o> | undefined; } | type _p = { common?: string | undefined; "13"?: number | undefined; ref?: Obj<_p> | Func<_p> | undefined; } | type _q = { common?: string | undefined; "14"?: number | undefined; ref?: Obj<_q> | Func<_q> | undefined; } | type _r = { common?: string | undefined; "15"?: number | undefined; ref?: Obj<_r> | Func<_r> | undefined; } | type _s = { common?: string | undefined; "16"?: number | undefined; ref?: Obj<_s> | Func<_s> | undefined; } | type _t = { common?: string | undefined; "17"?: number | undefined; ref?: Obj<_t> | Func<_t> | undefined; }
>ctor : CtorOf<type _a = { common?: string | undefined; "0"?: number | undefined; ref?: Obj<_a> | Func<_a> | undefined; } | type _b = { common?: string | undefined; "1"?: number | undefined; ref?: Obj<_b> | Func<_b> | undefined; } | type _c = { common?: string | undefined; "2"?: number | undefined; ref?: Obj<_c> | Func<_c> | undefined; } | type _d = { common?: string | undefined; "3"?: number | undefined; ref?: Obj<_d> | Func<_d> | undefined; } | type _e = { common?: string | undefined; "4"?: number | undefined; ref?: Obj<_e> | Func<_e> | undefined; } | type _f = { common?: string | undefined; "5"?: number | undefined; ref?: Obj<_f> | Func<_f> | undefined; } | type _g = { common?: string | undefined; "6"?: number | undefined; ref?: Obj<_g> | Func<_g> | undefined; } | type _h = { common?: string | undefined; "7"?: number | undefined; ref?: Obj<_h> | Func<_h> | undefined; } | type _j = { common?: string | undefined; "8"?: number | undefined; ref?: Obj<_j> | Func<_j> | undefined; } | type _k = { common?: string | undefined; "9"?: number | undefined; ref?: Obj<_k> | Func<_k> | undefined; } | type _l = { common?: string | undefined; "10"?: number | undefined; ref?: Obj<_l> | Func<_l> | undefined; } | type _m = { common?: string | undefined; "11"?: number | undefined; ref?: Obj<_m> | Func<_m> | undefined; } | type _o = { common?: string | undefined; "12"?: number | undefined; ref?: Obj<_o> | Func<_o> | undefined; } | type _p = { common?: string | undefined; "13"?: number | undefined; ref?: Obj<_p> | Func<_p> | undefined; } | type _q = { common?: string | undefined; "14"?: number | undefined; ref?: Obj<_q> | Func<_q> | undefined; } | type _r = { common?: string | undefined; "15"?: number | undefined; ref?: Obj<_r> | Func<_r> | undefined; } | type _s = { common?: string | undefined; "16"?: number | undefined; ref?: Obj<_s> | Func<_s> | undefined; } | type _t = { common?: string | undefined; "17"?: number | undefined; ref?: Obj<_t> | Func<_t> | undefined; }>
>{ common: "ok", ref: x => console.log(x) } : { common: string; ref: (x: any) => void; }
>common : string
>"ok" : "ok"
>ref : (x: any) => void
>x => console.log(x) : (x: any) => void
>x : any
>console.log(x) : void
>console.log : (message?: any, ...optionalParams: any[]) => void
>console : Console
>log : (message?: any, ...optionalParams: any[]) => void
>x : any

