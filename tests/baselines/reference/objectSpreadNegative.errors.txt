tests/cases/conformance/types/spread/objectSpreadNegative.ts(11,21): error TS2339: Property 'x' does not exist on type '{}'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(14,5): error TS2322: Type '{ sn?: string | number; }' is not assignable to type '{ sn: string | number; }'.
  Property 'sn' is optional in type '{ sn?: string | number; }' but required in type '{ sn: string | number; }'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(20,5): error TS2322: Type '{ s: string; }' is not assignable to type '{ s: string; b: boolean; }'.
  Property 'b' is missing in type '{ s: string; }'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(22,1): error TS2322: Type 'Bool' is not assignable to type '{ s: string; b: boolean; }'.
  Property 's' is missing in type 'Bool'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(25,36): error TS2300: Duplicate identifier 'b'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(25,53): error TS2300: Duplicate identifier 'b'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(30,12): error TS2339: Property 'null' does not exist on type '{}'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(32,17): error TS2339: Property 'undefined' does not exist on type '{}'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(35,19): error TS2698: Spread types may only be created from object types.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(36,19): error TS2698: Spread types may only be created from object types.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(38,20): error TS2698: Spread types may only be created from object types.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(40,19): error TS2698: Spread types may only be created from object types.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(45,1): error TS2349: Cannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(50,11): error TS2339: Property 'a' does not exist on type 'spread(object)'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(54,12): error TS2339: Property 'b' does not exist on type '{}'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(60,9): error TS2339: Property 'm' does not exist on type '{ p: number; }'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(63,1): error TS2349: Cannot invoke an expression whose type lacks a call signature. Type '{ x: number; }' has no compatible call signatures.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(64,1): error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(69,9): error TS2322: Type 'spread(T & V)' is not assignable to type 'spread(T & U)'.
tests/cases/conformance/types/spread/objectSpreadNegative.ts(71,5): error TS2322: Type 'spread(U)' is not assignable to type 'U'.


==== tests/cases/conformance/types/spread/objectSpreadNegative.ts (20 errors) ====
    let o = { a: 1, b: 'no' }
    
    /// private propagates
    class PrivateOptionalX {
        private x?: number;
    }
    class PublicX {
        public x: number;
    }
    let o2: spread(PublicX, PrivateOptionalX);
    let sn: number = o2.x; // error, x is private
                        ~
!!! error TS2339: Property 'x' does not exist on type '{}'.
    let optionalString: { sn?: string };
    let optionalNumber: { sn?: number };
    let allOptional: { sn: string | number } = { ...optionalString, ...optionalNumber };
        ~~~~~~~~~~~
!!! error TS2322: Type '{ sn?: string | number; }' is not assignable to type '{ sn: string | number; }'.
!!! error TS2322:   Property 'sn' is optional in type '{ sn?: string | number; }' but required in type '{ sn: string | number; }'.
    // error, 'sn' is optional in source, required in target
    
    // assignability as target
    interface Bool { b: boolean };
    interface Str { s: string };
    let spread: spread(Bool, Str) = { s: "foo" };  // error, missing 'b'
        ~~~~~~
!!! error TS2322: Type '{ s: string; }' is not assignable to type '{ s: string; b: boolean; }'.
!!! error TS2322:   Property 'b' is missing in type '{ s: string; }'.
    let b: Bool;
    spread = b; // error, missing 's'
    ~~~~~~
!!! error TS2322: Type 'Bool' is not assignable to type '{ s: string; b: boolean; }'.
!!! error TS2322:   Property 's' is missing in type 'Bool'.
    
    // literal repeats are not allowed, but spread repeats are fine
    let duplicated = { b: 'bad', ...o, b: 'bad', ...o2, b: 'bad' }
                                       ~
!!! error TS2300: Duplicate identifier 'b'.
                                                        ~
!!! error TS2300: Duplicate identifier 'b'.
    let duplicatedSpread = { ...o, ...o }
    
    // null and undefined are just skipped
    let spreadNull = { ...null };
    spreadNull.null;
               ~~~~
!!! error TS2339: Property 'null' does not exist on type '{}'.
    let spreadUndefined = { ...undefined };
    spreadUndefined.undefined;
                    ~~~~~~~~~
!!! error TS2339: Property 'undefined' does not exist on type '{}'.
    
    // primitives are not allowed
    let spreadNum = { ...12 };
                      ~~~~~
!!! error TS2698: Spread types may only be created from object types.
    let spreadSum = { ...1 + 1 };
                      ~~~~~~~~
!!! error TS2698: Spread types may only be created from object types.
    spreadSum.toFixed(); // error, no methods from number
    let spreadBool = { ...false };
                       ~~~~~~~~
!!! error TS2698: Spread types may only be created from object types.
    spreadBool.valueOf(); // error, what were you thinking?
    let spreadStr = { ...'foo' };
                      ~~~~~~~~
!!! error TS2698: Spread types may only be created from object types.
    spreadStr.length; // error, no 'length'
    spreadStr.charAt(1); // error, no methods either
    // functions are skipped
    let spreadFunc = { ...function () { } }
    spreadFunc(); // error, no call signature
    ~~~~~~~~~~~~
!!! error TS2349: Cannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.
    
    // non primitive produces empty object
    let obj: object = { a: 123 };
    let spreadObj = { ...obj };
    spreadObj.a; // error 'a' is not in {}
              ~
!!! error TS2339: Property 'a' does not exist on type 'spread(object)'.
    
    // write-only properties get skipped
    let setterOnly = { ...{ set b (bad: number) { } } };
    setterOnly.b = 12; // error, 'b' does not exist
               ~
!!! error TS2339: Property 'b' does not exist on type '{}'.
    
    // methods are skipped because they aren't enumerable
    class C { p = 1; m() { } }
    let c: C = new C()
    let spreadC = { ...c }
    spreadC.m(); // error 'm' is not in '{ ... c }'
            ~
!!! error TS2339: Property 'm' does not exist on type '{ p: number; }'.
    
    let callableConstructableSpread: spread(PublicX, { (n: number): number, new (p: number) });
    callableConstructableSpread(12); // error, no call signature
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2349: Cannot invoke an expression whose type lacks a call signature. Type '{ x: number; }' has no compatible call signatures.
    new callableConstructableSpread(12); // error, no construct signature
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.
    
    function override<T,U,V>(initial: U, override: U, t: T, v: V): U {
        // { ...T & V } is not assignable to { ...T & U }
        let tvs: spread(T & V);
        let mistake: spread(T & U) = tvs;
            ~~~~~~~
!!! error TS2322: Type 'spread(T & V)' is not assignable to type 'spread(T & U)'.
        // { ...U } is not assignable to U
        return { ...initial, ...override };
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type 'spread(U)' is not assignable to type 'U'.
    }
    