//// [tests/cases/compiler/excessPropertyCheckSpreadConditionalInlineAndVar.ts] ////

=== excessPropertyCheckSpreadConditionalInlineAndVar.ts ===
declare const someCondition: boolean;
>someCondition : Symbol(someCondition, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 0, 13))

type MyObj = { foo: number; bar: number };
>MyObj : Symbol(MyObj, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 0, 37))
>foo : Symbol(foo, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 1, 14))
>bar : Symbol(bar, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 1, 27))

const containsExcessProperty = { bar: 2, excessProperty: "A" };
>containsExcessProperty : Symbol(containsExcessProperty, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 2, 5))
>bar : Symbol(bar, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 2, 32))
>excessProperty : Symbol(excessProperty, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 2, 40))

// no epc right now :(
const a4 : MyObj = {
>a4 : Symbol(a4, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 5, 5))
>MyObj : Symbol(MyObj, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 0, 37))

    foo: 1,
>foo : Symbol(foo, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 5, 20))

    ...(someCondition ? { bar: 2, excessProperty: "A" } : containsExcessProperty),
>someCondition : Symbol(someCondition, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 0, 13))
>bar : Symbol(bar, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 7, 25))
>excessProperty : Symbol(excessProperty, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 7, 33))
>containsExcessProperty : Symbol(containsExcessProperty, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 2, 5))

};

const a5 : MyObj = {
>a5 : Symbol(a5, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 10, 5))
>MyObj : Symbol(MyObj, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 0, 37))

    foo: 1,
>foo : Symbol(foo, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 10, 20))

    ...(someCondition ? containsExcessProperty : { bar: 2, excessProperty: "A" }),
>someCondition : Symbol(someCondition, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 0, 13))
>containsExcessProperty : Symbol(containsExcessProperty, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 2, 5))
>bar : Symbol(bar, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 12, 50))
>excessProperty : Symbol(excessProperty, Decl(excessPropertyCheckSpreadConditionalInlineAndVar.ts, 12, 58))

};
