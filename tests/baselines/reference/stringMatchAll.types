//// [tests/cases/compiler/stringMatchAll.ts] ////

=== stringMatchAll.ts ===
const matches = "matchAll".matchAll(/\w/g);
>matches : IterableIterator<RegExpExecArray, void>
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"matchAll".matchAll(/\w/g) : IterableIterator<RegExpExecArray, void>
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"matchAll".matchAll : (regexp: RegExp) => IterableIterator<RegExpExecArray, void>
>                    : ^      ^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"matchAll" : "matchAll"
>           : ^^^^^^^^^^
>matchAll : (regexp: RegExp) => IterableIterator<RegExpExecArray, void>
>         : ^      ^^      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>/\w/g : RegExp
>      : ^^^^^^

const array = [...matches];
>array : RegExpExecArray[]
>      : ^^^^^^^^^^^^^^^^^
>[...matches] : RegExpExecArray[]
>             : ^^^^^^^^^^^^^^^^^
>...matches : RegExpExecArray
>           : ^^^^^^^^^^^^^^^
>matches : IterableIterator<RegExpExecArray, void>
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

const { index, input } = array[0];
>index : number
>      : ^^^^^^
>input : string
>      : ^^^^^^
>array[0] : RegExpExecArray
>         : ^^^^^^^^^^^^^^^
>array : RegExpExecArray[]
>      : ^^^^^^^^^^^^^^^^^
>0 : 0
>  : ^

