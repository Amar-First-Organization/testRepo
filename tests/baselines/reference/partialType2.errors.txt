<<<<<<< 57a95d24ca1cca41e009f5eb0285db73cd3b2bff
<<<<<<< d147616ccc57b7c9f6418074c8edffd3ee258961
tests/cases/compiler/partialType2.ts(10,5): error TS2322: Type 'partial T' is not assignable to type 'T'.
=======
tests/cases/compiler/partialType2.ts(8,12): error TS2304: Cannot find name 'subset'.
tests/cases/compiler/partialType2.ts(8,19): error TS1005: '=' expected.
tests/cases/compiler/partialType2.ts(8,19): error TS2693: 'T' only refers to a type, but is being used as a value here.
>>>>>>> Partial Types (#11233)
=======
tests/cases/compiler/partialType2.ts(10,5): error TS2322: Type 'partial T' is not assignable to type 'T'.
>>>>>>> Update test
tests/cases/compiler/partialType2.ts(16,5): error TS2322: Type '{ name: string; length: number; foo: number; }' is not assignable to type 'partial T'.
tests/cases/compiler/partialType2.ts(18,11): error TS2339: Property 'name' does not exist on type 'partial T'.


<<<<<<< 57a95d24ca1cca41e009f5eb0285db73cd3b2bff
<<<<<<< d147616ccc57b7c9f6418074c8edffd3ee258961
==== tests/cases/compiler/partialType2.ts (3 errors) ====
=======
==== tests/cases/compiler/partialType2.ts (5 errors) ====
>>>>>>> Partial Types (#11233)
=======
==== tests/cases/compiler/partialType2.ts (3 errors) ====
>>>>>>> Update test
    interface State {
        name: string;
        length: number;
        foo?: number;
    }
    
    function doSomething1<T>(x: T) {
<<<<<<< 57a95d24ca1cca41e009f5eb0285db73cd3b2bff
<<<<<<< d147616ccc57b7c9f6418074c8edffd3ee258961
        let y: partial T = <any>null;
        y = x; // Should be OK
        x = y; // Error
        ~
!!! error TS2322: Type 'partial T' is not assignable to type 'T'.
=======
        let y: subset T = <any>null;
               ~~~~~~
!!! error TS2304: Cannot find name 'subset'.
                      ~
!!! error TS1005: '=' expected.
                      ~
!!! error TS2693: 'T' only refers to a type, but is being used as a value here.
        y = x; // Should be OK
        x = y; // Error
>>>>>>> Partial Types (#11233)
=======
        let y: partial T = <any>null;
        y = x; // Should be OK
        x = y; // Error
        ~
!!! error TS2322: Type 'partial T' is not assignable to type 'T'.
>>>>>>> Update test
    }
    
    function doSomething2<T extends State>(x: T) {
        let y: partial T = <any>null;
        // Should error
        y = { name: '', length: 10, foo: 3};
        ~
!!! error TS2322: Type '{ name: string; length: number; foo: number; }' is not assignable to type 'partial T'.
        y = x; // OK
        if (y.name) {
              ~~~~
!!! error TS2339: Property 'name' does not exist on type 'partial T'.
    
        }
    }
     let ss: partial State;
     if (ss.foo) {
              
     }
    